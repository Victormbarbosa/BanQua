/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Classes.Asignatura;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import Classes.Metodos;
import Classes.Pregunta;
import Classes.Profesor;
import Classes.Tema;
import static Frames.InicioSeccion.nombre_profesor;
import static Frames.InicioSeccion.usuario;
import java.awt.Desktop;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.ThreadLocalRandom;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.TextAlignment;
import org.apache.poi.xwpf.usermodel.UnderlinePatterns;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;

/**
 *
 * @author danie
 */
public class Principal extends javax.swing.JFrame {

    //Variables para la creacion de examen
    static String titulo = "aaa";
    static String nom;
    static String mat;
    static String ev;
    static String fec;
    static String sem;
    static String cod;
    static XWPFDocument documento = new XWPFDocument();
    static int num;
    int pop;
    static ArrayList<Pregunta> person = new ArrayList();
    static int i = 0;
    static int jud;
    //Variables para mostrar asignatura, tema y preguntas.
    static boolean sw1 = true; //boolean para asignaturas
    static boolean sw2 = true; //boolean para temas
    static boolean sw3 = true; //boolean para preguntas
    Profesor profesor = new Profesor();
    DefaultTableModel modelo;
    Boolean Desbloqueo = false;// Varaible para tapar huecos

    public Principal() {
        initComponents();
        Metodos met = new Metodos();
        Image foto = getToolkit().getImage(met.EncontrarFoto("Usuario.txt", usuario));
        foto = foto.getScaledInstance(Foto1.getWidth(), Foto1.getHeight(), Image.SCALE_DEFAULT);
        Foto1.setIcon(new ImageIcon(foto));
        Foto2.setIcon(new ImageIcon(foto));
//        profesor.ActualizarDatos();
        this.Nombre1.setText(InicioSeccion.nombre_profesor);
        this.Cedula1.setText(met.EncontrarCedula("Usuario.txt", InicioSeccion.usuario));
        this.Usuario1.setText(usuario);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        IconCerrar = new javax.swing.JLabel();
        PanelMenu = new javax.swing.JPanel();
        Foto2 = new javax.swing.JLabel();
        BottonHome = new rsbuttom.RSButtonMetro();
        BottonPerfil = new rsbuttom.RSButtonMetro();
        BottonEdiInfo = new rsbuttom.RSButtonMetro();
        BottonVerInfo = new rsbuttom.RSButtonMetro();
        BottonGenrExam = new rsbuttom.RSButtonMetro();
        jPanel20 = new javax.swing.JPanel();
        Menu = new javax.swing.JTabbedPane();
        Home = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        Perfil = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        Foto1 = new javax.swing.JLabel();
        BottonEditFoto = new rsbuttom.RSButtonMetro();
        ButtonGuardarFoto = new rsbuttom.RSButtonMetro();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Nombre1 = new javax.swing.JTextField();
        Cedula1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Usuario1 = new javax.swing.JTextField();
        BottonCamContra = new rsbuttom.RSButtonMetro();
        CambioClave = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ValNuevaContra = new javax.swing.JPasswordField();
        NuevaContra = new javax.swing.JPasswordField();
        ButtonCambio = new rsbuttom.RSButtonMetro();
        jLabel27 = new javax.swing.JLabel();
        Agregar = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        TituloMateria = new javax.swing.JLabel();
        FotoMateria = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        FotoPreguntas = new javax.swing.JLabel();
        TituloPreguntas = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        TituloTemas = new javax.swing.JLabel();
        FotoTemas = new javax.swing.JLabel();
        Asignatura = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Descripcion = new javax.swing.JTextArea();
        NombreDelaAsignatura = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        AgregarDescripcion = new javax.swing.JCheckBox();
        addAsig = new rsbuttom.RSButtonMetro();
        jLabel5 = new javax.swing.JLabel();
        codMat = new javax.swing.JTextField();
        Tema = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        NombreDelTema = new javax.swing.JTextField();
        AgregarDescripcionTema = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DescripcionTema = new javax.swing.JTextArea();
        ButtonAgregarTema = new rsbuttom.RSButtonMetro();
        jLabel17 = new javax.swing.JLabel();
        ComboAsignatura = new javax.swing.JComboBox<>();
        Pregunta = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        ComboBoxTemas = new javax.swing.JComboBox<>();
        ComboNivel = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        Preguntas = new javax.swing.JTextArea();
        jLabel21 = new javax.swing.JLabel();
        ButtonAgregarPregunta = new rsbuttom.RSButtonMetro();
        ComboAsignaturaS = new javax.swing.JComboBox<>();
        Ver = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        ButtonMostrarIZQ = new rsbuttom.RSButtonMetro();
        jLabel35 = new javax.swing.JLabel();
        jPanel16 = new javax.swing.JPanel();
        Asig2 = new javax.swing.JComboBox<>();
        ButtonMostrarCENT = new rsbuttom.RSButtonMetro();
        jLabel30 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        ButtonGenerarInforme = new rsbuttom.RSButtonMetro();
        jPanel18 = new javax.swing.JPanel();
        Asig3 = new javax.swing.JComboBox<>();
        tema = new javax.swing.JComboBox<>();
        nivel = new javax.swing.JComboBox<>();
        ButtonMostrarDER = new rsbuttom.RSButtonMetro();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ButtonGenerarInforme1 = new rsbuttom.RSButtonMetro();
        ButtonGenerarInforme2 = new rsbuttom.RSButtonMetro();
        ButtonGenerarInforme3 = new rsbuttom.RSButtonMetro();
        jScrollPane4 = new javax.swing.JScrollPane();
        mostrar = new javax.swing.JTable();
        InformeTablas = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        Info_Examen = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        generarExamen = new rsbuttom.RSButtonMetro();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        temas = new javax.swing.JComboBox<>();
        ndif = new javax.swing.JComboBox<>();
        Generar = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        preg = new javax.swing.JTextField();
        fecha = new com.toedter.calendar.JDateChooser();
        jLabel26 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        nombre = new javax.swing.JTextField();
        evaluacion = new javax.swing.JTextField();
        asigna = new javax.swing.JComboBox<>();
        ButtonAddPreg = new rsbuttom.RSButtonMetro();
        jLabel4 = new javax.swing.JLabel();
        seme = new javax.swing.JComboBox<>();
        AvisoNumeros = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1050, 800));

        jPanel2.setBackground(new java.awt.Color(0, 103, 142));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel2.setLayout(new java.awt.BorderLayout());

        IconCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8-cerrar-ventana-40.png"))); // NOI18N
        IconCerrar.setToolTipText("");
        IconCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IconCerrarMouseClicked(evt);
            }
        });
        jPanel2.add(IconCerrar, java.awt.BorderLayout.LINE_END);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);

        PanelMenu.setBackground(new java.awt.Color(0, 103, 142));
        PanelMenu.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        PanelMenu.setPreferredSize(new java.awt.Dimension(217, 502));
        PanelMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Foto2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Foto2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(0)_256.png"))); // NOI18N
        PanelMenu.add(Foto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 180, 200));

        BottonHome.setBackground(new java.awt.Color(128, 156, 237));
        BottonHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_2302(0)_48.png"))); // NOI18N
        BottonHome.setText("Home             ");
        BottonHome.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonHome.setColorHover(new java.awt.Color(128, 188, 255));
        BottonHome.setColorNormal(new java.awt.Color(128, 156, 237));
        BottonHome.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonHome.setFocusPainted(false);
        BottonHome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonHome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonHomeActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 183, 42));

        BottonPerfil.setBackground(new java.awt.Color(128, 156, 237));
        BottonPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(0)_48.png"))); // NOI18N
        BottonPerfil.setText("Perfil");
        BottonPerfil.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonPerfil.setColorHover(new java.awt.Color(128, 188, 255));
        BottonPerfil.setColorNormal(new java.awt.Color(128, 156, 237));
        BottonPerfil.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonPerfil.setFocusPainted(false);
        BottonPerfil.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonPerfil.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonPerfilActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 183, 42));

        BottonEdiInfo.setBackground(new java.awt.Color(128, 156, 237));
        BottonEdiInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(2)_48.png"))); // NOI18N
        BottonEdiInfo.setText("Añadir        ");
        BottonEdiInfo.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonEdiInfo.setColorHover(new java.awt.Color(128, 188, 255));
        BottonEdiInfo.setColorNormal(new java.awt.Color(128, 156, 237));
        BottonEdiInfo.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonEdiInfo.setFocusPainted(false);
        BottonEdiInfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonEdiInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonEdiInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonEdiInfoActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonEdiInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 183, 42));

        BottonVerInfo.setBackground(new java.awt.Color(128, 156, 237));
        BottonVerInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_e70a(1)_48.png"))); // NOI18N
        BottonVerInfo.setText("Ver Información");
        BottonVerInfo.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonVerInfo.setColorHover(new java.awt.Color(128, 188, 255));
        BottonVerInfo.setColorNormal(new java.awt.Color(128, 156, 237));
        BottonVerInfo.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonVerInfo.setFocusPainted(false);
        BottonVerInfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonVerInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonVerInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonVerInfoActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonVerInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 183, 42));

        BottonGenrExam.setBackground(new java.awt.Color(128, 156, 237));
        BottonGenrExam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(0)_48.png"))); // NOI18N
        BottonGenrExam.setText("Crear Examen");
        BottonGenrExam.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonGenrExam.setColorHover(new java.awt.Color(128, 188, 255));
        BottonGenrExam.setColorNormal(new java.awt.Color(128, 156, 237));
        BottonGenrExam.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonGenrExam.setFocusPainted(false);
        BottonGenrExam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonGenrExam.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonGenrExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonGenrExamActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonGenrExam, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 183, 42));

        getContentPane().add(PanelMenu, java.awt.BorderLayout.LINE_START);

        jPanel20.setLayout(new java.awt.CardLayout(-9, -28));

        Menu.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        Home.setBackground(new java.awt.Color(204, 204, 204));
        Home.setLayout(new java.awt.BorderLayout());

        jPanel8.setBackground(new java.awt.Color(0, 87, 116));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1059, Short.MAX_VALUE)
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 544, Short.MAX_VALUE)
        );

        Home.add(jPanel8, java.awt.BorderLayout.CENTER);

        jPanel9.setBackground(new java.awt.Color(0, 87, 116));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1059, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 288, Short.MAX_VALUE)
        );

        Home.add(jPanel9, java.awt.BorderLayout.NORTH);

        Menu.addTab("Home", Home);

        Perfil.setBackground(new java.awt.Color(204, 204, 204));
        Perfil.setLayout(new java.awt.BorderLayout());

        jPanel6.setBackground(new java.awt.Color(0, 87, 116));
        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        Foto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Foto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(0)_256.png"))); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = -56;
        gridBagConstraints.ipady = 34;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        jPanel6.add(Foto1, gridBagConstraints);

        BottonEditFoto.setText("Editar foto");
        BottonEditFoto.setColorHover(new java.awt.Color(128, 188, 255));
        BottonEditFoto.setColorNormal(new java.awt.Color(128, 156, 237));
        BottonEditFoto.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonEditFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonEditFotoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 57;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(20, 17, 15, 18);
        jPanel6.add(BottonEditFoto, gridBagConstraints);

        ButtonGuardarFoto.setText("Guardar Foto");
        ButtonGuardarFoto.setColorHover(new java.awt.Color(128, 188, 255));
        ButtonGuardarFoto.setColorNormal(new java.awt.Color(128, 156, 237));
        ButtonGuardarFoto.setColorPressed(new java.awt.Color(128, 140, 207));
        ButtonGuardarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGuardarFotoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 57;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.insets = new java.awt.Insets(19, 17, 15, 18);
        jPanel6.add(ButtonGuardarFoto, gridBagConstraints);

        Perfil.add(jPanel6, java.awt.BorderLayout.LINE_START);

        jPanel1.setLayout(new java.awt.GridLayout(2, 0));

        jPanel7.setBackground(new java.awt.Color(0, 87, 116));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Nombre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(16, 10, 14, 10);
        jPanel7.add(jLabel1, gridBagConstraints);

        Nombre1.setEditable(false);
        Nombre1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Nombre1.setForeground(new java.awt.Color(255, 255, 255));
        Nombre1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Nombre1.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 201;
        gridBagConstraints.insets = new java.awt.Insets(7, 1, 11, 25);
        jPanel7.add(Nombre1, gridBagConstraints);

        Cedula1.setEditable(false);
        Cedula1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Cedula1.setForeground(new java.awt.Color(255, 255, 255));
        Cedula1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cedula1.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 199;
        gridBagConstraints.insets = new java.awt.Insets(8, 2, 16, 26);
        jPanel7.add(Cedula1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Cedula: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(16, 12, 20, 10);
        jPanel7.add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Nickname: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(13, 10, 17, 10);
        jPanel7.add(jLabel3, gridBagConstraints);

        Usuario1.setEditable(false);
        Usuario1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Usuario1.setForeground(new java.awt.Color(255, 255, 255));
        Usuario1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Usuario1.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 199;
        gridBagConstraints.insets = new java.awt.Insets(4, 1, 13, 25);
        jPanel7.add(Usuario1, gridBagConstraints);

        BottonCamContra.setText("Cambiar contraseña");
        BottonCamContra.setColorHover(new java.awt.Color(128, 188, 255));
        BottonCamContra.setColorNormal(new java.awt.Color(128, 156, 237));
        BottonCamContra.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonCamContra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonCamContraActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 40;
        gridBagConstraints.weightx = 0.1;
        gridBagConstraints.insets = new java.awt.Insets(13, 41, 17, 45);
        jPanel7.add(BottonCamContra, gridBagConstraints);

        jPanel1.add(jPanel7);

        CambioClave.setBackground(new java.awt.Color(0, 87, 116));
        CambioClave.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        CambioClave.setLayout(new java.awt.GridBagLayout());

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Validar contraseña:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 5, 8);
        CambioClave.add(jLabel7, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Ingrese la nueva contraseña");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 108;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        CambioClave.add(jLabel8, gridBagConstraints);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Contraseña:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 18, 0);
        CambioClave.add(jLabel9, gridBagConstraints);

        ValNuevaContra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ValNuevaContraKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(12, 17, 8, 22);
        CambioClave.add(ValNuevaContra, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.insets = new java.awt.Insets(12, 17, 11, 22);
        CambioClave.add(NuevaContra, gridBagConstraints);

        ButtonCambio.setText("Hacer Cambio");
        ButtonCambio.setColorHover(new java.awt.Color(128, 188, 255));
        ButtonCambio.setColorNormal(new java.awt.Color(128, 156, 237));
        ButtonCambio.setColorPressed(new java.awt.Color(128, 140, 207));
        ButtonCambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCambioActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.insets = new java.awt.Insets(3, 40, 7, 44);
        CambioClave.add(ButtonCambio, gridBagConstraints);

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 204, 0));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Las contraseñas no son iguales.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 61;
        gridBagConstraints.weightx = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(6, 40, 11, 42);
        CambioClave.add(jLabel27, gridBagConstraints);

        jPanel1.add(CambioClave);

        Perfil.add(jPanel1, java.awt.BorderLayout.CENTER);

        Menu.addTab("Perfil", Perfil);

        Agregar.setBackground(new java.awt.Color(204, 204, 204));
        Agregar.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBackground(new java.awt.Color(0, 87, 116));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setLayout(new java.awt.BorderLayout());

        TituloMateria.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TituloMateria.setForeground(new java.awt.Color(255, 255, 255));
        TituloMateria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloMateria.setText("Asignatura");
        TituloMateria.setPreferredSize(new java.awt.Dimension(83, 32));
        jPanel3.add(TituloMateria, java.awt.BorderLayout.PAGE_START);

        FotoMateria.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FotoMateria.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8-revista-100.png"))); // NOI18N
        FotoMateria.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FotoMateriaMouseClicked(evt);
            }
        });
        jPanel3.add(FotoMateria, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 186;
        gridBagConstraints.ipady = 84;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 14, 18);
        Agregar.add(jPanel3, gridBagConstraints);

        jPanel4.setBackground(new java.awt.Color(0, 87, 116));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setLayout(new java.awt.BorderLayout());

        FotoPreguntas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FotoPreguntas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8-grupo-de-preguntas-100.png"))); // NOI18N
        FotoPreguntas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FotoPreguntasMouseClicked(evt);
            }
        });
        jPanel4.add(FotoPreguntas, java.awt.BorderLayout.CENTER);

        TituloPreguntas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TituloPreguntas.setForeground(new java.awt.Color(255, 255, 255));
        TituloPreguntas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloPreguntas.setText("Preguntas");
        TituloPreguntas.setPreferredSize(new java.awt.Dimension(78, 32));
        jPanel4.add(TituloPreguntas, java.awt.BorderLayout.PAGE_START);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 186;
        gridBagConstraints.ipady = 89;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 14, 18);
        Agregar.add(jPanel4, gridBagConstraints);

        jPanel5.setBackground(new java.awt.Color(0, 87, 116));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new java.awt.BorderLayout());

        TituloTemas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        TituloTemas.setForeground(new java.awt.Color(255, 255, 255));
        TituloTemas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TituloTemas.setText("Temas");
        TituloTemas.setPreferredSize(new java.awt.Dimension(52, 32));
        jPanel5.add(TituloTemas, java.awt.BorderLayout.PAGE_START);

        FotoTemas.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        FotoTemas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icons8-temas-160.png"))); // NOI18N
        FotoTemas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FotoTemasMouseClicked(evt);
            }
        });
        jPanel5.add(FotoTemas, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 136;
        gridBagConstraints.ipady = 24;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 3.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 14, 18);
        Agregar.add(jPanel5, gridBagConstraints);

        Menu.addTab("Agregar", Agregar);

        Asignatura.setBackground(new java.awt.Color(236, 236, 236));
        Asignatura.setLayout(new java.awt.GridBagLayout());

        jPanel12.setBackground(new java.awt.Color(0, 87, 116));
        jPanel12.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Agregar asigantura");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 237;
        gridBagConstraints.ipady = 23;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 20);
        jPanel12.add(jLabel11, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Descripcion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.insets = new java.awt.Insets(7, 20, 3, 9);
        jPanel12.add(jLabel12, gridBagConstraints);

        Descripcion.setColumns(20);
        Descripcion.setLineWrap(true);
        Descripcion.setRows(5);
        jScrollPane1.setViewportView(Descripcion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 307;
        gridBagConstraints.ipady = 127;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 18, 0, 20);
        jPanel12.add(jScrollPane1, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 174;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.insets = new java.awt.Insets(30, 8, 0, 20);
        jPanel12.add(NombreDelaAsignatura, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Nombre de la asigantura:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(30, 20, 0, 0);
        jPanel12.add(jLabel13, gridBagConstraints);

        AgregarDescripcion.setBackground(new java.awt.Color(0, 102, 102));
        AgregarDescripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        AgregarDescripcion.setForeground(new java.awt.Color(255, 255, 255));
        AgregarDescripcion.setText("Agregar descripcion");
        AgregarDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarDescripcionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 12, 8);
        jPanel12.add(AgregarDescripcion, gridBagConstraints);

        addAsig.setText("Agregar");
        addAsig.setColorNormal(new java.awt.Color(0, 153, 153));
        addAsig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAsigActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 109;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.insets = new java.awt.Insets(15, 10, 33, 0);
        jPanel12.add(addAsig, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Codigo de la asignatura:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(22, 20, 10, 2);
        jPanel12.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 177;
        gridBagConstraints.insets = new java.awt.Insets(20, 6, 0, 20);
        jPanel12.add(codMat, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 79;
        gridBagConstraints.weighty = 0.2;
        gridBagConstraints.insets = new java.awt.Insets(0, 110, 0, 150);
        Asignatura.add(jPanel12, gridBagConstraints);

        Menu.addTab("Asigantura", Asignatura);

        Tema.setBackground(new java.awt.Color(247, 243, 243));
        Tema.setLayout(new java.awt.GridBagLayout());

        jPanel13.setBackground(new java.awt.Color(0, 87, 116));
        jPanel13.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel13.setLayout(new java.awt.GridBagLayout());

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Seleccione la Asignatura a la cual pertenece el Tema.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.insets = new java.awt.Insets(30, 20, 0, 0);
        jPanel13.add(jLabel14, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Nombre del Tema:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 17;
        gridBagConstraints.insets = new java.awt.Insets(12, 10, 7, 0);
        jPanel13.add(jLabel15, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 234;
        gridBagConstraints.weightx = 1.7;
        gridBagConstraints.insets = new java.awt.Insets(21, 10, 17, 10);
        jPanel13.add(NombreDelTema, gridBagConstraints);

        AgregarDescripcionTema.setBackground(new java.awt.Color(0, 87, 116));
        AgregarDescripcionTema.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AgregarDescripcionTema.setForeground(new java.awt.Color(255, 255, 255));
        AgregarDescripcionTema.setText("Agregar descripcion");
        AgregarDescripcionTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarDescripcionTemaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        jPanel13.add(AgregarDescripcionTema, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Descripcion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.insets = new java.awt.Insets(27, 20, 0, 0);
        jPanel13.add(jLabel16, gridBagConstraints);

        DescripcionTema.setColumns(20);
        DescripcionTema.setLineWrap(true);
        DescripcionTema.setRows(5);
        jScrollPane2.setViewportView(DescripcionTema);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 306;
        gridBagConstraints.ipady = 107;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(15, 16, 16, 17);
        jPanel13.add(jScrollPane2, gridBagConstraints);

        ButtonAgregarTema.setText("Agregar");
        ButtonAgregarTema.setColorHover(new java.awt.Color(128, 188, 255));
        ButtonAgregarTema.setColorNormal(new java.awt.Color(128, 156, 237));
        ButtonAgregarTema.setColorPressed(new java.awt.Color(128, 140, 207));
        ButtonAgregarTema.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ButtonAgregarTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAgregarTemaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 117;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.insets = new java.awt.Insets(14, 0, 14, 15);
        jPanel13.add(ButtonAgregarTema, gridBagConstraints);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Agregar Tema");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 282;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 10);
        jPanel13.add(jLabel17, gridBagConstraints);

        ComboAsignatura.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboAsignatura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 113;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        jPanel13.add(ComboAsignatura, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 14;
        gridBagConstraints.ipady = 153;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 127, 5, 178);
        Tema.add(jPanel13, gridBagConstraints);

        Menu.addTab("Tema", Tema);

        Pregunta.setBackground(new java.awt.Color(255, 255, 255));
        Pregunta.setLayout(new java.awt.GridBagLayout());

        jPanel14.setBackground(new java.awt.Color(0, 87, 116));
        jPanel14.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel14.setLayout(new java.awt.GridBagLayout());

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Escriba la pregunta aqui.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 37;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.insets = new java.awt.Insets(12, 20, 1, 0);
        jPanel14.add(jLabel10, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("Asignatura");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 96;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        jPanel14.add(jLabel18, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("Temas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 190;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel14.add(jLabel19, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Agregar Pregunta");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 246;
        gridBagConstraints.ipady = 23;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 10);
        jPanel14.add(jLabel20, gridBagConstraints);

        ComboBoxTemas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        ComboBoxTemas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxTemasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 10, 0);
        jPanel14.add(ComboBoxTemas, gridBagConstraints);

        ComboNivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Facil", "Medio", "Dificil" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 127;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(3, 20, 8, 0);
        jPanel14.add(ComboNivel, gridBagConstraints);

        Preguntas.setColumns(20);
        Preguntas.setLineWrap(true);
        Preguntas.setRows(5);
        jScrollPane3.setViewportView(Preguntas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 291;
        gridBagConstraints.ipady = 85;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 8, 0, 6);
        jPanel14.add(jScrollPane3, gridBagConstraints);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 255, 255));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("Dificultad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 175;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel14.add(jLabel21, gridBagConstraints);

        ButtonAgregarPregunta.setBackground(new java.awt.Color(0, 153, 153));
        ButtonAgregarPregunta.setText("Agregar Pregunta");
        ButtonAgregarPregunta.setColorNormal(new java.awt.Color(0, 153, 153));
        ButtonAgregarPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAgregarPreguntaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 13;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 10, 12);
        jPanel14.add(ButtonAgregarPregunta, gridBagConstraints);

        ComboAsignaturaS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        ComboAsignaturaS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboAsignaturaSActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.insets = new java.awt.Insets(4, 20, 12, 0);
        jPanel14.add(ComboAsignaturaS, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 173;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 130, 10, 184);
        Pregunta.add(jPanel14, gridBagConstraints);

        Menu.addTab("Pregunta", Pregunta);

        Ver.setBackground(new java.awt.Color(204, 204, 204));
        Ver.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBackground(new java.awt.Color(0, 87, 116));
        jPanel11.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ButtonMostrarIZQ.setText("Mostrar ");
        ButtonMostrarIZQ.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        ButtonMostrarIZQ.setColorNormal(new java.awt.Color(0, 153, 153));
        ButtonMostrarIZQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMostrarIZQActionPerformed(evt);
            }
        });
        jPanel11.add(ButtonMostrarIZQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 170, 30));

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(255, 255, 255));
        jLabel35.setText("Todas las Asignaturas");
        jPanel11.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 160, -1));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 240, 0);
        Ver.add(jPanel11, gridBagConstraints);

        jPanel16.setBackground(new java.awt.Color(0, 87, 116));
        jPanel16.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Asig2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        Asig2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Asig2ActionPerformed(evt);
            }
        });
        jPanel16.add(Asig2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 150, -1));

        ButtonMostrarCENT.setText("Mostrar");
        ButtonMostrarCENT.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        ButtonMostrarCENT.setColorNormal(new java.awt.Color(0, 153, 153));
        ButtonMostrarCENT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMostrarCENTActionPerformed(evt);
            }
        });
        jPanel16.add(ButtonMostrarCENT, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 170, 30));

        jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(255, 255, 255));
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel30.setText("Asignatura");
        jPanel16.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 110, -1));

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(255, 255, 255));
        jLabel36.setText("Los temas de una Asig");
        jPanel16.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 160, 20));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 240, 0);
        Ver.add(jPanel16, gridBagConstraints);

        ButtonGenerarInforme.setText("Generar Informe");
        ButtonGenerarInforme.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        ButtonGenerarInforme.setColorNormal(new java.awt.Color(0, 102, 102));
        ButtonGenerarInforme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGenerarInformeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 43;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 27, 1, 20);
        Ver.add(ButtonGenerarInforme, gridBagConstraints);

        jPanel18.setBackground(new java.awt.Color(0, 87, 116));
        jPanel18.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Asig3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        Asig3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Asig3ActionPerformed(evt);
            }
        });
        jPanel18.add(Asig3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 150, -1));

        tema.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        tema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temaActionPerformed(evt);
            }
        });
        jPanel18.add(tema, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 150, -1));

        nivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "1", "2", "3" }));
        jPanel18.add(nivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 150, -1));

        ButtonMostrarDER.setText("Mostar");
        ButtonMostrarDER.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        ButtonMostrarDER.setColorNormal(new java.awt.Color(0, 153, 153));
        ButtonMostrarDER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMostrarDERActionPerformed(evt);
            }
        });
        jPanel18.add(ButtonMostrarDER, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 170, 30));

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(255, 255, 255));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel31.setText("Temas");
        jPanel18.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 180, 20));

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(255, 255, 255));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel32.setText("Dificultad");
        jPanel18.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 180, -1));

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(255, 255, 255));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel33.setText("Asignatura");
        jPanel18.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 130, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Un conjunto de Preguntas");
        jPanel18.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 190, 20));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 5;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 240, 0);
        Ver.add(jPanel18, gridBagConstraints);

        ButtonGenerarInforme1.setText("Generar Informe");
        ButtonGenerarInforme1.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        ButtonGenerarInforme1.setColorNormal(new java.awt.Color(0, 102, 102));
        ButtonGenerarInforme1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGenerarInforme1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 43;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 27, 1, 20);
        Ver.add(ButtonGenerarInforme1, gridBagConstraints);

        ButtonGenerarInforme2.setText("Generar Informe");
        ButtonGenerarInforme2.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        ButtonGenerarInforme2.setColorNormal(new java.awt.Color(0, 102, 102));
        ButtonGenerarInforme2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGenerarInforme2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 43;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 27, 1, 20);
        Ver.add(ButtonGenerarInforme2, gridBagConstraints);

        ButtonGenerarInforme3.setText("Generar Informe");
        ButtonGenerarInforme3.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        ButtonGenerarInforme3.setColorNormal(new java.awt.Color(0, 102, 102));
        ButtonGenerarInforme3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGenerarInforme3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 43;
        gridBagConstraints.ipady = 18;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 27, 1, 20);
        Ver.add(ButtonGenerarInforme3, gridBagConstraints);

        mostrar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(mostrar);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 783;
        gridBagConstraints.ipady = 269;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 56);
        Ver.add(jScrollPane4, gridBagConstraints);

        Menu.addTab("Ver", Ver);

        jPanel19.setBackground(new java.awt.Color(0, 87, 116));
        jPanel19.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1033, Short.MAX_VALUE)
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 804, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout InformeTablasLayout = new javax.swing.GroupLayout(InformeTablas);
        InformeTablas.setLayout(InformeTablasLayout);
        InformeTablasLayout.setHorizontalGroup(
            InformeTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InformeTablasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        InformeTablasLayout.setVerticalGroup(
            InformeTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InformeTablasLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        Menu.addTab("Informe", InformeTablas);

        Info_Examen.setLayout(new java.awt.GridBagLayout());

        jPanel17.setBackground(new java.awt.Color(0, 87, 116));
        jPanel17.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel17.setLayout(new java.awt.GridBagLayout());

        generarExamen.setBackground(new java.awt.Color(0, 153, 153));
        generarExamen.setText("Añadir Pregunta");
        generarExamen.setColorNormal(new java.awt.Color(0, 153, 153));
        generarExamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarExamenActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 117;
        gridBagConstraints.ipady = 17;
        gridBagConstraints.insets = new java.awt.Insets(109, 0, 73, 0);
        jPanel17.add(generarExamen, gridBagConstraints);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(255, 255, 255));
        jLabel28.setText("Tema");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(100, 45, 0, 0);
        jPanel17.add(jLabel28, gridBagConstraints);

        jLabel29.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(255, 255, 255));
        jLabel29.setText("Nivel de dificultad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(30, 45, 0, 0);
        jPanel17.add(jLabel29, gridBagConstraints);

        temas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        temas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                temasActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 158;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(23, 48, 0, 60);
        jPanel17.add(temas, gridBagConstraints);

        ndif.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "1", "2", "3" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 163;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(23, 45, 0, 60);
        jPanel17.add(ndif, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 110;
        gridBagConstraints.ipady = 320;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 130, 0, 181);
        Info_Examen.add(jPanel17, gridBagConstraints);

        Menu.addTab("Info_Examen", Info_Examen);

        Generar.setBackground(new java.awt.Color(204, 204, 204));
        Generar.setLayout(new java.awt.GridBagLayout());

        jPanel15.setBackground(new java.awt.Color(0, 87, 116));
        jPanel15.setLayout(new java.awt.GridBagLayout());

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setText("Numero de preguntas:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.insets = new java.awt.Insets(17, 60, 9, 0);
        jPanel15.add(jLabel22, gridBagConstraints);

        preg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pregKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pregKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                pregKeyTyped(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 229;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 6, 17);
        jPanel15.add(preg, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 6, 17);
        jPanel15.add(fecha, gridBagConstraints);

        jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 255, 255));
        jLabel26.setText("Fecha:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 69;
        gridBagConstraints.insets = new java.awt.Insets(17, 60, 9, 0);
        jPanel15.add(jLabel26, gridBagConstraints);

        jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Titulo:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 72;
        gridBagConstraints.insets = new java.awt.Insets(17, 60, 9, 0);
        jPanel15.add(jLabel25, gridBagConstraints);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(255, 255, 255));
        jLabel24.setText("Asignatura:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 51;
        gridBagConstraints.insets = new java.awt.Insets(16, 60, 9, 0);
        jPanel15.add(jLabel24, gridBagConstraints);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 255, 255));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Informacion Examen");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 137;
        gridBagConstraints.ipady = 14;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 69, 0);
        jPanel15.add(jLabel23, gridBagConstraints);

        nombre.setEditable(false);
        nombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nombre.setForeground(new java.awt.Color(255, 255, 255));
        nombre.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 6, 17);
        jPanel15.add(nombre, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 6, 17);
        jPanel15.add(evaluacion, gridBagConstraints);

        asigna.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 6, 17);
        jPanel15.add(asigna, gridBagConstraints);

        ButtonAddPreg.setBackground(new java.awt.Color(0, 153, 153));
        ButtonAddPreg.setText("Generar");
        ButtonAddPreg.setColorNormal(new java.awt.Color(0, 153, 153));
        ButtonAddPreg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAddPregActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 115;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.insets = new java.awt.Insets(47, 18, 23, 0);
        jPanel15.add(ButtonAddPreg, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Semestre:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(17, 60, 9, 0);
        jPanel15.add(jLabel4, gridBagConstraints);

        seme.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Primero", "Segundo" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.insets = new java.awt.Insets(13, 0, 6, 17);
        jPanel15.add(seme, gridBagConstraints);

        AvisoNumeros.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AvisoNumeros.setForeground(new java.awt.Color(255, 204, 0));
        AvisoNumeros.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        AvisoNumeros.setText("*El numero de preguntas es solo numerico.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.ipadx = 65;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        jPanel15.add(AvisoNumeros, gridBagConstraints);

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(255, 255, 255));
        jLabel34.setText("Nombre del Profesor:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(17, 60, 9, 0);
        jPanel15.add(jLabel34, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 64;
        gridBagConstraints.ipady = 312;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 140, 0, 199);
        Generar.add(jPanel15, gridBagConstraints);

        Menu.addTab("Generar", Generar);

        jPanel20.add(Menu, "card2");

        getContentPane().add(jPanel20, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BottonGenrExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonGenrExamActionPerformed
        Desbloqueo = false;
        String item = "";
        asigna.removeAllItems();
        asigna.addItem("...");
        seme.setSelectedIndex(0);
        for (Asignatura a : profesor.getAsignaturas()) {
            item = a.getNombre();
            asigna.addItem(item);
        }
        nombre.setText(nombre_profesor);
        Metodos met = new Metodos();
        met.ReincioComboBox(seme);
        met.ReincioJTextField(evaluacion, preg);
        fecha.setCalendar(null);
        AvisoNumeros.setVisible(false);
        Menu.setSelectedComponent(Generar);
    }//GEN-LAST:event_BottonGenrExamActionPerformed

    private void BottonVerInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonVerInfoActionPerformed
        Metodos met = new Metodos();
        met.ReincioComboBox(Asig2, Asig3, tema, nivel);
        if (Menu.getSelectedComponent() != Ver) {
            try {
                Desbloqueo = false;
                modelo = (DefaultTableModel) mostrar.getModel();
                modelo.setColumnCount(0);
                modelo.setRowCount(0);
                sw1 = true;
                sw2 = true;
                sw3 = true;
                int h = 0;
                Asig2.removeAllItems();
                Asig3.removeAllItems();
                Asig2.addItem("...");
                Asig3.addItem("...");
                h = met.Generador_de_Combobox("Profesor/" + usuario + "/Asignatura.txt", Asig2, h);
                h = met.Generador_de_Combobox("Profesor/" + usuario + "/Asignatura.txt", Asig3, h);
                Desbloqueo = true;
                Menu.setSelectedComponent(Ver);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BottonVerInfoActionPerformed

    private void BottonEdiInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonEdiInfoActionPerformed
        Desbloqueo = false;
        Menu.setSelectedComponent(Agregar);
    }//GEN-LAST:event_BottonEdiInfoActionPerformed

    private void BottonPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonPerfilActionPerformed
        Desbloqueo = false;
        Menu.setSelectedComponent(Perfil);
        this.CambioClave.setVisible(false);
    }//GEN-LAST:event_BottonPerfilActionPerformed

    private void BottonHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonHomeActionPerformed
        Desbloqueo = false;
        Menu.setSelectedComponent(Home);
    }//GEN-LAST:event_BottonHomeActionPerformed

    private void temasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_temasActionPerformed

    private void ButtonAddPregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddPregActionPerformed
        if (seme.getSelectedIndex() != 0 && asigna.getSelectedIndex() != 0) {
            String tem;
            titulo = evaluacion.getText();
            nom = "Profesor: " + nombre_profesor;
            String s = (String) seme.getSelectedItem();
            if (s.equals("Primero")) {
                sem = "10";
            } else {
                if (s.equals("Segundo")) {
                    sem = "30";
                }
            }
            String as = (String) asigna.getSelectedItem();;
            mat = "Asignatura De " + asigna.getSelectedItem();
            ev = "" + evaluacion.getText();
            DateFormat FormaFecha = new SimpleDateFormat("dd-MM-yyyy");
            fec = "" + FormaFecha.format(fecha.getDate());
            num = Integer.parseInt(preg.getText());
            System.out.println(fec);
            Asignatura asig = null;
            for (Asignatura a : profesor.getAsignaturas()) {
                if (a.getNombre().equals(as)) {
                    temas.removeAllItems();
                    temas.addItem("...");
                    for (Tema t : a.getTemas()) {
                        tem = t.getNombre();
                        temas.addItem(tem);
                    }
                }
            }
            ndif.setSelectedIndex(0);
            jud = 1;
            Menu.setSelectedComponent(Info_Examen);
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonAddPregActionPerformed

    private void ButtonMostrarCENTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMostrarCENTActionPerformed
        String asig = (String) Asig2.getSelectedItem();
        if (!asig.equals("...")) {
            this.MostrarTem(asig, profesor);
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado niguna asignatura", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonMostrarCENTActionPerformed

    private void ButtonMostrarIZQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMostrarIZQActionPerformed
        MostarAsig(profesor);
    }//GEN-LAST:event_ButtonMostrarIZQActionPerformed


    private void ButtonAgregarPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAgregarPreguntaActionPerformed
        String Asignatura2 = (String) ComboAsignaturaS.getSelectedItem();
        String tema = (String) ComboBoxTemas.getSelectedItem();
        Metodos e = new Metodos();
        String InfoPregunta = "";
        int jor = 0;
        InfoPregunta = Preguntas.getText();
        String opcNiv = (String) ComboNivel.getSelectedItem();
        if (opcNiv.equals("Facil")) {
            jor = 1;
        } else {
            if (opcNiv.equals("Medio")) {
                jor = 2;
            } else {
                if (opcNiv.equals("Dificil")) {
                    jor = 3;
                }
            }
        }
        
        String total = Integer.toString(jor) + ";" + InfoPregunta + ";" + "disponible;--------;";
        String temp;
        Asignatura a = getAsignatura(Asignatura2);
        Tema t = getTema(tema, a);
        String x = "Profesor/" + usuario + "/" + Asignatura2 + "/" + tema + "/Preguntas_" + jor + ".txt";
        String y = "Profesor/" + usuario + "/" + Asignatura2 + "/Preguntas.txt";
        if (Asignatura2.equals("...")) {
            JOptionPane.showMessageDialog(null, "No ha Selccionado ninguna Asignatura.");
        } else {
            if (tema.equals("...")) {
                JOptionPane.showMessageDialog(null, "No ha Selccionado ningun Tema.");
            } else {
                if (opcNiv.equals("...")) {
                    JOptionPane.showMessageDialog(null, "No ha Selccionado ninguna Dificultad.");
                } else {
                    if (InfoPregunta.equals("")) {
                        JOptionPane.showMessageDialog(null, "No ha escrito ninguna pregunta.");
                    } else {
                        try {
                            temp = e.concatenar(x);
                            e.guardar(temp, x, total);
                            temp = e.concatenar(y);
                            e.guardar(temp, y, total);
                            JOptionPane.showMessageDialog(null, "Pregunta añadida exitosamente.");
                            Menu.setSelectedComponent(Home);
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_ButtonAgregarPreguntaActionPerformed

    private void ComboBoxTemasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxTemasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxTemasActionPerformed

    private void ButtonAgregarTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAgregarTemaActionPerformed
        String tema = NombreDelTema.getText();
        String r = (String) ComboAsignatura.getSelectedItem();
        if (!tema.equals("")) {
            if (!r.equals("...")) {
                boolean verifexis = profesor.VerificarTema(tema, r, DescripcionTema.getText());
                if (verifexis == false) {
                    profesor.AddTema(tema, r, DescripcionTema.getText());
                    Metodos met = new Metodos();
                    String x = "Profesor/" + usuario + "/" + r + "/Temas.txt";
                    String temp;
                    try {
                        temp = met.concatenar(x);
                        met.guardar(temp, x, tema + ";" + DescripcionTema.getText() + ";");
                        File carpeta = new File("Profesor/" + usuario + "/" + r + "/" + tema);
                        carpeta.mkdirs();
                        File fl = new File("Profesor/" + usuario + "/" + r + "/" + tema + "/Preguntas_1.txt");
                        fl.createNewFile();
                        File f2 = new File("Profesor/" + usuario + "/" + r + "/" + tema + "/Preguntas_2.txt");
                        f2.createNewFile();
                        File f3 = new File("Profesor/" + usuario + "/" + r + "/" + tema + "/Preguntas_3.txt");
                        f3.createNewFile();

                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna Asignatura.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No ha escrito el nombre del Tema.");
        }
    }//GEN-LAST:event_ButtonAgregarTemaActionPerformed

    private void AgregarDescripcionTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarDescripcionTemaActionPerformed
        if (this.AgregarDescripcionTema.isSelected() == true) {
            this.DescripcionTema.setEditable(true);
        } else {
            this.DescripcionTema.setEditable(false);
        }
    }//GEN-LAST:event_AgregarDescripcionTemaActionPerformed

    private void addAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAsigActionPerformed
        String Asigna = this.NombreDelaAsignatura.getText();
        String codigo = this.codMat.getText();
        boolean verifexis = profesor.VerificarAsignatura(Asigna, codigo);
        if (verifexis == false) {
            if (!Asigna.equals("") && !codigo.equals("")) {
                try {
                    Metodos met = new Metodos();
                    String x = "Profesor/" + usuario + "/Asignatura.txt";
                    String temp;

                    temp = met.concatenar(x);
                    met.guardar(temp, x, Asigna + ";" + codigo + ";" + this.Descripcion.getText() + ";");
                    //ComboaAsignatura.addItem(Asigna);
                    File carpeta = new File("Profesor/" + usuario + "/" + Asigna);
                    carpeta.mkdirs();
                    File fichero = new File("Profesor/" + usuario + "/" + Asigna + "/Temas.txt");
                    fichero.createNewFile();
                    Asignatura a = new Asignatura(Asigna, this.Descripcion.getText(), codigo);
                    profesor.AddAsignatura(a);
                    JOptionPane.showMessageDialog(null, "Asignatura creada satisfactoriamente.");
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Asignatura y Codigo son campos obligatorios.");
            }
        }
    }//GEN-LAST:event_addAsigActionPerformed

    private void AgregarDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarDescripcionActionPerformed
        if (this.AgregarDescripcion.isSelected() == true) {
            this.Descripcion.setEditable(true);
        } else {
            this.Descripcion.setEditable(false);
        }
    }//GEN-LAST:event_AgregarDescripcionActionPerformed

    private void FotoTemasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FotoTemasMouseClicked
        String item = "";
        ComboAsignatura.removeAllItems();
        ComboAsignatura.addItem("...");
        for (Asignatura a : profesor.getAsignaturas()) {
            item = a.getNombre();
            ComboAsignatura.addItem(item);
        }
        Metodos met = new Metodos();
        met.ReincioJTextField(NombreDelTema);
        met.ReincioTextArea(DescripcionTema);
        AgregarDescripcionTema.setSelected(false);
        Menu.setSelectedComponent(Tema);
    }//GEN-LAST:event_FotoTemasMouseClicked

    private void FotoMateriaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FotoMateriaMouseClicked
        Metodos met = new Metodos();
        met.ReincioJTextField(NombreDelaAsignatura, codMat);
        met.ReincioTextArea(Descripcion);
        AgregarDescripcion.setSelected(false);
        Menu.setSelectedComponent(Asignatura);
    }//GEN-LAST:event_FotoMateriaMouseClicked

    private void ButtonCambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCambioActionPerformed
        if (this.NuevaContra.getText().equals("") || this.ValNuevaContra.getText().equals("")) {

        } else {
            JOptionPane.showMessageDialog(this, "ERROR", "ALGUNOS DE LOS CAMPOS ESTAN VACIOS", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonCambioActionPerformed

    private void BottonCamContraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonCamContraActionPerformed
        this.CambioClave.setVisible(true);
        this.jLabel27.setVisible(false);
    }//GEN-LAST:event_BottonCamContraActionPerformed

    private void generarExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarExamenActionPerformed

        if (jud == num) {
            Pregunta preguntatemp = Aleatorio();
            if (preguntatemp != null) {
                person.add(preguntatemp);
                XWPFDocument documento = new XWPFDocument();

                //Declaramos el titulo y le asignamos algunas propiedades
                XWPFParagraph titulo_doc = documento.createParagraph();
                titulo_doc.setAlignment(ParagraphAlignment.CENTER);
                titulo_doc.setVerticalAlignment(TextAlignment.TOP);

                //Declaramos el parrafo y le asignamos algunas propiedades
                XWPFParagraph parrafo = documento.createParagraph();
                parrafo.setAlignment(ParagraphAlignment.BOTH);
                XWPFRun r1 = titulo_doc.createRun();
                r1.setBold(true);
                r1.setText("Universidad del Norte");
                r1.setFontFamily("Times New Roman");
                r1.setFontSize(14);
                r1.setTextPosition(11);
                r1.addBreak();

                XWPFRun r2 = titulo_doc.createRun();
                r2.setBold(true);
                r2.setText(mat);
                r2.setFontFamily("Times New Roman");
                r2.setFontSize(14);
                r2.setTextPosition(11);
                r2.addBreak();

                XWPFRun r3 = titulo_doc.createRun();
                r3.setBold(true);
                r3.setText(titulo);
                r3.setFontFamily("Times New Roman");
                r3.setFontSize(14);
                r3.setTextPosition(11);
                r3.addBreak();

                XWPFRun r5 = titulo_doc.createRun();
                r5.setBold(true);
                r5.setText(fec);
                r5.setFontFamily("Times New Roman");
                r5.setFontSize(14);
                r5.setTextPosition(11);
                r5.addBreak();

                XWPFRun r6 = parrafo.createRun();
                r6.setText(nom);
                r6.setFontSize(12);
                r6.addCarriageReturn();
                r6.addBreak();
                //Para el parrafo
                XWPFRun ri = parrafo.createRun();
                ri.setText("Nombre: ________________________________________Código: ________________");
                ri.setFontSize(12);
                ri.addCarriageReturn();
                ri.addBreak();
                int i = 0;
                while (i < person.size()) {
                    String preg = "" + person.get(i).getContenido();
                    XWPFRun r7 = parrafo.createRun();
                    r7.setText((i + 1) + ".  " + preg);
                    r7.setFontSize(12);
                    r7.addCarriageReturn();
                    r7.addBreak();
                    i++;

                }

                JFileChooser f = new JFileChooser();
                f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                f.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
                int opcion = f.showSaveDialog(this);
                File guarda = f.getSelectedFile();
                System.out.println("" + guarda + " Preuba " + guarda.getName().substring(0, 1));
                if (opcion == JFileChooser.APPROVE_OPTION) {
                    System.out.println(guarda.getAbsolutePath());

                    FileOutputStream word = null;
                    try {
                        word = new FileOutputStream(guarda + ".docx");
                        documento.write(word);
                        word.close();
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    /*File path = new File(guarda + ".docx");
                        System.out.println("" + path);
                        FileWriter fw = new FileWriter(path, true);
                        Desktop.getDesktop().open(path);
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }*/
                    JOptionPane.showMessageDialog(null,
                            "El examen se ha generado exitosamente",
                            "Información", JOptionPane.INFORMATION_MESSAGE);
                }

                Menu.setSelectedComponent(Home);
            }

        } else {
            Pregunta preguntatemp = Aleatorio();
            if (preguntatemp != null) {
                person.add(preguntatemp);
                jud++;
                temas.setSelectedIndex(0);
                ndif.setSelectedIndex(0);

            } else {

            }
        }


    }//GEN-LAST:event_generarExamenActionPerformed

    private void FotoPreguntasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FotoPreguntasMouseClicked
        Desbloqueo = false;
        int h = 0;
        ComboAsignaturaS.removeAllItems();
        ComboAsignaturaS.addItem("...");
        Metodos met = new Metodos();
        try {
            h = met.Generador_de_Combobox("Profesor/" + usuario + "/Asignatura.txt", ComboAsignaturaS, h);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        met.ReincioComboBox(ComboBoxTemas, ComboNivel);
        met.ReincioTextArea(Preguntas);
        Desbloqueo = true;
        Menu.setSelectedComponent(Pregunta);
    }//GEN-LAST:event_FotoPreguntasMouseClicked

    private void ComboAsignaturaSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboAsignaturaSActionPerformed
        if (Desbloqueo.equals(true)) {
            String TempAsigna = (String) ComboAsignaturaS.getSelectedItem();
            if (!TempAsigna.equals("...")) {
                ComboBoxTemas.setEnabled(true);
                ComboNivel.setEnabled(true);
                Preguntas.setEnabled(true);
                Metodos met = new Metodos();
                this.ComboBoxTemas.removeAllItems();
                this.ComboBoxTemas.addItem("...");
                int h = 0;
                try {
                    h = met.Generador_de_Combobox("Profesor/" + usuario + "/" + TempAsigna + "/Temas.txt", this.ComboBoxTemas, h);
                    if (h < 1) {
                        JOptionPane.showMessageDialog(null, "LA ASIGNATURA QUE HA SELECCIONADO NO TIENE TEMAS, SE DESEA USAR ESTA ASIGNATURA ES NECESARIO QUE AÑADA TEMAS.");
                        ComboBoxTemas.setEnabled(false);
                        ComboNivel.setEnabled(false);
                        Preguntas.setEnabled(false);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_ComboAsignaturaSActionPerformed

    private void Asig3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Asig3ActionPerformed
        if (Desbloqueo.equals(true)) {
            String TempAsigna = (String) Asig3.getSelectedItem();
            if (!TempAsigna.equals("...")) {
                tema.setEnabled(true);
                nivel.setEnabled(true);
                Metodos met = new Metodos();
                this.ComboBoxTemas.removeAllItems();
                this.ComboBoxTemas.addItem("...");
                int h = 0;
                try {
                    h = met.Generador_de_Combobox("Profesor/" + usuario + "/" + TempAsigna + "/Temas.txt", this.tema, h);
                    if (h < 1) {
                        JOptionPane.showMessageDialog(null, "LA ASIGNATURA QUE HA SELECCIONADO NO TIENE TEMAS, SE DESEA USAR ESTA ASIGNATURA ES NECESARIO QUE AÑADA TEMAS.");
                        tema.setEnabled(false);
                        nivel.setEnabled(false);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_Asig3ActionPerformed

    private void Asig2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Asig2ActionPerformed
        if (Desbloqueo.equals(true)) {
            String TempAsig = (String) Asig2.getSelectedItem();
            if ("...".equals(TempAsig)) {
                JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_Asig2ActionPerformed

    private void temaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_temaActionPerformed
        if (Desbloqueo.equals(true)) {
            String TempTema = (String) tema.getSelectedItem();
            if ("...".equals(TempTema)) {
                JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_temaActionPerformed

    private void ButtonMostrarDERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMostrarDERActionPerformed
        // TODO add your handling code here:
        String x = (String) this.Asig3.getSelectedItem();
        String y = (String) this.tema.getSelectedItem();
        String z = (String) this.nivel.getSelectedItem();
        this.MostrarPreg(x, y, z, profesor);
    }//GEN-LAST:event_ButtonMostrarDERActionPerformed

    private void pregKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pregKeyPressed
//        Metodos met = new Metodos();
//        if (met.confNum(this.preg.getText())) {
//            this.AvisoNumeros.setVisible(false);
//        } else {
//            this.AvisoNumeros.setVisible(true);
//        }        // TODO add your handling code here:
    }//GEN-LAST:event_pregKeyPressed

    private void ButtonGenerarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGenerarInformeActionPerformed
        // TODO add your handling code here:
        XWPFDocument informe = new XWPFDocument();
        Date date = new Date();
        String dia = "0" + Integer.toString(date.getDay());
        String mes = "0" + Integer.toString(date.getMonth());
        String anio = Integer.toString(date.getYear() - 100);
        String Date = dia + "/" + mes + "/" + anio;

        XWPFParagraph title = informe.createParagraph();
        title.setAlignment(ParagraphAlignment.CENTER);
        title.setVerticalAlignment(TextAlignment.TOP);

        XWPFParagraph parrafo = informe.createParagraph();
        parrafo.setAlignment(ParagraphAlignment.BOTH);
        XWPFRun r1 = title.createRun();

        r1.setBold(true);
        r1.setText("INFORME  DE CONTENIDO ACADEMICO");
        r1.setFontFamily("Arial");
        r1.setFontSize(26);
        r1.setTextPosition(10);
        r1.setUnderline(UnderlinePatterns.SINGLE);

//        XWPFRun r11 = title.createRun();
//        r11.setBold(true);
//        r11.setText("PROFESOR: " + nombre_profesor.toUpperCase());
//        r11.setFontFamily("Arial");
//        r11.setFontSize(26);
//        r11.setTextPosition(10);
//        r11.setUnderline(UnderlinePatterns.SINGLE);
        XWPFRun c = title.createRun();
        c.setBold(true);
        c.setText(Date);
        c.setFontFamily("Arial");
        c.setFontSize(26);
        c.setTextPosition(10);
        c.setUnderline(UnderlinePatterns.SINGLE);

        int k = 1;

        XWPFRun aa = parrafo.createRun();
        aa.setFontFamily("Arial");
        aa.setBold(true);
        aa.setText("ASIGNATURAS");
        aa.setFontSize(14);
        aa.addCarriageReturn();

        XWPFRun b = parrafo.createRun();
        b.setFontFamily("Arial");
        b.setText("NUMERO DE ASIGNATURAS: " + profesor.getAsignaturas().size());
        b.setFontSize(14);
        b.addCarriageReturn();

        int cont = 1;
        for (Asignatura asignatura : profesor.getAsignaturas()) {

            XWPFRun cc = parrafo.createRun();
            cc.setFontFamily("Arial");
            cc.setText(cont + ". " + asignatura.getNombre());
            cc.setFontSize(12);
            cc.addCarriageReturn();
            cont++;
        }
        r1.addBreak();

        XWPFRun w = parrafo.createRun();
        w.setFontFamily("Arial");
        w.setText(" ");
        w.setFontSize(12);
        w.addCarriageReturn();

        XWPFRun ww = parrafo.createRun();
        ww.setFontFamily("Arial");
        ww.setText(" ");
        ww.setFontSize(12);
        ww.addCarriageReturn();

        XWPFRun d = parrafo.createRun();
        d.setFontFamily("Arial");
        d.setBold(true);
        d.setText("TEMAS");
        d.setFontSize(14);
        d.addCarriageReturn();

        cont = 1;
        int cont1;

        for (Asignatura asignatura : profesor.getAsignaturas()) {
            cont1 = 1;

            XWPFRun y = parrafo.createRun();
            y.setFontFamily("Arial");
            y.setText(" ");
            y.setFontSize(12);
            y.addCarriageReturn();

            XWPFRun e = parrafo.createRun();
            e.setFontFamily("Arial");
            e.setText(cont + ". " + asignatura.getNombre().toUpperCase());
            e.setFontSize(14);
            e.addCarriageReturn();

            XWPFRun f = parrafo.createRun();
            f.setFontFamily("Arial");
            f.setText("NUMERO DE TEMAS: " + asignatura.getTemas().size());
            f.setFontSize(14);
            f.addCarriageReturn();

            for (Tema tema1 : asignatura.getTemas()) {
                XWPFRun g = parrafo.createRun();
                g.setFontFamily("Arial");
                g.setText(cont + "." + cont1 + " " + tema1.getNombre());
                g.setFontSize(12);
                g.addCarriageReturn();
                cont1++;
            }
            cont++;

        }
        r1.addBreak();

        XWPFRun v = parrafo.createRun();
        v.setFontFamily("Arial");
        v.setText(" ");
        v.setFontSize(12);
        v.addCarriageReturn();

        XWPFRun wv = parrafo.createRun();
        wv.setFontFamily("Arial");
        wv.setText(" ");
        wv.setFontSize(12);
        wv.addCarriageReturn();

        XWPFRun h = parrafo.createRun();
        h.setFontFamily("Arial");
        h.setBold(true);
        h.setText("PREGUNTAS");
        h.setFontSize(14);
        h.addCarriageReturn();

        for (Asignatura a : profesor.getAsignaturas()) {
            String asignatura = a.getNombre().toUpperCase();
            XWPFRun r2 = parrafo.createRun();
            r2.setFontFamily("Arial");
            r2.setText(k + ". " + asignatura);
            r2.setFontSize(14);
            r2.addCarriageReturn();

            int j = 1;

            XWPFRun r = parrafo.createRun();
            r.setFontFamily("Arial");
            r.setText(" ");
            r.setFontSize(12);
            r.addCarriageReturn();

            for (Tema t : a.getTemas()) {
                String tem = t.getNombre();
                XWPFRun r3 = parrafo.createRun();
                r3.setFontFamily("Arial");
                r3.setText("    " + k + ". " + j + "." + tem);
                r3.setFontSize(12);
                r3.addCarriageReturn();

                int total = (t.getPreguntas(1).size()) + (t.getPreguntas(3).size()) + (t.getPreguntas(3).size());

                XWPFRun ii = parrafo.createRun();
                ii.setFontFamily("Arial");
                ii.setText("    NUMERO DE PREGUNTAS: " + total);
                ii.setFontSize(14);
                ii.addCarriageReturn();

                XWPFRun rr = parrafo.createRun();
                rr.setFontFamily("Arial");
                rr.setText(" ");
                rr.setFontSize(12);
                rr.addCarriageReturn();

                for (Pregunta p : t.getPreguntas(1)) {
                    XWPFRun r4 = parrafo.createRun();
                    r4.setFontFamily("Arial");
                    r4.setText("        Dificultad: 1");
                    r4.setFontSize(12);
                    r4.addCarriageReturn();

                    XWPFRun r5 = parrafo.createRun();
                    r5.setFontFamily("Arial");
                    r5.setText("        Contenido: " + p.getContenido());
                    r5.setFontSize(12);
                    r5.addCarriageReturn();

                    XWPFRun r6 = parrafo.createRun();
                    r6.setFontFamily("Arial");
                    r6.setText("        Estado: " + p.getEstado());
                    r6.setFontSize(12);
                    r6.addCarriageReturn();

                    XWPFRun r7 = parrafo.createRun();
                    r7.setFontFamily("Arial");
                    r7.setText("        Ultima vez que se uso: " + p.getFecha());
                    r7.setFontSize(12);
                    r7.addCarriageReturn();

                    XWPFRun rrr = parrafo.createRun();
                    rrr.setFontFamily("Arial");
                    rrr.setText(" ");
                    rrr.setFontSize(12);
                    rrr.addCarriageReturn();
                }
                for (Pregunta p : t.getPreguntas(2)) {
                    XWPFRun r4 = parrafo.createRun();
                    r4.setFontFamily("Arial");
                    r4.setText("        Dificultad: 1");
                    r4.setFontSize(12);
                    r4.addCarriageReturn();

                    XWPFRun r5 = parrafo.createRun();
                    r5.setFontFamily("Arial");
                    r5.setText("        Contenido: " + p.getContenido());
                    r5.setFontSize(12);
                    r5.addCarriageReturn();

                    XWPFRun r6 = parrafo.createRun();
                    r6.setFontFamily("Arial");
                    r6.setText("        Estado: " + p.getEstado());
                    r6.setFontSize(12);
                    r6.addCarriageReturn();

                    XWPFRun r7 = parrafo.createRun();
                    r7.setFontFamily("Arial");
                    r7.setText("        Ultima vez que se uso: " + p.getFecha());
                    r7.setFontSize(12);
                    r7.addCarriageReturn();

                    XWPFRun rrr = parrafo.createRun();
                    rrr.setFontFamily("Arial");
                    rrr.setText(" ");
                    rrr.setFontSize(12);
                    rrr.addCarriageReturn();
                }
                for (Pregunta p : t.getPreguntas(3)) {
                    XWPFRun r4 = parrafo.createRun();
                    r4.setFontFamily("Arial");
                    r4.setText("        Dificultad: 1");
                    r4.setFontSize(12);
                    r4.addCarriageReturn();

                    XWPFRun r5 = parrafo.createRun();
                    r5.setFontFamily("Arial");
                    r5.setText("        Contenido: " + p.getContenido());
                    r5.setFontSize(12);
                    r5.addCarriageReturn();

                    XWPFRun r6 = parrafo.createRun();
                    r6.setFontFamily("Arial");
                    r6.setText("        Estado: " + p.getEstado());
                    r6.setFontSize(12);
                    r6.addCarriageReturn();

                    XWPFRun r7 = parrafo.createRun();
                    r7.setFontFamily("Arial");
                    r7.setText("        Ultima vez que se uso: " + p.getFecha());
                    r7.setFontSize(12);
                    r7.addCarriageReturn();

                    XWPFRun rrr = parrafo.createRun();
                    rrr.setFontFamily("Arial");
                    rrr.setText(" ");
                    rrr.setFontSize(12);
                    rrr.addCarriageReturn();
                }
                j++;
            }
            k++;
        }

        JFileChooser f = new JFileChooser();
        f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        f.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int opcion = f.showSaveDialog(this);
        File guarda = f.getSelectedFile();
        System.out.println("" + guarda + " Prueba " + guarda.getName().substring(0, 1));
        if (opcion == JFileChooser.APPROVE_OPTION) {
            System.out.println(guarda.getAbsolutePath());

            FileOutputStream word = null;
            try {
                word = new FileOutputStream(guarda + ".docx");
                informe.write(word);
                word.close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null,
                    "El informe se ha generado exitosamente",
                    "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_ButtonGenerarInformeActionPerformed

    private void ValNuevaContraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValNuevaContraKeyPressed
        if (this.NuevaContra.getText().equals(this.ValNuevaContra.getText())) {
            this.jLabel27.setVisible(false);
        } else {
            this.jLabel27.setVisible(true);
        }
    }//GEN-LAST:event_ValNuevaContraKeyPressed

    private void BottonEditFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonEditFotoActionPerformed
        JFileChooser archivo = new JFileChooser();
        archivo.addChoosableFileFilter(null);
        archivo.setDialogTitle("Abrir archivo");
        File ruta = new File("C:\\Users\\elspo\\Downloads");
        archivo.setCurrentDirectory(ruta);
        int ventana = archivo.showOpenDialog(null);
        if (ventana == JFileChooser.APPROVE_OPTION) {
            File file = archivo.getSelectedFile();
            Image foto = getToolkit().getImage(String.valueOf(file));
            foto = foto.getScaledInstance(Foto1.getWidth(), Foto1.getHeight(), Image.SCALE_DEFAULT);
            Foto1.setIcon(new ImageIcon(foto));
        }
    }//GEN-LAST:event_BottonEditFotoActionPerformed

    private void pregKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pregKeyTyped
//        Metodos met = new Metodos();
//        System.out.println("entre "+preg.getText());
//        this.AvisoNumeros.setVisible(false);
//        if (met.confNum(this.preg.getText())) {
//            this.AvisoNumeros.setVisible(false);
//        } else {
//            this.AvisoNumeros.setVisible(true);
//        }        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_pregKeyTyped

    private void pregKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pregKeyReleased
        Metodos met = new Metodos();
        System.out.println("entre " + preg.getText());
        this.AvisoNumeros.setVisible(false);
        if (met.confNum(this.preg.getText())) {
            this.AvisoNumeros.setVisible(false);
        } else {
            this.AvisoNumeros.setVisible(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pregKeyReleased

    private void IconCerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IconCerrarMouseClicked
        dispose();
        InicioSeccion ini = new InicioSeccion();
        ini.setVisible(true);
    }//GEN-LAST:event_IconCerrarMouseClicked

    private void ButtonGenerarInforme1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGenerarInforme1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonGenerarInforme1ActionPerformed

    private void ButtonGenerarInforme2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGenerarInforme2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonGenerarInforme2ActionPerformed

    private void ButtonGenerarInforme3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGenerarInforme3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonGenerarInforme3ActionPerformed

    private void ButtonGuardarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGuardarFotoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ButtonGuardarFotoActionPerformed

    ///METODOS!!
    private Asignatura getAsignatura(String nombre) {
        Asignatura asignatura = null;
        for (Asignatura a : profesor.getAsignaturas()) {
            if (a.getNombre().equals(nombre)) {
                asignatura = a;
            }
        }
        return asignatura;
    }

    private Tema getTema(String nombre, Asignatura asignatura) {
        Tema tema = null;
        for (Tema t : asignatura.getTemas()) {
            if (t.getNombre().equals(nombre)) {
                tema = t;
            }
        }
        return tema;
    }

    private void MostarAsig(Profesor p) {   //Este metodo muestra todas las asignaturas que tiene el profesor
        modelo.setRowCount(0);              //que esta en sesion actualmente
        if (sw1 == true) {
            modelo.setColumnCount(0);
            modelo.addColumn("Asignatura");
            modelo.addColumn("Codigo");
            modelo.addColumn("Descripcion");
            sw1 = false;
        }
        String nom = "";
        String des = "";
        String cod = "";
        for (Asignatura a : p.getAsignaturas()) {
            nom = a.getNombre();
            des = a.getDescripcion();
            cod = a.getCodigo();
            modelo.addRow(new Object[]{nom, cod, des});
        }
        sw2 = true;
        sw3 = true;
    }

    private void MostrarTem(String nombre, Profesor p) {   //Este metodo muestra los temas de una asignatura en especifico
        modelo.setRowCount(0);                             //perteneciente al profesor que esta en sesion
        Asignatura asig = null;
        for (Asignatura a : p.getAsignaturas()) {
            if (a.getNombre().equals(nombre)) {
                asig = a;
            }
        }
        if (sw2 == true) {
            modelo.setColumnCount(0);
            modelo.addColumn("Tema");
            modelo.addColumn("Descripcion");
            sw2 = false;
        }
        String nom = "";
        String des = "";
        for (Tema t : asig.getTemas()) {
            nom = t.getNombre();
            des = t.getDescripcion();
            if (!nom.equals("") && !des.equals("")) {
                modelo.addRow(new Object[]{nom, des});
            }
        }
        sw1 = true;
        sw3 = true;
    }

    private void MostrarPreg(String x, String y, String z, Profesor p) {   //Esto muestra las preguntas de cierto nivel
        modelo.setRowCount(0);                                             //pertenecientes a un tema en especifico, que
        Asignatura asig = null;                                            //pertenece a una asignatura en especifico del                      
        Tema tem = null;                                                   //profesor que esta en sesion
        int lvl = Integer.parseInt(z);
        ArrayList<Pregunta> temp = new ArrayList();
        for (Asignatura a : p.getAsignaturas()) {
            if (a.getNombre().equals(x)) {
                asig = a;
            }
        }
        for (Tema t : asig.getTemas()) {
            if (t.getNombre().equals(y)) {
                tem = t;
            }
        }
        if (sw3 == true) {
            modelo.setColumnCount(0);
            modelo.addColumn("Nivel");
            modelo.addColumn("Pregunta");
            modelo.addColumn("Estado");
            modelo.addColumn("Fecha de reutilizacion");
            sw3 = false;
        }
        String niv = "";
        String pre = "";
        String est = "";
        String fec = "";
        temp = tem.getPreguntas(lvl);
        for (Pregunta pr : temp) {
            niv = z;
            pre = pr.getContenido();
            est = pr.getEstado();
            est = pr.getFecha();
            if (!niv.equals("") && !pre.equals("") && !est.equals("") && !fec.equals("")) {
                modelo.addRow(new Object[]{niv, pre, est, fec});
            }
        }
        sw1 = true;
        sw2 = true;
    }

    private Pregunta Aleatorio() {
        ArrayList<Pregunta> preguntas = new ArrayList();
        Profesor pro = new Profesor();
        for (Asignatura asig : pro.getAsignaturas()) {
            if (asig.getNombre().equals(asigna.getSelectedItem())) {
                for (Tema tema : asig.getTemas()) {
                    if (tema.getNombre().equals(temas.getSelectedItem())) {
                        return Aleatorio2(tema.getPreguntas(Integer.parseInt((String) ndif.getSelectedItem())));
                    }
                }
            }
        }
        return null;

    }

    private Pregunta Aleatorio2(ArrayList<Pregunta> p) {
        int tope = p.size();
        if (tope != 0) {
            ArrayList<Pregunta> pregDispo = new ArrayList();
            for (Pregunta pregunta : p) {
                if (pregunta.getEstado().equals("Disponible")) {
                    pregDispo.add(pregunta);
                }
            }
            System.out.println("" + tope);
            int sw = 2;
            if (!pregDispo.isEmpty()) {

                while (sw == 2) {
                    int aleatorio = ThreadLocalRandom.current().nextInt(1, tope + 1);
                    Pregunta po = p.get(aleatorio - 1);
                    if (po.getEstado().equals("Disponible")) {
                        p.get(aleatorio - 1).setEstado("No Disponible");
                        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                        Date date = new Date();
                        p.get(aleatorio - 1).setFecha(dateFormat.format(date));

                        try {
                            SobreEscribir(p);
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        JOptionPane.showMessageDialog(null, "La pregunta ha sido añadida con exito.");
                        return po;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "El Banco de preguntas seleccionado todas las preguntas ya han sido usadas anteriormente.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "El Banco de preguntas seleccionado se encuentra vacio, por favor llenar este banco previamente si desea utilizarlo.");
        }

        return null;

    }

    private void SobreEscribir(ArrayList<Pregunta> p) throws IOException {
        String a = (String) asigna.getSelectedItem();
        String b = (String) temas.getSelectedItem();
        String c = (String) ndif.getSelectedItem();
        String L = "";
        for (Pregunta pregunta : p) {
            String info = pregunta.getNivel() + ";" + pregunta.getContenido() + ";" + pregunta.getEstado() + ";" + pregunta.getFecha() + ";";
            L = L + info + "\r\n";
        }
        File f = new File("Profesor/" + usuario + "/" + a + "/" + b + "/Preguntas_" + c + ".txt");
        FileWriter fw = new FileWriter(f);
        PrintWriter pw = new PrintWriter(fw);

        pw.write(L);

        pw.close();
        fw.close();
    }

    private void LlenarCombo(JComboBox<String> asignatura) {
        Metodos e = new Metodos();
        int h = 0;
        asignatura.removeAllItems();
        asignatura.addItem("...");
        try {
            h = e.Generador_de_Combobox("Profesor/" + usuario + "/Asignatura.txt", asignatura, h);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (h < 1) {
            JOptionPane.showMessageDialog(null, "No hay Asignaturas, deberia agregar alguna.");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Agregar;
    private javax.swing.JCheckBox AgregarDescripcion;
    private javax.swing.JCheckBox AgregarDescripcionTema;
    private javax.swing.JComboBox<String> Asig2;
    private javax.swing.JComboBox<String> Asig3;
    private javax.swing.JPanel Asignatura;
    private javax.swing.JLabel AvisoNumeros;
    private rsbuttom.RSButtonMetro BottonCamContra;
    private rsbuttom.RSButtonMetro BottonEdiInfo;
    private rsbuttom.RSButtonMetro BottonEditFoto;
    private rsbuttom.RSButtonMetro BottonGenrExam;
    private rsbuttom.RSButtonMetro BottonHome;
    private rsbuttom.RSButtonMetro BottonPerfil;
    private rsbuttom.RSButtonMetro BottonVerInfo;
    private rsbuttom.RSButtonMetro ButtonAddPreg;
    private rsbuttom.RSButtonMetro ButtonAgregarPregunta;
    private rsbuttom.RSButtonMetro ButtonAgregarTema;
    private rsbuttom.RSButtonMetro ButtonCambio;
    private rsbuttom.RSButtonMetro ButtonGenerarInforme;
    private rsbuttom.RSButtonMetro ButtonGenerarInforme1;
    private rsbuttom.RSButtonMetro ButtonGenerarInforme2;
    private rsbuttom.RSButtonMetro ButtonGenerarInforme3;
    private rsbuttom.RSButtonMetro ButtonGuardarFoto;
    private rsbuttom.RSButtonMetro ButtonMostrarCENT;
    private rsbuttom.RSButtonMetro ButtonMostrarDER;
    private rsbuttom.RSButtonMetro ButtonMostrarIZQ;
    private javax.swing.JPanel CambioClave;
    private javax.swing.JTextField Cedula1;
    private javax.swing.JComboBox<String> ComboAsignatura;
    private javax.swing.JComboBox<String> ComboAsignaturaS;
    private javax.swing.JComboBox<String> ComboBoxTemas;
    private javax.swing.JComboBox<String> ComboNivel;
    private javax.swing.JTextArea Descripcion;
    private javax.swing.JTextArea DescripcionTema;
    private javax.swing.JLabel Foto1;
    private javax.swing.JLabel Foto2;
    private javax.swing.JLabel FotoMateria;
    private javax.swing.JLabel FotoPreguntas;
    private javax.swing.JLabel FotoTemas;
    private javax.swing.JPanel Generar;
    private javax.swing.JPanel Home;
    private javax.swing.JLabel IconCerrar;
    private javax.swing.JPanel Info_Examen;
    private javax.swing.JPanel InformeTablas;
    private javax.swing.JTabbedPane Menu;
    private javax.swing.JTextField Nombre1;
    private javax.swing.JTextField NombreDelTema;
    private javax.swing.JTextField NombreDelaAsignatura;
    private javax.swing.JPasswordField NuevaContra;
    private javax.swing.JPanel PanelMenu;
    private javax.swing.JPanel Perfil;
    private javax.swing.JPanel Pregunta;
    private javax.swing.JTextArea Preguntas;
    private javax.swing.JPanel Tema;
    private javax.swing.JLabel TituloMateria;
    private javax.swing.JLabel TituloPreguntas;
    private javax.swing.JLabel TituloTemas;
    private javax.swing.JTextField Usuario1;
    private javax.swing.JPasswordField ValNuevaContra;
    private javax.swing.JPanel Ver;
    private rsbuttom.RSButtonMetro addAsig;
    private javax.swing.JComboBox<String> asigna;
    private javax.swing.JTextField codMat;
    private javax.swing.JTextField evaluacion;
    private com.toedter.calendar.JDateChooser fecha;
    private rsbuttom.RSButtonMetro generarExamen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable mostrar;
    private javax.swing.JComboBox<String> ndif;
    private javax.swing.JComboBox<String> nivel;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField preg;
    private javax.swing.JComboBox<String> seme;
    private javax.swing.JComboBox<String> tema;
    private javax.swing.JComboBox<String> temas;
    // End of variables declaration//GEN-END:variables
}
