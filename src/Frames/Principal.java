/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Classes.Asignatura;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import Classes.Metodos;
import Classes.Pregunta;
import Classes.Profesor;
import Classes.Tema;
import static Frames.InicioSeccion.nombre_profesor;
import static Frames.InicioSeccion.usuario;
import java.awt.Color;
import java.awt.Desktop;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.ThreadLocalRandom;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.TextAlignment;
import org.apache.poi.xwpf.usermodel.UnderlinePatterns;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.IndexedColors;

/**
 *
 * @author danie
 */
public class Principal extends javax.swing.JFrame {

    //Variables para la creacion de examen
    static String titulo = "aaa";
    static String nom;
    static String mat;
    static String ev;
    static String fec;
    static String sem;
    static String cod;
    static XWPFDocument documento = new XWPFDocument();
    static int num;
    int pop;
    static ArrayList<Pregunta> person = new ArrayList();
    static int i = 0;
    static int jud;
    //Variables para mostrar asignatura, tema y preguntas.
    static boolean sw1 = true; //boolean para asignaturas
    static boolean sw2 = true; //boolean para temas
    static boolean sw3 = true; //boolean para preguntas
    Profesor profesor = new Profesor();
    DefaultTableModel modelo;
    

    public Principal() {
        initComponents();
        BarraCorrediza();
        Metodos met = new Metodos();
        profesor.ActualizarDatos();
        this.Nombre1.setText(InicioSeccion.nombre_profesor);
        this.Cedula1.setText(met.EncontrarCedula("Usuario.txt", InicioSeccion.usuario));
        this.Usuario1.setText(usuario);
        SubMenu.setSelectedIndex(0);
        FotoDefault();
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PanelMenu = new javax.swing.JPanel();
        Foto2 = new javax.swing.JLabel();
        BottonEditInfo = new rsbuttom.RSButtonMetro();
        BottonGenrExam = new rsbuttom.RSButtonMetro();
        BottonHome = new rsbuttom.RSButtonMetro();
        BottonPerfil = new rsbuttom.RSButtonMetro();
        jPanel21 = new javax.swing.JPanel();
        BottonVerInfo = new rsbuttom.RSButtonMetro();
        jPanel22 = new javax.swing.JPanel();
        SubMenu = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        jPanel23 = new javax.swing.JPanel();
        BottonTemas = new rsbuttom.RSButtonMetro();
        BottonPreguntas = new rsbuttom.RSButtonMetro();
        BottonAsignatura = new rsbuttom.RSButtonMetro();
        jLabel37 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        EditarAsignatura = new rsbuttom.RSButtonMetro();
        EditarTemas = new rsbuttom.RSButtonMetro();
        EditarPreguntas = new rsbuttom.RSButtonMetro();
        Fondo = new javax.swing.JPanel();
        Menu = new javax.swing.JTabbedPane();
        Home = new javax.swing.JPanel();
        Perfil = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        BottonCamContra = new rsbuttom.RSButtonMetro();
        NuevaContra = new javax.swing.JPasswordField();
        ValNuevaContra = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        ButtonCambio = new rsbuttom.RSButtonMetro();
        Nombre1 = new javax.swing.JTextField();
        Cedula1 = new javax.swing.JTextField();
        Usuario1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Foto1 = new javax.swing.JLabel();
        BottonEditFoto = new rsbuttom.RSButtonMetro();
        ButtonGuardarFoto = new rsbuttom.RSButtonMetro();
        jLabel39 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        Asignatura = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        NombreDelaAsignatura = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        codMat = new javax.swing.JTextField();
        AgregarDescripcion = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Descripcion = new javax.swing.JTextArea();
        addAsig = new rsbuttom.RSButtonMetro();
        Tema = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        ComboAsignatura = new javax.swing.JComboBox<>();
        NombreDelTema = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        AgregarDescripcionTema = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DescripcionTema = new javax.swing.JTextArea();
        ButtonAgregarTema = new rsbuttom.RSButtonMetro();
        Pregunta = new javax.swing.JPanel();
        ComboAsignaturaS = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        ComboBoxTemas = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        ComboNivel = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Preguntas = new javax.swing.JTextArea();
        ButtonAgregarPregunta = new rsbuttom.RSButtonMetro();
        jLabel20 = new javax.swing.JLabel();
        Ver = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        ButtonMostrarIZQ = new rsbuttom.RSButtonMetro();
        jLabel35 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        Asig3 = new javax.swing.JComboBox<>();
        tema = new javax.swing.JComboBox<>();
        nivel = new javax.swing.JComboBox<>();
        ButtonMostrarDER = new rsbuttom.RSButtonMetro();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaPreg = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        Asig2 = new javax.swing.JComboBox<>();
        ButtonMostrarCENT = new rsbuttom.RSButtonMetro();
        jLabel30 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        ButtonGenerarInforme = new rsbuttom.RSButtonMetro();
        InformeTablas = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        Info_Examen = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        Generar = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        evaluacion = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        seme = new javax.swing.JComboBox<>();
        asigna = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        fecha = new com.toedter.calendar.JDateChooser();
        preg = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        AvisoNumeros = new javax.swing.JLabel();
        ButtonAddPreg = new rsbuttom.RSButtonMetro();
        InfoTem = new javax.swing.JLabel();
        temas = new javax.swing.JComboBox<>();
        NivInfo = new javax.swing.JLabel();
        ndif = new javax.swing.JComboBox<>();
        generarExamen = new rsbuttom.RSButtonMetro();
        Separador = new javax.swing.JLabel();
        EditAsig = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        NomEditAsig = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        CodEditAsig = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        DesEditAsig = new javax.swing.JTextArea();
        BottonEditAsig = new rsbuttom.RSButtonMetro();
        jScrollPane6 = new javax.swing.JScrollPane();
        TablaAsig = new javax.swing.JTable();
        GuaEditAsig = new rsbuttom.RSButtonMetro();
        ElimEditAsig = new rsbuttom.RSButtonMetro();
        EditTem = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        ComboAsigEdit = new javax.swing.JComboBox<>();
        NomEditTem = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        DesEditTem = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        TablaTem = new javax.swing.JTable();
        ButtomEditTem = new rsbuttom.RSButtonMetro();
        ElimEditTem = new rsbuttom.RSButtonMetro();
        GuardarTem = new rsbuttom.RSButtonMetro();
        EditPreg = new javax.swing.JPanel();
        ComboAsigPreg = new javax.swing.JComboBox<>();
        jLabel52 = new javax.swing.JLabel();
        ComboTemPreg = new javax.swing.JComboBox<>();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        ComboNivelA = new javax.swing.JComboBox<>();
        jScrollPane9 = new javax.swing.JScrollPane();
        InfoPreg = new javax.swing.JTextArea();
        jLabel56 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        TablaPregEdit = new javax.swing.JTable();
        addAsig7 = new rsbuttom.RSButtonMetro();
        addAsig8 = new rsbuttom.RSButtonMetro();
        addAsig9 = new rsbuttom.RSButtonMetro();
        FechaPreg = new com.toedter.calendar.JDateChooser();
        EstadPreg = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        ComboNivPreg = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 87, 116));
        setMinimumSize(new java.awt.Dimension(1050, 800));
        setSize(new java.awt.Dimension(1017, 1093));

        PanelMenu.setBackground(new java.awt.Color(0, 103, 142));
        PanelMenu.setMaximumSize(new java.awt.Dimension(217, 830));
        PanelMenu.setPreferredSize(new java.awt.Dimension(217, 830));
        PanelMenu.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                PanelMenuComponentResized(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                PanelMenuComponentShown(evt);
            }
        });
        PanelMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Foto2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Foto2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Perfil Blanco.png"))); // NOI18N
        Foto2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        PanelMenu.add(Foto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 180, 200));

        BottonEditInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Portafolio.png"))); // NOI18N
        BottonEditInfo.setText("Añadir        ");
        BottonEditInfo.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonEditInfo.setColorHover(new java.awt.Color(128, 188, 255));
        BottonEditInfo.setColorNormal(new java.awt.Color(76, 185, 239));
        BottonEditInfo.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonEditInfo.setFocusPainted(false);
        BottonEditInfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonEditInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonEditInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonEditInfoActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonEditInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 183, 42));

        BottonGenrExam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(0)_48.png"))); // NOI18N
        BottonGenrExam.setText("Crear Examen");
        BottonGenrExam.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonGenrExam.setColorHover(new java.awt.Color(128, 188, 255));
        BottonGenrExam.setColorNormal(new java.awt.Color(76, 185, 239));
        BottonGenrExam.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonGenrExam.setFocusPainted(false);
        BottonGenrExam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonGenrExam.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonGenrExam.setMaximumSize(new java.awt.Dimension(150, 35));
        BottonGenrExam.setMinimumSize(new java.awt.Dimension(150, 35));
        BottonGenrExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonGenrExamActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonGenrExam, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 183, 42));

        BottonHome.setBackground(new java.awt.Color(76, 185, 239));
        BottonHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_2302(0)_48.png"))); // NOI18N
        BottonHome.setText("Home             ");
        BottonHome.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonHome.setColorHover(new java.awt.Color(128, 188, 255));
        BottonHome.setColorNormal(new java.awt.Color(76, 185, 239));
        BottonHome.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonHome.setFocusPainted(false);
        BottonHome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonHome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonHomeActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 183, 42));

        BottonPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(0)_48.png"))); // NOI18N
        BottonPerfil.setText("Perfil");
        BottonPerfil.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonPerfil.setColorHover(new java.awt.Color(128, 188, 255));
        BottonPerfil.setColorNormal(new java.awt.Color(76, 185, 239));
        BottonPerfil.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonPerfil.setFocusPainted(false);
        BottonPerfil.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonPerfil.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonPerfilActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 183, 42));

        jPanel21.setBackground(new java.awt.Color(0, 103, 142));

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        PanelMenu.add(jPanel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 510, 220, 30));

        BottonVerInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_e70a(1)_48.png"))); // NOI18N
        BottonVerInfo.setText("Ver - Editar");
        BottonVerInfo.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonVerInfo.setColorHover(new java.awt.Color(128, 188, 255));
        BottonVerInfo.setColorNormal(new java.awt.Color(76, 185, 239));
        BottonVerInfo.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonVerInfo.setFocusPainted(false);
        BottonVerInfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonVerInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonVerInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonVerInfoActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonVerInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 183, 42));

        jPanel22.setBackground(new java.awt.Color(0, 103, 142));

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        PanelMenu.add(jPanel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 710, 220, 20));

        jPanel10.setBackground(new java.awt.Color(0, 103, 142));

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 225, Short.MAX_VALUE)
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 182, Short.MAX_VALUE)
        );

        SubMenu.addTab("tab1", jPanel10);

        jPanel23.setBackground(new java.awt.Color(0, 103, 142));
        jPanel23.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BottonTemas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(2)_48.png"))); // NOI18N
        BottonTemas.setText("Temas");
        BottonTemas.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonTemas.setColorHover(new java.awt.Color(128, 188, 255));
        BottonTemas.setColorNormal(new java.awt.Color(76, 185, 239));
        BottonTemas.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonTemas.setFocusPainted(false);
        BottonTemas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonTemas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonTemas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonTemasActionPerformed(evt);
            }
        });
        jPanel23.add(BottonTemas, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 169, 42));

        BottonPreguntas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(2)_48.png"))); // NOI18N
        BottonPreguntas.setText("Preguntas");
        BottonPreguntas.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonPreguntas.setColorHover(new java.awt.Color(128, 188, 255));
        BottonPreguntas.setColorNormal(new java.awt.Color(76, 185, 239));
        BottonPreguntas.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonPreguntas.setFocusPainted(false);
        BottonPreguntas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonPreguntas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonPreguntas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonPreguntasActionPerformed(evt);
            }
        });
        jPanel23.add(BottonPreguntas, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 169, 42));

        BottonAsignatura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(2)_48.png"))); // NOI18N
        BottonAsignatura.setText("Asignaturas");
        BottonAsignatura.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonAsignatura.setColorHover(new java.awt.Color(128, 188, 255));
        BottonAsignatura.setColorNormal(new java.awt.Color(76, 185, 239));
        BottonAsignatura.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonAsignatura.setFocusPainted(false);
        BottonAsignatura.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonAsignatura.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonAsignaturaActionPerformed(evt);
            }
        });
        jPanel23.add(BottonAsignatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 169, 42));

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 255, 255));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("--------------------------");
        jLabel37.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel23.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, -1, 20));

        SubMenu.addTab("tab2", jPanel23);

        jPanel1.setBackground(new java.awt.Color(0, 103, 142));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 255, 255));
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("--------------------------");
        jLabel38.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jPanel1.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, -1, 20));

        EditarAsignatura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EditarIcono.png"))); // NOI18N
        EditarAsignatura.setText("Asignaturas");
        EditarAsignatura.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        EditarAsignatura.setColorHover(new java.awt.Color(128, 188, 255));
        EditarAsignatura.setColorNormal(new java.awt.Color(76, 185, 239));
        EditarAsignatura.setColorPressed(new java.awt.Color(128, 140, 207));
        EditarAsignatura.setFocusPainted(false);
        EditarAsignatura.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EditarAsignatura.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        EditarAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarAsignaturaActionPerformed(evt);
            }
        });
        jPanel1.add(EditarAsignatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 20, 169, 42));

        EditarTemas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EditarIcono.png"))); // NOI18N
        EditarTemas.setText("Temas");
        EditarTemas.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        EditarTemas.setColorHover(new java.awt.Color(128, 188, 255));
        EditarTemas.setColorNormal(new java.awt.Color(76, 185, 239));
        EditarTemas.setColorPressed(new java.awt.Color(128, 140, 207));
        EditarTemas.setFocusPainted(false);
        EditarTemas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EditarTemas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        EditarTemas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarTemasActionPerformed(evt);
            }
        });
        jPanel1.add(EditarTemas, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, 169, 42));

        EditarPreguntas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EditarIcono.png"))); // NOI18N
        EditarPreguntas.setText("Preguntas");
        EditarPreguntas.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        EditarPreguntas.setColorHover(new java.awt.Color(128, 188, 255));
        EditarPreguntas.setColorNormal(new java.awt.Color(76, 185, 239));
        EditarPreguntas.setColorPressed(new java.awt.Color(128, 140, 207));
        EditarPreguntas.setFocusPainted(false);
        EditarPreguntas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EditarPreguntas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        EditarPreguntas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarPreguntasActionPerformed(evt);
            }
        });
        jPanel1.add(EditarPreguntas, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 169, 42));

        SubMenu.addTab("tab3", jPanel1);

        PanelMenu.add(SubMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 510, 230, 210));

        getContentPane().add(PanelMenu, java.awt.BorderLayout.LINE_START);

        Fondo.setBackground(new java.awt.Color(0, 87, 116));
        Fondo.setMaximumSize(new java.awt.Dimension(1000, 830));
        Fondo.setMinimumSize(new java.awt.Dimension(1000, 700));
        Fondo.setPreferredSize(new java.awt.Dimension(700, 830));
        Fondo.setLayout(new java.awt.CardLayout(-9, -28));

        Menu.setBackground(new java.awt.Color(0, 87, 116));
        Menu.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        Home.setBackground(new java.awt.Color(0, 87, 116));
        Home.setLayout(new java.awt.BorderLayout());
        Menu.addTab("Home", Home);

        Perfil.setBackground(new java.awt.Color(255, 255, 255));
        Perfil.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 103, 142));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Contraseña:");
        Perfil.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 660, 80, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 103, 142));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Validar contraseña:");
        Perfil.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 700, 120, 20));

        BottonCamContra.setText("Cambiar contraseña");
        BottonCamContra.setColorHover(new java.awt.Color(128, 188, 255));
        BottonCamContra.setColorNormal(new java.awt.Color(1, 128, 176));
        BottonCamContra.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonCamContra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonCamContraActionPerformed(evt);
            }
        });
        Perfil.add(BottonCamContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 550, 160, 40));

        NuevaContra.setMaximumSize(new java.awt.Dimension(7, 20));
        NuevaContra.setMinimumSize(new java.awt.Dimension(7, 20));
        NuevaContra.setPreferredSize(new java.awt.Dimension(7, 20));
        Perfil.add(NuevaContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 660, 361, 25));

        ValNuevaContra.setMaximumSize(new java.awt.Dimension(7, 20));
        ValNuevaContra.setMinimumSize(new java.awt.Dimension(7, 20));
        ValNuevaContra.setPreferredSize(new java.awt.Dimension(7, 20));
        ValNuevaContra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ValNuevaContraKeyPressed(evt);
            }
        });
        Perfil.add(ValNuevaContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 700, 361, 26));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 103, 142));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Foto del Perfil");
        Perfil.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 180, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 204, 0));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel27.setText("Las contraseñas no son iguales.");
        Perfil.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 740, 200, -1));

        ButtonCambio.setText("Hacer Cambio");
        ButtonCambio.setColorHover(new java.awt.Color(128, 188, 255));
        ButtonCambio.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonCambio.setColorPressed(new java.awt.Color(128, 140, 207));
        ButtonCambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCambioActionPerformed(evt);
            }
        });
        Perfil.add(ButtonCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 770, 160, 40));

        Nombre1.setEditable(false);
        Nombre1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Nombre1.setForeground(new java.awt.Color(51, 51, 51));
        Nombre1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Nombre1.setMaximumSize(new java.awt.Dimension(7, 28));
        Nombre1.setMinimumSize(new java.awt.Dimension(7, 28));
        Nombre1.setOpaque(false);
        Nombre1.setPreferredSize(new java.awt.Dimension(7, 28));
        Perfil.add(Nombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 360, 29));

        Cedula1.setEditable(false);
        Cedula1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Cedula1.setForeground(new java.awt.Color(51, 51, 51));
        Cedula1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Cedula1.setMaximumSize(new java.awt.Dimension(7, 28));
        Cedula1.setMinimumSize(new java.awt.Dimension(7, 28));
        Cedula1.setOpaque(false);
        Cedula1.setPreferredSize(new java.awt.Dimension(7, 28));
        Perfil.add(Cedula1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 430, 360, 29));

        Usuario1.setEditable(false);
        Usuario1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        Usuario1.setForeground(new java.awt.Color(51, 51, 51));
        Usuario1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Usuario1.setMaximumSize(new java.awt.Dimension(7, 28));
        Usuario1.setMinimumSize(new java.awt.Dimension(7, 28));
        Usuario1.setOpaque(false);
        Usuario1.setPreferredSize(new java.awt.Dimension(7, 28));
        Perfil.add(Usuario1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 480, 360, 30));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 103, 142));
        jLabel3.setText("Nickname: ");
        Perfil.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 72, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 103, 142));
        jLabel2.setText("Cedula: ");
        Perfil.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 430, 70, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 103, 142));
        jLabel1.setText("Nombre:");
        Perfil.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 380, 72, -1));

        Foto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Foto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Perfil Azul.png"))); // NOI18N
        Foto1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 103, 142), 4));
        Perfil.add(Foto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 180, 200));

        BottonEditFoto.setText("Editar foto");
        BottonEditFoto.setColorHover(new java.awt.Color(128, 188, 255));
        BottonEditFoto.setColorNormal(new java.awt.Color(1, 128, 176));
        BottonEditFoto.setColorPressed(new java.awt.Color(128, 140, 207));
        BottonEditFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonEditFotoActionPerformed(evt);
            }
        });
        Perfil.add(BottonEditFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 183, 38));

        ButtonGuardarFoto.setText("Imagen por Defecto");
        ButtonGuardarFoto.setColorHover(new java.awt.Color(128, 188, 255));
        ButtonGuardarFoto.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonGuardarFoto.setColorPressed(new java.awt.Color(128, 140, 207));
        ButtonGuardarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGuardarFotoActionPerformed(evt);
            }
        });
        Perfil.add(ButtonGuardarFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 184, 38));

        jLabel39.setForeground(new java.awt.Color(0, 103, 142));
        jLabel39.setText("_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________-");
        jLabel39.setToolTipText("");
        Perfil.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 590, 1780, -1));

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(0, 103, 142));
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel41.setText("Ingrese la nueva contraseña");
        Perfil.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 620, 180, -1));

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(0, 103, 142));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel42.setText("Datos del Perfil");
        Perfil.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 180, -1));

        jLabel43.setForeground(new java.awt.Color(0, 103, 142));
        jLabel43.setText("_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________-");
        jLabel43.setToolTipText("");
        Perfil.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1770, -1));

        jLabel44.setForeground(new java.awt.Color(0, 103, 142));
        jLabel44.setText("_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________-");
        jLabel44.setToolTipText("");
        Perfil.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 1780, -1));

        Menu.addTab("Perfil", Perfil);

        Asignatura.setBackground(new java.awt.Color(255, 255, 255));
        Asignatura.setLayout(new java.awt.GridBagLayout());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 87, 116));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText(" Agregar Asignatura");
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.ipadx = 231;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Asignatura.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 177;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 7, 0, 0);
        Asignatura.add(NombreDelaAsignatura, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 87, 116));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Nombre de la asigantura:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Asignatura.add(jLabel13, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 87, 116));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Codigo de la asignatura:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(23, 20, 0, 0);
        Asignatura.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 177;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(13, 7, 0, 0);
        Asignatura.add(codMat, gridBagConstraints);

        AgregarDescripcion.setBackground(new java.awt.Color(255, 255, 255));
        AgregarDescripcion.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        AgregarDescripcion.setForeground(new java.awt.Color(0, 87, 116));
        AgregarDescripcion.setText("Agregar descripcion");
        AgregarDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarDescripcionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(21, 20, 0, 0);
        Asignatura.add(AgregarDescripcion, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 87, 116));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Descripcion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(27, 20, 0, 0);
        Asignatura.add(jLabel12, gridBagConstraints);

        Descripcion.setColumns(20);
        Descripcion.setLineWrap(true);
        Descripcion.setRows(5);
        Descripcion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        jScrollPane1.setViewportView(Descripcion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 13;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1397;
        gridBagConstraints.ipady = 443;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(23, 20, 0, 24);
        Asignatura.add(jScrollPane1, gridBagConstraints);

        addAsig.setText("Agregar");
        addAsig.setColorHover(new java.awt.Color(128, 188, 255));
        addAsig.setColorNormal(new java.awt.Color(1, 128, 176));
        addAsig.setColorPressed(new java.awt.Color(128, 140, 207));
        addAsig.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addAsig.setMaximumSize(new java.awt.Dimension(125, 17));
        addAsig.setMinimumSize(new java.awt.Dimension(125, 17));
        addAsig.setPreferredSize(new java.awt.Dimension(125, 17));
        addAsig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAsigActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 109;
        gridBagConstraints.ipady = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(40, 20, 44, 0);
        Asignatura.add(addAsig, gridBagConstraints);

        Menu.addTab("Asigantura", Asignatura);

        Tema.setBackground(new java.awt.Color(255, 255, 255));
        Tema.setLayout(new java.awt.GridBagLayout());

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 87, 116));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText(" Agregar Tema");
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 282;
        gridBagConstraints.ipady = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Tema.add(jLabel17, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 87, 116));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setText("Seleccione la Asignatura a la cual pertenece el Tema.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 20, 0, 0);
        Tema.add(jLabel14, gridBagConstraints);

        ComboAsignatura.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboAsignatura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        ComboAsignatura.setMaximumSize(new java.awt.Dimension(20, 204));
        ComboAsignatura.setMinimumSize(new java.awt.Dimension(20, 20));
        ComboAsignatura.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 147;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        Tema.add(ComboAsignatura, gridBagConstraints);

        NombreDelTema.setMaximumSize(new java.awt.Dimension(6, 28));
        NombreDelTema.setMinimumSize(new java.awt.Dimension(6, 28));
        NombreDelTema.setPreferredSize(new java.awt.Dimension(6, 28));
        NombreDelTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreDelTemaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 7;
        gridBagConstraints.ipadx = 234;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 30, 0, 0);
        Tema.add(NombreDelTema, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 87, 116));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("Nombre del Tema:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 17;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(17, 20, 0, 0);
        Tema.add(jLabel15, gridBagConstraints);

        AgregarDescripcionTema.setBackground(new java.awt.Color(255, 255, 255));
        AgregarDescripcionTema.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AgregarDescripcionTema.setForeground(new java.awt.Color(0, 87, 116));
        AgregarDescripcionTema.setText("Agregar descripcion");
        AgregarDescripcionTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarDescripcionTemaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Tema.add(AgregarDescripcionTema, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 87, 116));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Descripcion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(25, 20, 0, 0);
        Tema.add(jLabel16, gridBagConstraints);

        DescripcionTema.setColumns(20);
        DescripcionTema.setLineWrap(true);
        DescripcionTema.setRows(5);
        DescripcionTema.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        jScrollPane2.setViewportView(DescripcionTema);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1167;
        gridBagConstraints.ipady = 401;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(23, 20, 0, 254);
        Tema.add(jScrollPane2, gridBagConstraints);

        ButtonAgregarTema.setText("Agregar");
        ButtonAgregarTema.setColorHover(new java.awt.Color(128, 188, 255));
        ButtonAgregarTema.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonAgregarTema.setColorPressed(new java.awt.Color(128, 140, 207));
        ButtonAgregarTema.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ButtonAgregarTema.setMaximumSize(new java.awt.Dimension(125, 17));
        ButtonAgregarTema.setMinimumSize(new java.awt.Dimension(125, 17));
        ButtonAgregarTema.setPreferredSize(new java.awt.Dimension(125, 17));
        ButtonAgregarTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAgregarTemaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 119;
        gridBagConstraints.ipady = 30;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(32, 20, 43, 0);
        Tema.add(ButtonAgregarTema, gridBagConstraints);

        Menu.addTab("Tema", Tema);

        Pregunta.setBackground(new java.awt.Color(255, 255, 255));
        Pregunta.setLayout(new java.awt.GridBagLayout());

        ComboAsignaturaS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboAsignaturaS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        ComboAsignaturaS.setMaximumSize(new java.awt.Dimension(40, 20));
        ComboAsignaturaS.setMinimumSize(new java.awt.Dimension(40, 20));
        ComboAsignaturaS.setPreferredSize(new java.awt.Dimension(40, 20));
        ComboAsignaturaS.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboAsignaturaSPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        Pregunta.add(ComboAsignaturaS, gridBagConstraints);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 87, 116));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel18.setText("Asignatura");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 96;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Pregunta.add(jLabel18, gridBagConstraints);

        ComboBoxTemas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboBoxTemas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        ComboBoxTemas.setMaximumSize(new java.awt.Dimension(40, 20));
        ComboBoxTemas.setMinimumSize(new java.awt.Dimension(40, 20));
        ComboBoxTemas.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        Pregunta.add(ComboBoxTemas, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 87, 116));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("Temas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 190;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        Pregunta.add(jLabel19, gridBagConstraints);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 87, 116));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("Dificultad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 175;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        Pregunta.add(jLabel21, gridBagConstraints);

        ComboNivel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboNivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Facil", "Medio", "Dificil" }));
        ComboNivel.setMaximumSize(new java.awt.Dimension(40, 20));
        ComboNivel.setMinimumSize(new java.awt.Dimension(40, 20));
        ComboNivel.setPreferredSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        Pregunta.add(ComboNivel, gridBagConstraints);

        jLabel10.setBackground(new java.awt.Color(255, 153, 51));
        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 102, 51));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("*Escriba la pregunta aqui.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        Pregunta.add(jLabel10, gridBagConstraints);

        Preguntas.setColumns(20);
        Preguntas.setLineWrap(true);
        Preguntas.setRows(5);
        Preguntas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        jScrollPane3.setViewportView(Preguntas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1389;
        gridBagConstraints.ipady = 365;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 32);
        Pregunta.add(jScrollPane3, gridBagConstraints);

        ButtonAgregarPregunta.setText("Agregar Pregunta");
        ButtonAgregarPregunta.setColorHover(new java.awt.Color(128, 188, 255));
        ButtonAgregarPregunta.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonAgregarPregunta.setColorPressed(new java.awt.Color(128, 140, 207));
        ButtonAgregarPregunta.setPreferredSize(new java.awt.Dimension(125, 17));
        ButtonAgregarPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAgregarPreguntaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 55;
        gridBagConstraints.ipady = 36;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(32, 20, 43, 0);
        Pregunta.add(ButtonAgregarPregunta, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 87, 116));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText(" Agregar Pregunta");
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 240;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Pregunta.add(jLabel20, gridBagConstraints);

        Menu.addTab("Pregunta", Pregunta);

        Ver.setBackground(new java.awt.Color(0, 87, 116));
        Ver.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ButtonMostrarIZQ.setBackground(new java.awt.Color(1, 128, 176));
        ButtonMostrarIZQ.setText("Mostrar ");
        ButtonMostrarIZQ.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        ButtonMostrarIZQ.setColorHover(new java.awt.Color(128, 188, 255));
        ButtonMostrarIZQ.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonMostrarIZQ.setColorPressed(new java.awt.Color(128, 140, 207));
        ButtonMostrarIZQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMostrarIZQActionPerformed(evt);
            }
        });
        jPanel11.add(ButtonMostrarIZQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 170, 30));

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 87, 116));
        jLabel35.setText("Todas las Asignaturas");
        jPanel11.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 160, -1));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 0, 0);
        Ver.add(jPanel11, gridBagConstraints);

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Asig3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        Asig3.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                Asig3PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jPanel18.add(Asig3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 150, -1));

        tema.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        tema.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                temaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jPanel18.add(tema, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 150, -1));

        nivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "1", "2", "3" }));
        jPanel18.add(nivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 190, 150, -1));

        ButtonMostrarDER.setBackground(new java.awt.Color(1, 128, 176));
        ButtonMostrarDER.setText("Mostar");
        ButtonMostrarDER.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        ButtonMostrarDER.setColorHover(new java.awt.Color(128, 188, 255));
        ButtonMostrarDER.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonMostrarDER.setColorPressed(new java.awt.Color(128, 140, 207));
        ButtonMostrarDER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMostrarDERActionPerformed(evt);
            }
        });
        jPanel18.add(ButtonMostrarDER, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 170, 30));

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 87, 116));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel31.setText("Temas");
        jPanel18.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 180, 20));

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 87, 116));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel32.setText("Dificultad");
        jPanel18.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 180, -1));

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 87, 116));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel33.setText("Asignatura");
        jPanel18.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 130, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 87, 116));
        jLabel6.setText("Preguntas");
        jPanel18.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 180, 20));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 0);
        Ver.add(jPanel18, gridBagConstraints);

        TablaPreg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TablaPreg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}

    );
    jScrollPane4.setViewportView(TablaPreg);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 1177;
    gridBagConstraints.ipady = 763;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 21, 56, 22);
    Ver.add(jScrollPane4, gridBagConstraints);

    jPanel16.setBackground(new java.awt.Color(255, 255, 255));
    jPanel16.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
    jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    Asig2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    Asig2.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            Asig2PopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    jPanel16.add(Asig2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 150, -1));

    ButtonMostrarCENT.setBackground(new java.awt.Color(1, 128, 176));
    ButtonMostrarCENT.setText("Mostrar");
    ButtonMostrarCENT.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
    ButtonMostrarCENT.setColorHover(new java.awt.Color(128, 188, 255));
    ButtonMostrarCENT.setColorNormal(new java.awt.Color(1, 128, 176));
    ButtonMostrarCENT.setColorPressed(new java.awt.Color(128, 140, 207));
    ButtonMostrarCENT.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonMostrarCENTActionPerformed(evt);
        }
    });
    jPanel16.add(ButtonMostrarCENT, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 170, 30));

    jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel30.setForeground(new java.awt.Color(0, 87, 116));
    jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel30.setText("Asignatura");
    jPanel16.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 110, -1));

    jLabel36.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel36.setForeground(new java.awt.Color(0, 87, 116));
    jLabel36.setText("Temas de la Asignatura");
    jPanel16.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 160, 20));

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.ipadx = 10;
    gridBagConstraints.ipady = 10;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 0);
    Ver.add(jPanel16, gridBagConstraints);

    ButtonGenerarInforme.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(0)_48.png"))); // NOI18N
    ButtonGenerarInforme.setText("Informe");
    ButtonGenerarInforme.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
    ButtonGenerarInforme.setColorHover(new java.awt.Color(128, 188, 255));
    ButtonGenerarInforme.setColorNormal(new java.awt.Color(1, 128, 176));
    ButtonGenerarInforme.setColorPressed(new java.awt.Color(128, 140, 207));
    ButtonGenerarInforme.setFocusPainted(false);
    ButtonGenerarInforme.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ButtonGenerarInforme.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    ButtonGenerarInforme.setMaximumSize(new java.awt.Dimension(150, 35));
    ButtonGenerarInforme.setMinimumSize(new java.awt.Dimension(150, 35));
    ButtonGenerarInforme.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonGenerarInformeActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 40;
    gridBagConstraints.ipady = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(30, 31, 0, 0);
    Ver.add(ButtonGenerarInforme, gridBagConstraints);

    Menu.addTab("Ver", Ver);

    jPanel19.setBackground(new java.awt.Color(0, 87, 116));
    jPanel19.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

    javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
    jPanel19.setLayout(jPanel19Layout);
    jPanel19Layout.setHorizontalGroup(
        jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 1442, Short.MAX_VALUE)
    );
    jPanel19Layout.setVerticalGroup(
        jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGap(0, 854, Short.MAX_VALUE)
    );

    javax.swing.GroupLayout InformeTablasLayout = new javax.swing.GroupLayout(InformeTablas);
    InformeTablas.setLayout(InformeTablasLayout);
    InformeTablasLayout.setHorizontalGroup(
        InformeTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(InformeTablasLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );
    InformeTablasLayout.setVerticalGroup(
        InformeTablasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    Menu.addTab("Informe", InformeTablas);

    Info_Examen.setLayout(new java.awt.GridBagLayout());

    jPanel17.setBackground(new java.awt.Color(0, 87, 116));
    jPanel17.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
    jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
    gridBagConstraints.ipadx = 110;
    gridBagConstraints.ipady = 342;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
    gridBagConstraints.insets = new java.awt.Insets(0, 498, 0, 549);
    Info_Examen.add(jPanel17, gridBagConstraints);

    Menu.addTab("Info_Examen", Info_Examen);

    Generar.setBackground(new java.awt.Color(255, 255, 255));
    Generar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel23.setForeground(new java.awt.Color(0, 87, 116));
    jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel23.setText(" Informacion Examen");
    jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    Generar.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 300, 36));

    jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel25.setForeground(new java.awt.Color(0, 87, 116));
    jLabel25.setText("Titulo:");
    Generar.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 110, -1));

    evaluacion.setMaximumSize(new java.awt.Dimension(8, 20));
    evaluacion.setMinimumSize(new java.awt.Dimension(8, 20));
    evaluacion.setPreferredSize(new java.awt.Dimension(8, 20));
    Generar.add(evaluacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 250, 25));

    nombre.setEditable(false);
    nombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    nombre.setMaximumSize(new java.awt.Dimension(7, 20));
    nombre.setMinimumSize(new java.awt.Dimension(7, 20));
    nombre.setOpaque(false);
    nombre.setPreferredSize(new java.awt.Dimension(7, 20));
    Generar.add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 250, 25));

    jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel34.setForeground(new java.awt.Color(0, 87, 116));
    jLabel34.setText("Nombre del Profesor:");
    Generar.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 22));

    jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel4.setForeground(new java.awt.Color(0, 87, 116));
    jLabel4.setText("Semestre:");
    Generar.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

    seme.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Primero", "Segundo" }));
    seme.setMaximumSize(new java.awt.Dimension(7, 20));
    seme.setMinimumSize(new java.awt.Dimension(7, 20));
    seme.setPreferredSize(new java.awt.Dimension(7, 20));
    Generar.add(seme, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 250, 25));

    asigna.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    asigna.setMaximumSize(new java.awt.Dimension(7, 20));
    asigna.setMinimumSize(new java.awt.Dimension(7, 20));
    asigna.setPreferredSize(new java.awt.Dimension(7, 20));
    asigna.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            asignaActionPerformed(evt);
        }
    });
    Generar.add(asigna, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 250, 25));

    jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel24.setForeground(new java.awt.Color(0, 87, 116));
    jLabel24.setText("Asignatura:");
    Generar.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 120, -1));

    jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel26.setForeground(new java.awt.Color(0, 87, 116));
    jLabel26.setText("Fecha:");
    Generar.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 110, -1));

    fecha.setPreferredSize(new java.awt.Dimension(7, 20));
    Generar.add(fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 250, 25));

    preg.setMaximumSize(new java.awt.Dimension(7, 20));
    preg.setMinimumSize(new java.awt.Dimension(7, 20));
    preg.setPreferredSize(new java.awt.Dimension(7, 20));
    preg.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyPressed(java.awt.event.KeyEvent evt) {
            pregKeyPressed(evt);
        }
        public void keyReleased(java.awt.event.KeyEvent evt) {
            pregKeyReleased(evt);
        }
        public void keyTyped(java.awt.event.KeyEvent evt) {
            pregKeyTyped(evt);
        }
    });
    Generar.add(preg, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 250, 25));

    jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel22.setForeground(new java.awt.Color(0, 87, 116));
    jLabel22.setText("Numero de preguntas:");
    Generar.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 143, -1));

    AvisoNumeros.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    AvisoNumeros.setForeground(new java.awt.Color(255, 102, 51));
    AvisoNumeros.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    AvisoNumeros.setText("*El numero de preguntas es solo numerico.");
    Generar.add(AvisoNumeros, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, 270, -1));

    ButtonAddPreg.setText("Generar");
    ButtonAddPreg.setColorHover(new java.awt.Color(128, 188, 255));
    ButtonAddPreg.setColorNormal(new java.awt.Color(1, 128, 176));
    ButtonAddPreg.setColorPressed(new java.awt.Color(128, 140, 207));
    ButtonAddPreg.setMaximumSize(new java.awt.Dimension(125, 17));
    ButtonAddPreg.setMinimumSize(new java.awt.Dimension(125, 17));
    ButtonAddPreg.setPreferredSize(new java.awt.Dimension(125, 17));
    ButtonAddPreg.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonAddPregActionPerformed(evt);
        }
    });
    Generar.add(ButtonAddPreg, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, 180, 43));

    InfoTem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    InfoTem.setForeground(new java.awt.Color(0, 87, 116));
    InfoTem.setText("Tema");
    Generar.add(InfoTem, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 520, -1, -1));

    temas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    Generar.add(temas, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 550, 250, 25));

    NivInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    NivInfo.setForeground(new java.awt.Color(0, 87, 116));
    NivInfo.setText("Nivel de dificultad");
    Generar.add(NivInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 590, -1, -1));

    ndif.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "1", "2", "3" }));
    Generar.add(ndif, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 620, 250, 25));

    generarExamen.setText("Añadir Pregunta");
    generarExamen.setColorHover(new java.awt.Color(128, 188, 255));
    generarExamen.setColorNormal(new java.awt.Color(1, 128, 176));
    generarExamen.setColorPressed(new java.awt.Color(128, 140, 207));
    generarExamen.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            generarExamenActionPerformed(evt);
        }
    });
    Generar.add(generarExamen, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 670, 180, 43));

    Separador.setText("__________________________________________________________________________________________________________");
    Generar.add(Separador, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 490, 700, -1));

    Menu.addTab("Generar", Generar);

    EditAsig.setBackground(new java.awt.Color(255, 255, 255));
    EditAsig.setLayout(new java.awt.GridBagLayout());

    jLabel40.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel40.setForeground(new java.awt.Color(0, 87, 116));
    jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel40.setText(" Editor de  Asignatura");
    jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 25;
    gridBagConstraints.ipadx = 242;
    gridBagConstraints.ipady = 21;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
    EditAsig.add(jLabel40, gridBagConstraints);

    NomEditAsig.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 7;
    gridBagConstraints.ipadx = 174;
    gridBagConstraints.ipady = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 7, 0, 0);
    EditAsig.add(NomEditAsig, gridBagConstraints);

    jLabel45.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel45.setForeground(new java.awt.Color(0, 87, 116));
    jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel45.setText("Nombre de la asigantura:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.ipady = 10;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
    EditAsig.add(jLabel45, gridBagConstraints);

    jLabel46.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel46.setForeground(new java.awt.Color(0, 87, 116));
    jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel46.setText("Codigo de la asignatura:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.ipadx = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(23, 20, 0, 0);
    EditAsig.add(jLabel46, gridBagConstraints);

    CodEditAsig.setEditable(false);
    CodEditAsig.setMaximumSize(new java.awt.Dimension(6, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 7;
    gridBagConstraints.ipadx = 174;
    gridBagConstraints.ipady = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(13, 7, 0, 0);
    EditAsig.add(CodEditAsig, gridBagConstraints);

    jLabel47.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel47.setForeground(new java.awt.Color(0, 87, 116));
    jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel47.setText("Descripcion");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.ipadx = 10;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(21, 20, 0, 0);
    EditAsig.add(jLabel47, gridBagConstraints);

    jScrollPane5.setMaximumSize(new java.awt.Dimension(430, 470));
    jScrollPane5.setMinimumSize(new java.awt.Dimension(430, 470));
    jScrollPane5.setPreferredSize(new java.awt.Dimension(430, 470));

    DesEditAsig.setEditable(false);
    DesEditAsig.setColumns(20);
    DesEditAsig.setLineWrap(true);
    DesEditAsig.setRows(5);
    DesEditAsig.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    DesEditAsig.setMaximumSize(new java.awt.Dimension(164, 94));
    DesEditAsig.setMinimumSize(new java.awt.Dimension(164, 94));
    DesEditAsig.setPreferredSize(new java.awt.Dimension(164, 94));
    jScrollPane5.setViewportView(DesEditAsig);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 39;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = -20;
    gridBagConstraints.ipady = -10;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(13, 20, 0, 0);
    EditAsig.add(jScrollPane5, gridBagConstraints);

    BottonEditAsig.setText("Editar");
    BottonEditAsig.setColorBorde(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    BottonEditAsig.setColorHover(new java.awt.Color(128, 188, 255));
    BottonEditAsig.setColorNormal(new java.awt.Color(255, 102, 0));
    BottonEditAsig.setColorPressed(new java.awt.Color(128, 140, 207));
    BottonEditAsig.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    BottonEditAsig.setMaximumSize(new java.awt.Dimension(125, 17));
    BottonEditAsig.setMinimumSize(new java.awt.Dimension(125, 17));
    BottonEditAsig.setPreferredSize(new java.awt.Dimension(125, 17));
    BottonEditAsig.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            BottonEditAsigActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
    EditAsig.add(BottonEditAsig, gridBagConstraints);

    TablaAsig.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    )
    {public boolean isCellEditable(int row, int column){return false;}}
    );
    TablaAsig.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            TablaAsigMouseClicked(evt);
        }
        public void mouseReleased(java.awt.event.MouseEvent evt) {
            TablaAsigMouseReleased(evt);
        }
    });
    TablaAsig.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            TablaAsigKeyReleased(evt);
        }
    });
    jScrollPane6.setViewportView(TablaAsig);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 39;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 8;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 917;
    gridBagConstraints.ipady = 753;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(20, 70, 56, 24);
    EditAsig.add(jScrollPane6, gridBagConstraints);

    GuaEditAsig.setText("Guardar");
    GuaEditAsig.setColorHover(new java.awt.Color(128, 188, 255));
    GuaEditAsig.setColorNormal(new java.awt.Color(1, 128, 176));
    GuaEditAsig.setColorPressed(new java.awt.Color(128, 140, 207));
    GuaEditAsig.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    GuaEditAsig.setMaximumSize(new java.awt.Dimension(125, 17));
    GuaEditAsig.setMinimumSize(new java.awt.Dimension(125, 17));
    GuaEditAsig.setPreferredSize(new java.awt.Dimension(125, 17));
    GuaEditAsig.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            GuaEditAsigActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 13;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 26;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
    EditAsig.add(GuaEditAsig, gridBagConstraints);

    ElimEditAsig.setText("Eliminar");
    ElimEditAsig.setColorHover(new java.awt.Color(128, 188, 255));
    ElimEditAsig.setColorNormal(new java.awt.Color(255, 0, 0));
    ElimEditAsig.setColorPressed(new java.awt.Color(128, 140, 207));
    ElimEditAsig.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ElimEditAsig.setMaximumSize(new java.awt.Dimension(125, 17));
    ElimEditAsig.setMinimumSize(new java.awt.Dimension(125, 17));
    ElimEditAsig.setPreferredSize(new java.awt.Dimension(125, 17));
    ElimEditAsig.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ElimEditAsigActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
    EditAsig.add(ElimEditAsig, gridBagConstraints);

    Menu.addTab("Asigantura", EditAsig);

    EditTem.setBackground(new java.awt.Color(255, 255, 255));
    EditTem.setLayout(new java.awt.GridBagLayout());

    jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel48.setForeground(new java.awt.Color(0, 87, 116));
    jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel48.setText(" Agregar Tema");
    jLabel48.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 23;
    gridBagConstraints.ipadx = 300;
    gridBagConstraints.ipady = 19;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
    EditTem.add(jLabel48, gridBagConstraints);

    jLabel49.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel49.setForeground(new java.awt.Color(0, 87, 116));
    jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel49.setText("Seleccione la Asignatura a la cual pertenece el Tema.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 9;
    gridBagConstraints.ipadx = 4;
    gridBagConstraints.ipady = 13;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(18, 20, 0, 0);
    EditTem.add(jLabel49, gridBagConstraints);

    ComboAsigEdit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ComboAsigEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    ComboAsigEdit.setMaximumSize(new java.awt.Dimension(20, 204));
    ComboAsigEdit.setMinimumSize(new java.awt.Dimension(20, 20));
    ComboAsigEdit.setPreferredSize(new java.awt.Dimension(20, 20));
    ComboAsigEdit.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            ComboAsigEditPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.ipadx = 133;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
    EditTem.add(ComboAsigEdit, gridBagConstraints);

    NomEditTem.setMaximumSize(new java.awt.Dimension(6, 28));
    NomEditTem.setMinimumSize(new java.awt.Dimension(6, 28));
    NomEditTem.setPreferredSize(new java.awt.Dimension(6, 28));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 15;
    gridBagConstraints.ipadx = 250;
    gridBagConstraints.ipady = -1;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(17, 30, 0, 0);
    EditTem.add(NomEditTem, gridBagConstraints);

    jLabel50.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel50.setForeground(new java.awt.Color(0, 87, 116));
    jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel50.setText("Nombre del Tema:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.ipadx = 17;
    gridBagConstraints.ipady = 13;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(17, 20, 0, 0);
    EditTem.add(jLabel50, gridBagConstraints);

    jLabel51.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel51.setForeground(new java.awt.Color(0, 87, 116));
    jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel51.setText("Descripcion");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.ipadx = 20;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(25, 20, 0, 0);
    EditTem.add(jLabel51, gridBagConstraints);

    DesEditTem.setColumns(20);
    DesEditTem.setLineWrap(true);
    DesEditTem.setRows(5);
    DesEditTem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    jScrollPane7.setViewportView(DesEditTem);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.gridwidth = 32;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 387;
    gridBagConstraints.ipady = 377;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(23, 20, 0, 0);
    EditTem.add(jScrollPane7, gridBagConstraints);

    TablaTem.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    )
    {public boolean isCellEditable(int row, int column){return false;}}

    );
    TablaTem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseReleased(java.awt.event.MouseEvent evt) {
            TablaTemMouseReleased(evt);
        }
    });
    TablaTem.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            TablaTemKeyReleased(evt);
        }
    });
    jScrollPane8.setViewportView(TablaTem);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 32;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 10;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 967;
    gridBagConstraints.ipady = 743;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 66, 24);
    EditTem.add(jScrollPane8, gridBagConstraints);

    ButtomEditTem.setText("Editar");
    ButtomEditTem.setColorBorde(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    ButtomEditTem.setColorHover(new java.awt.Color(128, 188, 255));
    ButtomEditTem.setColorNormal(new java.awt.Color(255, 102, 0));
    ButtomEditTem.setColorPressed(new java.awt.Color(128, 140, 207));
    ButtomEditTem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ButtomEditTem.setMaximumSize(new java.awt.Dimension(125, 17));
    ButtomEditTem.setMinimumSize(new java.awt.Dimension(125, 17));
    ButtomEditTem.setPreferredSize(new java.awt.Dimension(125, 17));
    ButtomEditTem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtomEditTemActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
    EditTem.add(ButtomEditTem, gridBagConstraints);

    ElimEditTem.setText("Eliminar");
    ElimEditTem.setColorHover(new java.awt.Color(128, 188, 255));
    ElimEditTem.setColorNormal(new java.awt.Color(255, 0, 0));
    ElimEditTem.setColorPressed(new java.awt.Color(128, 140, 207));
    ElimEditTem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ElimEditTem.setMaximumSize(new java.awt.Dimension(125, 17));
    ElimEditTem.setMinimumSize(new java.awt.Dimension(125, 17));
    ElimEditTem.setPreferredSize(new java.awt.Dimension(125, 17));
    ElimEditTem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ElimEditTemActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
    EditTem.add(ElimEditTem, gridBagConstraints);

    GuardarTem.setText("Guardar");
    GuardarTem.setColorHover(new java.awt.Color(128, 188, 255));
    GuardarTem.setColorNormal(new java.awt.Color(1, 128, 176));
    GuardarTem.setColorPressed(new java.awt.Color(128, 140, 207));
    GuardarTem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    GuardarTem.setMaximumSize(new java.awt.Dimension(125, 17));
    GuardarTem.setMinimumSize(new java.awt.Dimension(125, 17));
    GuardarTem.setPreferredSize(new java.awt.Dimension(125, 17));
    GuardarTem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            GuardarTemActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 8;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.gridwidth = 24;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
    EditTem.add(GuardarTem, gridBagConstraints);

    Menu.addTab("Tema", EditTem);

    EditPreg.setBackground(new java.awt.Color(255, 255, 255));
    EditPreg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    EditPreg.setLayout(new java.awt.GridBagLayout());

    ComboAsigPreg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ComboAsigPreg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    ComboAsigPreg.setMaximumSize(new java.awt.Dimension(40, 20));
    ComboAsigPreg.setMinimumSize(new java.awt.Dimension(40, 20));
    ComboAsigPreg.setPreferredSize(new java.awt.Dimension(40, 20));
    ComboAsigPreg.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            ComboAsigPregPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.ipadx = 120;
    gridBagConstraints.ipady = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
    EditPreg.add(ComboAsigPreg, gridBagConstraints);

    jLabel52.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel52.setForeground(new java.awt.Color(0, 87, 116));
    jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel52.setText("Ultimo uso");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 16;
    gridBagConstraints.ipady = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
    EditPreg.add(jLabel52, gridBagConstraints);

    ComboTemPreg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ComboTemPreg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    ComboTemPreg.setMaximumSize(new java.awt.Dimension(40, 20));
    ComboTemPreg.setMinimumSize(new java.awt.Dimension(40, 20));
    ComboTemPreg.setPreferredSize(new java.awt.Dimension(40, 20));
    ComboTemPreg.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            ComboTemPregPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 28;
    gridBagConstraints.ipadx = 110;
    gridBagConstraints.ipady = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
    EditPreg.add(ComboTemPreg, gridBagConstraints);

    jLabel53.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel53.setForeground(new java.awt.Color(0, 87, 116));
    jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel53.setText("Temas");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 7;
    gridBagConstraints.ipadx = 40;
    gridBagConstraints.ipady = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(19, 20, 0, 0);
    EditPreg.add(jLabel53, gridBagConstraints);

    jLabel54.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel54.setForeground(new java.awt.Color(0, 87, 116));
    jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel54.setText("Dificultad");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 50;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(19, 20, 0, 0);
    EditPreg.add(jLabel54, gridBagConstraints);

    ComboNivelA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ComboNivelA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "1", "2", "3" }));
    ComboNivelA.setMaximumSize(new java.awt.Dimension(40, 20));
    ComboNivelA.setMinimumSize(new java.awt.Dimension(40, 20));
    ComboNivelA.setPreferredSize(new java.awt.Dimension(40, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.ipadx = 20;
    gridBagConstraints.ipady = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
    EditPreg.add(ComboNivelA, gridBagConstraints);

    InfoPreg.setColumns(20);
    InfoPreg.setLineWrap(true);
    InfoPreg.setRows(5);
    InfoPreg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    jScrollPane9.setViewportView(InfoPreg);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 10;
    gridBagConstraints.gridwidth = 51;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 387;
    gridBagConstraints.ipady = 347;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(24, 20, 0, 0);
    EditPreg.add(jScrollPane9, gridBagConstraints);

    jLabel56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel56.setForeground(new java.awt.Color(0, 87, 116));
    jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel56.setText(" Agregar Pregunta");
    jLabel56.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 52;
    gridBagConstraints.ipadx = 280;
    gridBagConstraints.ipady = 21;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(21, 21, 0, 0);
    EditPreg.add(jLabel56, gridBagConstraints);

    TablaPregEdit.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    )
    {public boolean isCellEditable(int row, int column){return false;}}

    );
    TablaPregEdit.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseReleased(java.awt.event.MouseEvent evt) {
            TablaPregEditMouseReleased(evt);
        }
    });
    TablaPregEdit.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            TablaPregEditKeyReleased(evt);
        }
    });
    jScrollPane10.setViewportView(TablaPregEdit);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 52;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 13;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 935;
    gridBagConstraints.ipady = 751;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(21, 42, 57, 33);
    EditPreg.add(jScrollPane10, gridBagConstraints);

    addAsig7.setText("Editar");
    addAsig7.setColorBorde(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    addAsig7.setColorHover(new java.awt.Color(128, 188, 255));
    addAsig7.setColorNormal(new java.awt.Color(255, 102, 0));
    addAsig7.setColorPressed(new java.awt.Color(128, 140, 207));
    addAsig7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    addAsig7.setMaximumSize(new java.awt.Dimension(125, 17));
    addAsig7.setMinimumSize(new java.awt.Dimension(125, 17));
    addAsig7.setPreferredSize(new java.awt.Dimension(125, 17));
    addAsig7.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addAsig7ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 11;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(12, 20, 0, 0);
    EditPreg.add(addAsig7, gridBagConstraints);

    addAsig8.setText("Eliminar");
    addAsig8.setColorHover(new java.awt.Color(128, 188, 255));
    addAsig8.setColorNormal(new java.awt.Color(255, 0, 0));
    addAsig8.setColorPressed(new java.awt.Color(128, 140, 207));
    addAsig8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    addAsig8.setMaximumSize(new java.awt.Dimension(125, 17));
    addAsig8.setMinimumSize(new java.awt.Dimension(125, 17));
    addAsig8.setPreferredSize(new java.awt.Dimension(125, 17));
    addAsig8.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addAsig8ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 3;
    gridBagConstraints.gridy = 11;
    gridBagConstraints.gridwidth = 10;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(12, 10, 0, 0);
    EditPreg.add(addAsig8, gridBagConstraints);

    addAsig9.setText("Guardar");
    addAsig9.setColorHover(new java.awt.Color(128, 188, 255));
    addAsig9.setColorNormal(new java.awt.Color(1, 128, 176));
    addAsig9.setColorPressed(new java.awt.Color(128, 140, 207));
    addAsig9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    addAsig9.setMaximumSize(new java.awt.Dimension(125, 17));
    addAsig9.setMinimumSize(new java.awt.Dimension(125, 17));
    addAsig9.setPreferredSize(new java.awt.Dimension(125, 17));
    addAsig9.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addAsig9ActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 22;
    gridBagConstraints.gridy = 11;
    gridBagConstraints.gridwidth = 29;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(12, 10, 0, 0);
    EditPreg.add(addAsig9, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.ipadx = 223;
    gridBagConstraints.ipady = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
    EditPreg.add(FechaPreg, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.ipadx = 244;
    gridBagConstraints.ipady = 4;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
    EditPreg.add(EstadPreg, gridBagConstraints);

    jButton1.setBackground(new java.awt.Color(255, 102, 102));
    jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\Usuario\\Desktop\\Entypo_d83d(0)_32.png")); // NOI18N
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 12;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 11;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.ipadx = -25;
    gridBagConstraints.ipady = -16;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
    EditPreg.add(jButton1, gridBagConstraints);

    jLabel55.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel55.setForeground(new java.awt.Color(0, 87, 116));
    jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel55.setText("Asignatura");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 16;
    gridBagConstraints.ipady = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(19, 20, 0, 0);
    EditPreg.add(jLabel55, gridBagConstraints);

    jLabel57.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel57.setForeground(new java.awt.Color(0, 87, 116));
    jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel57.setText("Nivel Actual");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 11;
    gridBagConstraints.ipady = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(33, 20, 0, 0);
    EditPreg.add(jLabel57, gridBagConstraints);

    jLabel58.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel58.setForeground(new java.awt.Color(0, 87, 116));
    jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel58.setText("Estado");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 38;
    gridBagConstraints.ipady = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 20, 0, 0);
    EditPreg.add(jLabel58, gridBagConstraints);

    ComboNivPreg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ComboNivPreg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "1", "2", "3" }));
    ComboNivPreg.setMaximumSize(new java.awt.Dimension(40, 20));
    ComboNivPreg.setMinimumSize(new java.awt.Dimension(40, 20));
    ComboNivPreg.setPreferredSize(new java.awt.Dimension(40, 20));
    ComboNivPreg.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            ComboNivPregPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 50;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.ipadx = 20;
    gridBagConstraints.ipady = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
    EditPreg.add(ComboNivPreg, gridBagConstraints);

    Menu.addTab("Pregunta", EditPreg);

    Fondo.add(Menu, "card2");

    getContentPane().add(Fondo, java.awt.BorderLayout.CENTER);

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void BarraCorrediza() {
        JScrollPane scrollPane = new JScrollPane(Fondo);
        scrollPane.setBounds(0, 0, 700, 840);
        scrollPane.setViewportView(Fondo);
        this.add(scrollPane);

    }

    public void FotoDefault() {
        Metodos met = new Metodos();
        if (met.EncontrarFoto("Usuario.txt", usuario).equals("$")) {
            File file = new File("src\\Imagenes\\Perfil Azul.png");
            Image foto = getToolkit().getImage(String.valueOf(file));
            File file2 = new File("src\\Imagenes\\Perfil Blanco.png");
            Image foto2 = getToolkit().getImage(String.valueOf(file2));
            Foto1.setIcon(new ImageIcon(foto));
            Foto2.setIcon(new ImageIcon(foto2));
        } else {
            String fo = met.EncontrarFoto("Usuario.txt", usuario);
            File file = new File(fo);
            Image foto = getToolkit().getImage(String.valueOf(file));
            foto = foto.getScaledInstance(Foto1.getWidth(), Foto1.getHeight(), Image.SCALE_DEFAULT);
            Foto1.setIcon(new ImageIcon(foto));
            Foto2.setIcon(new ImageIcon(foto));
        }
    }

    private void BottonGenrExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonGenrExamActionPerformed
        String item;
        Separador.setVisible(false);
        NivInfo.setVisible(false);
        temas.setVisible(false);
        ndif.setVisible(false);
        InfoTem.setVisible(false);
        generarExamen.setVisible(false);
        asigna.removeAllItems();
        asigna.addItem("...");
        seme.setSelectedIndex(0);
        for (Asignatura a : profesor.getAsignaturas()) {
            item = a.getNombre();
            asigna.addItem(item);
        }
        nombre.setText(nombre_profesor);
        Metodos met = new Metodos();
        met.ReincioComboBox(seme);
        met.ReincioJTextField(evaluacion, preg);
        fecha.setCalendar(null);
        AvisoNumeros.setVisible(false);
        SubMenu.setSelectedIndex(0);
        Menu.setSelectedComponent(Generar);
    }//GEN-LAST:event_BottonGenrExamActionPerformed

    private void BottonVerInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonVerInfoActionPerformed
        Metodos met = new Metodos();

        met.ReincioComboBox(Asig2, Asig3, tema, nivel);
        SubMenu.setSelectedIndex(2);
        if (Menu.getSelectedComponent() != Ver) {
            try {
                modelo = (DefaultTableModel) TablaPreg.getModel();
                modelo.setColumnCount(0);
                modelo.setRowCount(0);
                sw1 = true;
                sw2 = true;
                sw3 = true;
                int h = 0;
                Asig2.removeAllItems();
                Asig3.removeAllItems();
                Asig2.addItem("...");
                Asig3.addItem("...");
                h = met.Generador_de_Combobox("Profesor/" + usuario + "/Asignatura.txt", Asig2, h);
                met.Generador_de_Combobox("Profesor/" + usuario + "/Asignatura.txt", Asig3, h);
                Menu.setSelectedComponent(Ver);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_BottonVerInfoActionPerformed

    private void BottonEditInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonEditInfoActionPerformed
        SubMenu.setSelectedIndex(1);
        Menu.setSelectedComponent(Home);
    }//GEN-LAST:event_BottonEditInfoActionPerformed

    private void BottonPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonPerfilActionPerformed
        Menu.setSelectedComponent(Perfil);
        SubMenu.setSelectedIndex(0);
    }//GEN-LAST:event_BottonPerfilActionPerformed

    private void BottonHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonHomeActionPerformed
        SubMenu.setSelectedIndex(0);
        Menu.setSelectedComponent(Home);
    }//GEN-LAST:event_BottonHomeActionPerformed

    private void ButtonAddPregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddPregActionPerformed
        if (seme.getSelectedIndex() != 0 && asigna.getSelectedIndex() != 0) {
            String tem;
            titulo = evaluacion.getText();
            nom = "Profesor: " + nombre_profesor;
            String s = (String) seme.getSelectedItem();
            if (s.equals("Primero")) {
                sem = "10";
            } else {
                if (s.equals("Segundo")) {
                    sem = "30";
                }
            }
            String as = (String) asigna.getSelectedItem();;
            mat = "Asignatura De " + asigna.getSelectedItem();
            ev = "" + evaluacion.getText();
            DateFormat FormaFecha = new SimpleDateFormat("dd-MM-yyyy");
            fec = "" + FormaFecha.format(fecha.getDate());
            num = Integer.parseInt(preg.getText());
            Asignatura asig = null;
            for (Asignatura a : profesor.getAsignaturas()) {
                if (a.getNombre().equals(as)) {
                    temas.removeAllItems();
                    temas.addItem("...");
                    for (Tema t : a.getTemas()) {
                        tem = t.getNombre();
                        temas.addItem(tem);
                    }
                }
            }
            ndif.setSelectedIndex(0);
            jud = 1;
            Separador.setVisible(true);
            NivInfo.setVisible(true);
            temas.setVisible(true);
            ndif.setVisible(true);
            InfoTem.setVisible(true);
            generarExamen.setVisible(true);
            evaluacion.setEditable(false);
            seme.setEnabled(false);
            asigna.setEnabled(false);
            fecha.setEnabled(false);
            preg.setEditable(false);
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonAddPregActionPerformed

    private void ButtonMostrarCENTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMostrarCENTActionPerformed
        String asig = (String) Asig2.getSelectedItem();
        if (!asig.equals("...")) {
            this.MostrarTem(asig, profesor);
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado niguna asignatura", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonMostrarCENTActionPerformed

    private void ButtonMostrarIZQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMostrarIZQActionPerformed
        MostrarAsig(profesor);
    }//GEN-LAST:event_ButtonMostrarIZQActionPerformed


    private void ButtonAgregarPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAgregarPreguntaActionPerformed
        String Asignatura2 = (String) ComboAsignaturaS.getSelectedItem();
        String tema = (String) ComboBoxTemas.getSelectedItem();
        Metodos e = new Metodos();
        String InfoPregunta = "";
        int jor = 0;
        InfoPregunta = Preguntas.getText();
        String opcNiv = (String) ComboNivel.getSelectedItem();
        if (opcNiv.equals("Facil")) {
            jor = 1;
        } else {
            if (opcNiv.equals("Medio")) {
                jor = 2;
            } else {
                if (opcNiv.equals("Dificil")) {
                    jor = 3;
                }
            }
        }
        String total = Integer.toString(jor) + ";" + InfoPregunta + ";" + "Disponible;--------;";
        String temp;
        Asignatura a = getAsignatura(Asignatura2);
        Tema t = getTema(tema, a);
        String x = "Profesor/" + usuario + "/" + Asignatura2 + "/" + tema + "/Preguntas_" + jor + ".txt";

        if (Asignatura2.equals("...")) {
            JOptionPane.showMessageDialog(null, "No ha Selccionado ninguna Asignatura.");
        } else {
            if (tema.equals("...")) {
                JOptionPane.showMessageDialog(null, "No ha Selccionado ningun Tema.");
            } else {
                if (opcNiv.equals("...")) {
                    JOptionPane.showMessageDialog(null, "No ha Selccionado ninguna Dificultad.");
                } else {
                    if (InfoPregunta.equals("")) {
                        JOptionPane.showMessageDialog(null, "No ha escrito ninguna pregunta.");
                    } else {
                        try {
                            temp = e.concatenar(x);
                            e.guardar(temp, x, total);
                            JOptionPane.showMessageDialog(null, "Pregunta añadida exitosamente.");
                            Menu.setSelectedComponent(Home);
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_ButtonAgregarPreguntaActionPerformed

    private void ButtonAgregarTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAgregarTemaActionPerformed
        String tema = NombreDelTema.getText();
        String r = (String) ComboAsignatura.getSelectedItem();
        if (!tema.equals("")) {
            if (!r.equals("...")) {
                boolean verifexis = profesor.VerificarTema(tema, r, DescripcionTema.getText());
                if (verifexis == false) {

                    Metodos met = new Metodos();
                    String x = "Profesor/" + usuario + "/" + r + "/Temas.txt";
                    String temp;
                    try {
                        temp = met.concatenar(x);
                        met.guardar(temp, x, tema + ";" + DescripcionTema.getText() + ";");
                        File carpeta = new File("Profesor/" + usuario + "/" + r + "/" + tema);
                        carpeta.mkdirs();
                        File fl = new File("Profesor/" + usuario + "/" + r + "/" + tema + "/Preguntas_1.txt");
                        fl.createNewFile();
                        File f2 = new File("Profesor/" + usuario + "/" + r + "/" + tema + "/Preguntas_2.txt");
                        f2.createNewFile();
                        File f3 = new File("Profesor/" + usuario + "/" + r + "/" + tema + "/Preguntas_3.txt");
                        f3.createNewFile();

                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    profesor.AddTema(tema, r, DescripcionTema.getText());
                    JOptionPane.showMessageDialog(null, "Tema añadido exitosamente.");
                    Menu.setSelectedComponent(Home);
                }
            } else {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna Asignatura.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No ha escrito el nombre del Tema.");
        }
    }//GEN-LAST:event_ButtonAgregarTemaActionPerformed

    private void AgregarDescripcionTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarDescripcionTemaActionPerformed
        if (this.AgregarDescripcionTema.isSelected() == true) {
            this.DescripcionTema.setEditable(true);
        } else {
            this.DescripcionTema.setEditable(false);
        }
    }//GEN-LAST:event_AgregarDescripcionTemaActionPerformed

    private void addAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAsigActionPerformed
        String Asigna = NombreDelaAsignatura.getText();
        String codigo = codMat.getText();
        boolean verifexis = profesor.VerificarAsignatura(Asigna, codigo);
        if (verifexis == false) {
            if (!Asigna.equals("") && !codigo.equals("")) {
                try {
                    Metodos met = new Metodos();
                    String x = "Profesor/" + usuario + "/Asignatura.txt";
                    String temp;

                    temp = met.concatenar(x);
                    met.guardar(temp, x, Asigna + ";" + codigo + ";" + Descripcion.getText() + ";");
                    File carpeta = new File("Profesor/" + usuario + "/" + Asigna);
                    carpeta.mkdirs();
                    File fichero = new File("Profesor/" + usuario + "/" + Asigna + "/Temas.txt");
                    fichero.createNewFile();
                    Asignatura a = new Asignatura(Asigna, this.Descripcion.getText(), codigo);
                    profesor.AddAsignatura(a);
                    JOptionPane.showMessageDialog(null, "Asignatura creada satisfactoriamente.");
                    Menu.setSelectedComponent(Home);
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Asignatura y Codigo son campos obligatorios.");
            }
        }
    }//GEN-LAST:event_addAsigActionPerformed

    public void recursiveDelete(File file) {
        //to end the recursive loop
        if (!file.exists()) {
            return;
        }

        //if directory, go inside and call recursively
        if (file.isDirectory()) {
            for (File f : file.listFiles()) {
                //call recursively
                recursiveDelete(f);
                f.delete();
            }
        }
        file.delete();
    }

    private void move(File toDir, File currDir) {
        for (File file : currDir.listFiles()) {
            if (file.isDirectory()) {
                File Direc = new File(toDir, file.getName());
                Direc.mkdirs();
                move(Direc, file);
            } else {
                file.renameTo(new File(toDir, file.getName()));
            }
        }
    }

    private void AgregarDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarDescripcionActionPerformed
        if (this.AgregarDescripcion.isSelected() == true) {
            this.Descripcion.setEditable(true);
        } else {
            this.Descripcion.setEditable(false);
        }
    }//GEN-LAST:event_AgregarDescripcionActionPerformed

    private void generarExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarExamenActionPerformed

        if (jud == num) {
            Pregunta preguntatemp = Aleatorio();
            if (preguntatemp != null) {
                person.add(preguntatemp);
                XWPFDocument documento = new XWPFDocument();

                //Declaramos el titulo y le asignamos algunas propiedades
                XWPFParagraph titulo_doc = documento.createParagraph();
                titulo_doc.setAlignment(ParagraphAlignment.CENTER);
                titulo_doc.setVerticalAlignment(TextAlignment.TOP);

                //Declaramos el parrafo y le asignamos algunas propiedades
                XWPFParagraph parrafo = documento.createParagraph();
                parrafo.setAlignment(ParagraphAlignment.BOTH);
                XWPFRun r1 = titulo_doc.createRun();
                r1.setBold(true);
                r1.setText("Universidad del Norte");
                r1.setFontFamily("Times New Roman");
                r1.setFontSize(14);
                r1.setTextPosition(11);
                r1.addBreak();

                XWPFRun r2 = titulo_doc.createRun();
                r2.setBold(true);
                r2.setText(mat);
                r2.setFontFamily("Times New Roman");
                r2.setFontSize(14);
                r2.setTextPosition(11);
                r2.addBreak();

                XWPFRun r3 = titulo_doc.createRun();
                r3.setBold(true);
                r3.setText(titulo);
                r3.setFontFamily("Times New Roman");
                r3.setFontSize(14);
                r3.setTextPosition(11);
                r3.addBreak();

                XWPFRun r5 = titulo_doc.createRun();
                r5.setBold(true);
                r5.setText(fec);
                r5.setFontFamily("Times New Roman");
                r5.setFontSize(14);
                r5.setTextPosition(11);
                r5.addBreak();

                XWPFRun r6 = parrafo.createRun();
                r6.setText(nom);
                r6.setFontSize(12);
                r6.addCarriageReturn();
                r6.addBreak();
                //Para el parrafo
                XWPFRun ri = parrafo.createRun();
                ri.setText("Nombre: ________________________________________Código: ________________");
                ri.setFontSize(12);
                ri.addCarriageReturn();
                ri.addBreak();
                int i = 0;
                while (i < person.size()) {
                    String preg = "" + person.get(i).getContenido();
                    XWPFRun r7 = parrafo.createRun();
                    r7.setText((i + 1) + ".  " + preg);
                    r7.setFontSize(12);
                    r7.addCarriageReturn();
                    r7.addBreak();
                    i++;

                }

                JFileChooser f = new JFileChooser();
                f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                f.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
                int opcion = f.showSaveDialog(this);
                File guarda = f.getSelectedFile();
                System.out.println("" + guarda + " Preuba " + guarda.getName().substring(0, 1));
                if (opcion == JFileChooser.APPROVE_OPTION) {
                    System.out.println(guarda.getAbsolutePath());

                    FileOutputStream word = null;
                    try {
                        word = new FileOutputStream(guarda + ".docx");
                        documento.write(word);
                        word.close();
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    JOptionPane.showMessageDialog(null,
                            "El examen se ha generado exitosamente",
                            "Información", JOptionPane.INFORMATION_MESSAGE);
                }
                evaluacion.setEditable(true);
                seme.setEnabled(true);
                asigna.setEnabled(true);
                fecha.setEnabled(true);
                preg.setEditable(true);
                Menu.setSelectedComponent(Home);
            }

        } else {
            Pregunta preguntatemp = Aleatorio();
            if (preguntatemp != null) {
                person.add(preguntatemp);
                jud++;
                temas.setSelectedIndex(0);
                ndif.setSelectedIndex(0);

            } else {

            }
        }


    }//GEN-LAST:event_generarExamenActionPerformed

    private void ButtonMostrarDERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMostrarDERActionPerformed
        // TODO add your handling code here:
        String x = (String) this.Asig3.getSelectedItem();
        String y = (String) this.tema.getSelectedItem();
        String z = (String) this.nivel.getSelectedItem();
        this.MostrarPreg(x, y, z, profesor);
    }//GEN-LAST:event_ButtonMostrarDERActionPerformed

    private void pregKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pregKeyPressed
//        Metodos met = new Metodos();
//        if (met.confNum(this.preg.getText())) {
//            this.AvisoNumeros.setVisible(false);
//        } else {
//            this.AvisoNumeros.setVisible(true);
//        }        // TODO add your handling code here:
    }//GEN-LAST:event_pregKeyPressed

    private void pregKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pregKeyTyped
//        Metodos met = new Metodos();
//        System.out.println("entre "+preg.getText());
//        this.AvisoNumeros.setVisible(false);
//        if (met.confNum(this.preg.getText())) {
//            this.AvisoNumeros.setVisible(false);
//        } else {
//            this.AvisoNumeros.setVisible(true);
//        }        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_pregKeyTyped

    private void pregKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pregKeyReleased
        Metodos met = new Metodos();
        System.out.println("entre " + preg.getText());
        this.AvisoNumeros.setVisible(false);
        if (met.confNum(this.preg.getText())) {
            this.AvisoNumeros.setVisible(false);
        } else {
            this.AvisoNumeros.setVisible(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pregKeyReleased

    private void Asig2PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_Asig2PopupMenuWillBecomeInvisible
        if ("...".equals(Asig2.getSelectedItem())) {
            JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto. bua", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_Asig2PopupMenuWillBecomeInvisible

    private void Asig3PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_Asig3PopupMenuWillBecomeInvisible
        String TempAsigna = (String) Asig3.getSelectedItem();
        if (!TempAsigna.equals("...")) {
            tema.setEnabled(true);
            nivel.setEnabled(true);
            Metodos met = new Metodos();
            this.tema.removeAllItems();
            this.tema.addItem("...");
            int h = 0;
            try {
                h = met.Generador_de_Combobox("Profesor/" + usuario + "/" + TempAsigna + "/Temas.txt", this.tema, h);
                if (h < 1) {
                    JOptionPane.showMessageDialog(null, "LA ASIGNATURA QUE HA SELECCIONADO NO TIENE TEMAS, SE DESEA USAR ESTA ASIGNATURA ES NECESARIO QUE AÑADA TEMAS.");
                    tema.setEnabled(false);
                    nivel.setEnabled(false);
                }
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_Asig3PopupMenuWillBecomeInvisible

    private void temaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_temaPopupMenuWillBecomeInvisible
        String TempTema = (String) tema.getSelectedItem();
        if ("...".equals(TempTema)) {
            JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_temaPopupMenuWillBecomeInvisible

    private void ComboAsignaturaSPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboAsignaturaSPopupMenuWillBecomeInvisible
        String TempAsigna = (String) ComboAsignaturaS.getSelectedItem();
        if (!TempAsigna.equals("...")) {
            ComboBoxTemas.setEnabled(true);
            ComboNivel.setEnabled(true);
            Preguntas.setEnabled(true);
            Metodos met = new Metodos();
            this.ComboBoxTemas.removeAllItems();
            this.ComboBoxTemas.addItem("...");
            int h = 0;
            try {
                h = met.Generador_de_Combobox("Profesor/" + usuario + "/" + TempAsigna + "/Temas.txt", this.ComboBoxTemas, h);
                if (h < 1) {
                    JOptionPane.showMessageDialog(null, "LA ASIGNATURA QUE HA SELECCIONADO NO TIENE TEMAS, SE DESEA USAR ESTA ASIGNATURA ES NECESARIO QUE AÑADA TEMAS.");
                    ComboBoxTemas.setEnabled(false);
                    ComboNivel.setEnabled(false);
                    Preguntas.setEnabled(false);
                }
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ComboAsignaturaSPopupMenuWillBecomeInvisible

    private void BottonTemasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonTemasActionPerformed
        String item = "";
        ComboAsignatura.removeAllItems();
        ComboAsignatura.addItem("...");
        for (Asignatura a : profesor.getAsignaturas()) {
            item = a.getNombre();
            ComboAsignatura.addItem(item);
        }
        Metodos met = new Metodos();
        met.ReincioJTextField(NombreDelTema);
        met.ReincioTextArea(DescripcionTema);
        AgregarDescripcionTema.setSelected(false);
        Menu.setSelectedComponent(Tema);        // TODO add your handling code here:
    }//GEN-LAST:event_BottonTemasActionPerformed

    private void BottonPreguntasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonPreguntasActionPerformed
        int h = 0;
        ComboAsignaturaS.removeAllItems();
        ComboAsignaturaS.addItem("...");
        Metodos met = new Metodos();
        try {
            h = met.Generador_de_Combobox("Profesor/" + usuario + "/Asignatura.txt", ComboAsignaturaS, h);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        met.ReincioComboBox(ComboBoxTemas, ComboNivel);
        met.ReincioTextArea(Preguntas);
        Menu.setSelectedComponent(Pregunta);        // TODO add your handling code here:
    }//GEN-LAST:event_BottonPreguntasActionPerformed

    private void BottonAsignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonAsignaturaActionPerformed
        Metodos met = new Metodos();
        met.ReincioJTextField(NombreDelaAsignatura, codMat);
        met.ReincioTextArea(Descripcion);
        AgregarDescripcion.setSelected(false);
        Menu.setSelectedComponent(Asignatura);
    }//GEN-LAST:event_BottonAsignaturaActionPerformed

    private void asignaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_asignaActionPerformed

    private void NombreDelTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreDelTemaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreDelTemaActionPerformed

    private void ButtonCambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCambioActionPerformed
        if (this.NuevaContra.getText().equals("") || this.ValNuevaContra.getText().equals("")) {

        } else {
            JOptionPane.showMessageDialog(this, "ERROR", "ALGUNOS DE LOS CAMPOS ESTAN VACIOS", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonCambioActionPerformed

    private void ValNuevaContraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValNuevaContraKeyPressed
        if (this.NuevaContra.getText().equals(this.ValNuevaContra.getText())) {
            this.jLabel27.setVisible(false);
        } else {
            this.jLabel27.setVisible(true);
        }
    }//GEN-LAST:event_ValNuevaContraKeyPressed

    private void ButtonGuardarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGuardarFotoActionPerformed

        File file = new File("src\\Imagenes\\Perfil Azul.png");
        Image foto = getToolkit().getImage(String.valueOf(file));
        File file2 = new File("src\\Imagenes\\Perfil Blanco.png");
        Image foto2 = getToolkit().getImage(String.valueOf(file2));
        Foto1.setIcon(new ImageIcon(foto));
        Foto2.setIcon(new ImageIcon(foto2));
        try {
            CambiarImagen(Usuario1.getText(), Nombre1.getText(), "$");
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ButtonGuardarFotoActionPerformed

    private void BottonEditFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonEditFotoActionPerformed
        JFileChooser archivo ;
        archivo = new JFileChooser();
        archivo.setFileSelectionMode(0);
        FileNameExtensionFilter filtroImagen = new FileNameExtensionFilter("JPG,PNG", "jpg", "png");
        archivo.setFileFilter(filtroImagen);
        archivo.setDialogTitle("Buscar Imagen");
        if (!archivo.equals(null)) {
            archivo.addChoosableFileFilter(null);
            File ruta = new File("C:\\Users\\elspo\\Downloads");
            archivo.setCurrentDirectory(ruta);
            int ventana = archivo.showOpenDialog(null);
            if (ventana == JFileChooser.APPROVE_OPTION) {
                File file = archivo.getSelectedFile();
                Image foto = getToolkit().getImage(String.valueOf(file));
                foto = foto.getScaledInstance(Foto1.getWidth(), Foto1.getHeight(), Image.SCALE_DEFAULT);
                Foto1.setIcon(new ImageIcon(foto));
                Foto2.setIcon(new ImageIcon(foto));
                try {
                    CambiarImagen(Usuario1.getText(), Nombre1.getText(), file.getAbsolutePath());
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_BottonEditFotoActionPerformed

    private void BottonCamContraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonCamContraActionPerformed
        this.jLabel27.setVisible(false);
    }//GEN-LAST:event_BottonCamContraActionPerformed

    private void ButtonGenerarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGenerarInformeActionPerformed

        HSSFWorkbook informe = new HSSFWorkbook();
        for (Asignatura a : profesor.getAsignaturas()) {
            // Se crea una hoja dentro del libro
            HSSFSheet hoja = informe.createSheet(a.getNombre());
            // Se crea una fila dentro de la hoja
            HSSFRow fila = hoja.createRow(0);
            String[] titulos = {"Tema", "Pregunta", "Nivel", "Estado", "Fecha ultimo uso"};
            CellStyle style = informe.createCellStyle();
            style.setFillForegroundColor(IndexedColors.AQUA.getIndex()); // Indicamos que tendra un fondo azul aqua
            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);
            for (int i = 0; i < titulos.length; i++) {
                Cell celda = fila.createCell(i); // Creamos una celda en esa fila, en la posicion indicada por el contador del ciclo
                // Indicamos el estilo que deseamos 
                celda.setCellStyle(style);
                celda.setCellValue(titulos[i]);
            }
            int j = 1;
            String[] linea = new String[6];
            for (Tema t : a.getTemas()) {
                linea[0] = t.getNombre();
                for (Pregunta p : t.getPreguntas(1)) {
                    linea[1] = p.getContenido();
                    linea[2] = Integer.toString(p.getNivel());
                    linea[3] = p.getEstado();
                    linea[4] = p.getFecha();
                    fila = hoja.createRow(j);
                    for (int k = 0; k < linea.length; k++) {
                        Cell celda = fila.createCell(k);
                        celda.setCellValue(linea[k]);
                    }
                    j++;
                }
                for (Pregunta p : t.getPreguntas(2)) {
                    linea[1] = p.getContenido();
                    linea[2] = Integer.toString(p.getNivel());
                    linea[3] = p.getEstado();
                    linea[4] = p.getFecha();
                    fila = hoja.createRow(j);
                    for (int k = 0; k < linea.length; k++) {
                        Cell celda = fila.createCell(k);
                        celda.setCellValue(linea[k]);
                    }
                    j++;
                }
                for (Pregunta p : t.getPreguntas(3)) {
                    linea[1] = p.getContenido();
                    linea[2] = Integer.toString(p.getNivel());
                    linea[3] = p.getEstado();
                    linea[4] = p.getFecha();
                    fila = hoja.createRow(j);
                    for (int k = 0; k < linea.length; k++) {
                        Cell celda = fila.createCell(k);
                        celda.setCellValue(linea[k]);
                    }
                    j++;
                }
            }
        }

        JFileChooser f = new JFileChooser();
        if (!f.equals(null)) {
            f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            f.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            int opcion = f.showSaveDialog(this);
            File guarda = f.getSelectedFile();
            if (opcion == JFileChooser.APPROVE_OPTION) {
                FileOutputStream excel = null;
                try {
                    excel = new FileOutputStream(guarda + ".xls");
                    informe.write(excel);
                    excel.close();
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                JOptionPane.showMessageDialog(null,
                        "El informe se ha generado exitosamente",
                        "Información", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_ButtonGenerarInformeActionPerformed

    private void PanelMenuComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_PanelMenuComponentShown

    }//GEN-LAST:event_PanelMenuComponentShown

    private void PanelMenuComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_PanelMenuComponentResized

    }//GEN-LAST:event_PanelMenuComponentResized

    private void BottonEditAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonEditAsigActionPerformed
        NomEditAsig.setEditable(true);
        CodEditAsig.setEditable(true);
        DesEditAsig.setEditable(true);
        GuaEditAsig.setEnabled(true);
    }//GEN-LAST:event_BottonEditAsigActionPerformed

    private void EditarAsignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarAsignaturaActionPerformed
        Metodos met = new Metodos();
        if (Menu.getSelectedComponent() != EditAsig) {
            modelo = (DefaultTableModel) TablaAsig.getModel();
            modelo.setColumnCount(0);
            modelo.setRowCount(0);
            sw1 = true;
            sw2 = true;
            sw3 = true;
            Menu.setSelectedComponent(EditAsig);
        }
        NomEditAsig.setText("");
        CodEditAsig.setText("");
        DesEditAsig.setText("");
        NomEditAsig.setEditable(false);
        CodEditAsig.setEditable(false);
        DesEditAsig.setEditable(false);
        GuaEditAsig.setEnabled(false);
        MostrarAsig(profesor);
    }//GEN-LAST:event_EditarAsignaturaActionPerformed

    private void EditarTemasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarTemasActionPerformed
        Metodos met = new Metodos();
        if (Menu.getSelectedComponent() != EditTem) {
            modelo = (DefaultTableModel) TablaTem.getModel();
            modelo.setColumnCount(0);
            modelo.setRowCount(0);
            sw1 = true;
            sw2 = true;
            sw3 = true;
            int h = 0;
            ComboAsigEdit.removeAllItems();
            ComboAsigEdit.addItem("...");
            try {
                h = met.Generador_de_Combobox("Profesor/" + usuario + "/Asignatura.txt", ComboAsigEdit, h);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            NomEditTem.setEditable(false);
            DesEditTem.setEditable(false);
            GuardarTem.setEnabled(false);
            Menu.setSelectedComponent(EditTem);
        }
    }//GEN-LAST:event_EditarTemasActionPerformed

    private void EditarPreguntasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarPreguntasActionPerformed
        Metodos met = new Metodos();
        if (Menu.getSelectedComponent() != EditPreg) {
            modelo = (DefaultTableModel) TablaPregEdit.getModel();
            modelo.setColumnCount(0);
            modelo.setRowCount(0);
            sw1 = true;
            sw2 = true;
            sw3 = true;
            ComboAsigPreg.removeAllItems();
            ComboAsigPreg.addItem("...");
            ComboTemPreg.removeAllItems();
            ComboTemPreg.addItem("...");
            int h = 0;
            try {
                h = met.Generador_de_Combobox("Profesor/" + usuario + "/Asignatura.txt", ComboAsigPreg, h);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            Menu.setSelectedComponent(EditPreg);
        }
    }//GEN-LAST:event_EditarPreguntasActionPerformed

    private void ComboAsigPregPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboAsigPregPopupMenuWillBecomeInvisible
        String TempAsigna = (String) ComboAsigPreg.getSelectedItem();
        if (!TempAsigna.equals("...")) {
            ComboTemPreg.setEnabled(true);
            ComboNivPreg.setEnabled(true);
            Metodos met = new Metodos();
            ComboTemPreg.removeAllItems();
            ComboTemPreg.addItem("...");
            int h = 0;
            try {
                h = met.Generador_de_Combobox("Profesor/" + usuario + "/" + TempAsigna + "/Temas.txt", ComboTemPreg, h);
                if (h < 1) {
                    JOptionPane.showMessageDialog(null, "La Asignatura que ha seleccionado no tiene temas.");
                    ComboTemPreg.setEnabled(false);
                    ComboNivPreg.setEnabled(false);
                }
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }        // TODO        // TODO add your handling code here:
    }//GEN-LAST:event_ComboAsigPregPopupMenuWillBecomeInvisible

    private void TablaAsigKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaAsigKeyReleased
        String[] h = new String[3];

        for (int i = 0; i < 3; i++) {
            if (TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), i) != null) {
                h[i] = TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }
        NomEditAsig.setText(h[0]);
        CodEditAsig.setText(h[1]);
        DesEditAsig.setText(h[2]);        // TODO add your handling code here:
    }//GEN-LAST:event_TablaAsigKeyReleased

    private void TablaAsigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaAsigMouseClicked

    }//GEN-LAST:event_TablaAsigMouseClicked

    private void GuaEditAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuaEditAsigActionPerformed
        if (!NomEditAsig.equals("") && !CodEditAsig.equals("") && !DesEditAsig.equals("")) {
            Metodos met = new Metodos();
            int i = 0;
            String Total = "";
            for (Asignatura asignatura : profesor.getAsignaturas()) {
                if (asignatura.getNombre().equals(TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), 0).toString())) {
                    File Viejo = new File("Profesor/" + usuario + "/" + asignatura.getNombre());
                    profesor.getAsignaturas().get(i).setNombre(NomEditAsig.getText());
                    profesor.getAsignaturas().get(i).setCodigo(CodEditAsig.getText());
                    profesor.getAsignaturas().get(i).setDescripcion(DesEditAsig.getText());
                    Total = Total + NomEditAsig.getText() + ";" + CodEditAsig.getText() + ";" + DesEditAsig.getText() + ";" + "\r\n";
                    File Nuevo = new File("Profesor/" + usuario + "/" + NomEditAsig.getText());
                    Nuevo.mkdirs();
                    move(Nuevo, Viejo);
                    recursiveDelete(Viejo);
                } else {
                    Total = Total + asignatura.getNombre() + ";" + asignatura.getCodigo() + ";" + asignatura.getDescripcion() + ";" + "\r\n";
                }

                i++;
            }
            File file = new File("Profesor/" + usuario + "/Asignatura.txt");
            FileWriter fw;
            try {
                fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(Total);
                bw.close();
                fw.close();
                MostrarAsig(profesor);
                NomEditAsig.setText("");
                CodEditAsig.setText("");
                DesEditAsig.setText("");
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_GuaEditAsigActionPerformed

    private void ElimEditAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElimEditAsigActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Desea eliminar la Asignatura Seleccionada?", "Advertencia", JOptionPane.OK_CANCEL_OPTION, JOptionPane.CANCEL_OPTION);
        if (x == 0) {
            NomEditAsig.setText("");
            CodEditAsig.setText("");
            DesEditAsig.setText("");
            Metodos met = new Metodos();
            String nombreasig = "";
            String Total = "";
            int cont = 0;
            Asignatura asign = null;
            for (Asignatura asignatura : profesor.getAsignaturas()) {
                if (asignatura.getNombre().equals(TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), 0).toString())) {
                    asign = asignatura;
                    nombreasig = asignatura.getNombre();
                } else {
                    Total = Total + asignatura.getNombre() + ";" + asignatura.getCodigo() + ";" + asignatura.getDescripcion() + ";" + "\r\n";
                }
            }

            profesor.getAsignaturas().remove(asign);
            asign = null;
            try {

                File file = new File("Profesor/" + usuario + "/Asignatura.txt");
                FileWriter fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(Total);
                bw.close();
                fw.close();
                MostrarAsig(profesor);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            File fle = new File("Profesor" + File.separator + usuario + File.separator + nombreasig);
            System.out.println(fle);
            recursiveDelete(fle);
        }

    }//GEN-LAST:event_ElimEditAsigActionPerformed


    private void ButtomEditTemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtomEditTemActionPerformed
        NomEditTem.setEditable(true);
        DesEditTem.setEditable(true);
        GuardarTem.setEnabled(true);
    }//GEN-LAST:event_ButtomEditTemActionPerformed

    private void ElimEditTemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElimEditTemActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Desea eliminar el Tema seleccionado?", "Advertencia", JOptionPane.OK_CANCEL_OPTION, JOptionPane.CANCEL_OPTION);
        if (x == 0) {
            Metodos met = new Metodos();
            String nombretema = "";
            String Total = "";
            int cont = 0, i = 0;
            Tema tem = null;
            for (Asignatura asignatura : profesor.getAsignaturas()) {
                for (Tema tema : asignatura.getTemas()) {
                    if (asignatura.getNombre().equals(ComboAsigEdit.getSelectedItem())) {
                        if (tema.getNombre().equals(TablaTem.getModel().getValueAt(TablaTem.getSelectedRow(), 0).toString())) {
                            tem = tema;
                            nombretema = tema.getNombre();
                            cont = i;
                        } else {
                            Total = Total + tema.getNombre() + ";" + tema.getDescripcion() + ";" + "\r\n";
                        }
                    }

                }
                i++;
            }

            profesor.getAsignaturas().get(cont).getTemas().remove(tem);
            tem = null;
            try {

                File file = new File("Profesor/" + usuario + "/" + ComboAsigEdit.getSelectedItem() + "/Temas.txt");
                FileWriter fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(Total);
                bw.close();
                fw.close();
                MostrarTem((String) ComboAsigEdit.getSelectedItem(), profesor);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            File fle = new File("Profesor" + File.separator + usuario + File.separator + ComboAsigEdit.getSelectedItem() + File.separator + nombretema);
            recursiveDelete(fle);
            NomEditTem.setText("");
            DesEditTem.setText("");
            ComboAsigEdit.setSelectedIndex(0);
        }
    }//GEN-LAST:event_ElimEditTemActionPerformed

    private void GuardarTemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarTemActionPerformed
        if (!NomEditTem.equals("") && !DesEditTem.equals("")) {
            Metodos met = new Metodos();
            String nombretema = "";
            String Total = "";
            int cont = 0, i = 0;
            Tema tem = null;
            for (Asignatura asignatura : profesor.getAsignaturas()) {
                for (Tema tema : asignatura.getTemas()) {
                    if (asignatura.getNombre().equals(ComboAsigEdit.getSelectedItem())) {
                        if (tema.getNombre().equals(TablaTem.getModel().getValueAt(TablaTem.getSelectedRow(), 0).toString())) {
                            File Viejo = new File("Profesor/" + usuario + "/" + asignatura.getNombre() + "/" + tem.getNombre());
                            profesor.getAsignaturas().get(i).getTemas().get(cont).setNombre(NomEditTem.getText());
                            profesor.getAsignaturas().get(i).getTemas().get(cont).setDescripcion(DesEditTem.getText());
                            Total = Total + NomEditTem.getText() + ";" + DesEditTem.getText() + ";" + "\r\n";
                            File Nuevo = new File("Profesor/" + usuario + "/" + asignatura.getNombre() + "/" + NomEditTem.getText());;
                            Nuevo.mkdirs();
                            move(Nuevo, Viejo);
                            recursiveDelete(Viejo);
                            cont = i;
                        } else {
                            Total = Total + tema.getNombre() + ";" + tema.getDescripcion() + ";" + "\r\n";
                        }
                    }

                }
                i++;
            }
            File file = new File("Profesor/" + usuario + "/" + ComboAsigEdit.getSelectedItem() + "/Temas.txt");
            FileWriter fw;
            try {
                fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(Total);
                bw.close();
                fw.close();
                MostrarTem((String) ComboAsigEdit.getSelectedItem(), profesor);
                NomEditTem.setText("");
                DesEditTem.setText("");
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_GuardarTemActionPerformed

    private void addAsig7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAsig7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addAsig7ActionPerformed

    private void addAsig8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAsig8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addAsig8ActionPerformed

    private void addAsig9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAsig9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addAsig9ActionPerformed

    private void ComboAsigEditPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboAsigEditPopupMenuWillBecomeInvisible
        String asig = (String) ComboAsigEdit.getSelectedItem();
        if (!asig.equals("...")) {
            this.MostrarTem(asig, profesor);
            MostrarTem(asig, profesor);
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado niguna asignatura", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_ComboAsigEditPopupMenuWillBecomeInvisible

    private void TablaAsigMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaAsigMouseReleased
        String[] h = new String[3];

        for (int i = 0; i < 3; i++) {
            if (TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), i) != null) {
                h[i] = TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }
        NomEditAsig.setText(h[0]);
        CodEditAsig.setText(h[1]);
        DesEditAsig.setText(h[2]);             // TODO add your handling code here:
    }//GEN-LAST:event_TablaAsigMouseReleased

    private void TablaTemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaTemKeyReleased
        String[] h = new String[2];

        for (int i = 0; i < 2; i++) {
            if (TablaTem.getModel().getValueAt(TablaTem.getSelectedRow(), i) != null) {
                h[i] = TablaTem.getModel().getValueAt(TablaTem.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }
        NomEditTem.setText(h[0]);
        DesEditTem.setText(h[1]);
    }//GEN-LAST:event_TablaTemKeyReleased

    private void TablaTemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaTemMouseReleased
        String[] h = new String[2];

        for (int i = 0; i < 2; i++) {
            if (TablaTem.getModel().getValueAt(TablaTem.getSelectedRow(), i) != null) {
                h[i] = TablaTem.getModel().getValueAt(TablaTem.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }
        NomEditTem.setText(h[0]);
        DesEditTem.setText(h[1]);        // TODO add your handling code here:
    }//GEN-LAST:event_TablaTemMouseReleased

    private void ComboTemPregPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboTemPregPopupMenuWillBecomeInvisible
        String TempTema = (String) ComboTemPreg.getSelectedItem();
        if ("...".equals(TempTema)) {
            JOptionPane.showMessageDialog(this, "Seleccione una opcion que no sea la por defecto.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_ComboTemPregPopupMenuWillBecomeInvisible

    private void ComboNivPregPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboNivPregPopupMenuWillBecomeInvisible
        String asig = (String) ComboAsigPreg.getSelectedItem();
        String tem = (String) ComboTemPreg.getSelectedItem();
        String nivel = (String) ComboNivPreg.getSelectedItem();
        if (!asig.equals("...") & !tem.equals("")) {
            MostrarPreg(asig, tem, nivel, profesor);
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado niguna asignatura", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ComboNivPregPopupMenuWillBecomeInvisible

    private void TablaPregEditKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaPregEditKeyReleased
        String[] h = new String[3];

        for (int i = 0; i < 4; i++) {
            if (TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), i) != null) {
                h[i] = TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }
        ComboNivelA.setSelectedIndex(Integer.parseInt(h[0]));
        EstadPreg.setText(h[2]);
        String dateValue = h[3];
        System.out.println(h[3]);
        Date date = null;
        try {
            date = new SimpleDateFormat("dd-MM-yyyy").parse(dateValue);
        } catch (ParseException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        FechaPreg.setDate(date);
        InfoPreg.setText(h[1]);   // TODO add your handling code here:
    }//GEN-LAST:event_TablaPregEditKeyReleased

    private void TablaPregEditMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPregEditMouseReleased
        String[] h = new String[4];

        for (int i = 0; i < 4; i++) {
            if (TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), i) != null) {
                h[i] = TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }
        ComboNivelA.setSelectedIndex(Integer.parseInt(h[0]));
        EstadPreg.setText(h[2]);
        String[] dateValue = h[3].split("/");
        Date date = null;
        try {
            date = new SimpleDateFormat("dd-MM-yyyy").parse(dateValue[2] + "-" + dateValue[1] + "-" + dateValue[0]);
        } catch (ParseException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        FechaPreg.setDate(date);
        InfoPreg.setText(h[1]);
    }//GEN-LAST:event_TablaPregEditMouseReleased

    ///METODOS!!
    public void CambiarImagen(String Usuario, String Nombre, String Imagen) throws IOException {
        Metodos met = new Metodos();
        ArrayList<String[]> registros = met.LeerArchivoDaniel("Usuario.txt");
        String nombre;
        String Total = "";
        for (int i = 0; i < registros.size(); i++) {
            nombre = registros.get(i)[2];
            if (nombre.equals(Usuario)) {
                if ((registros.get(i)[0]).equals(Nombre)) {
                    Total = Total + registros.get(i)[0] + "," + registros.get(i)[1] + "," + registros.get(i)[2] + "," + registros.get(i)[3] + "," + Imagen + "\r\n";
                }
            } else {
                Total = Total + registros.get(i)[0] + "," + registros.get(i)[1] + "," + registros.get(i)[2] + "," + registros.get(i)[3] + "," + registros.get(i)[4] + "\r\n";
            }
        }
        File file = new File("Usuario.txt");
        FileWriter fw = new FileWriter(file);
        BufferedWriter bw = new BufferedWriter(fw);
        bw.write(Total);
        bw.close();
        fw.close();
    }

    private Asignatura getAsignatura(String nombre) {
        Asignatura asignatura = null;
        for (Asignatura a : profesor.getAsignaturas()) {
            if (a.getNombre().equals(nombre)) {
                asignatura = a;
            }
        }
        return asignatura;
    }

    private Tema getTema(String nombre, Asignatura asignatura) {
        Tema tema = null;
        for (Tema t : asignatura.getTemas()) {
            if (t.getNombre().equals(nombre)) {
                tema = t;
            }
        }
        return tema;
    }

    private void MostrarAsig(Profesor p) {   //Este metodo muestra todas las asignaturas que tiene el profesor
        modelo.setRowCount(0);              //que esta en sesion actualmente
        if (sw1 == true) {
            modelo.setColumnCount(0);
            modelo.addColumn("Asignatura");
            modelo.addColumn("Codigo");
            modelo.addColumn("Descripcion");
            sw1 = false;
        }
        String nom = "";
        String des = "";
        String cod = "";
        for (Asignatura a : p.getAsignaturas()) {
            nom = a.getNombre();
            des = a.getDescripcion();
            cod = a.getCodigo();
            modelo.addRow(new Object[]{nom, cod, des});
        }
        sw2 = true;
        sw3 = true;
    }

    private void MostrarTem(String nombre, Profesor p) {   //Este metodo muestra los temas de una asignatura en especifico
        modelo.setRowCount(0);                             //perteneciente al profesor que esta en sesion
        Asignatura asig = null;
        for (Asignatura a : p.getAsignaturas()) {
            if (a.getNombre().equals(nombre)) {
                asig = a;
            }
        }
        if (sw2 == true) {
            modelo.setColumnCount(0);
            modelo.addColumn("Tema");
            modelo.addColumn("Descripcion");
            sw2 = false;
        }
        String nom = "";
        String des = "";
        for (Tema t : asig.getTemas()) {
            nom = t.getNombre();
            des = t.getDescripcion();
            if (!nom.equals("") && !des.equals("")) {
                modelo.addRow(new Object[]{nom, des});
            }
        }
        sw1 = true;
        sw3 = true;
    }

    private void MostrarPreg(String x, String y, String z, Profesor p) {   //Esto muestra las preguntas de cierto nivel
        modelo.setRowCount(0);                                             //pertenecientes a un tema en especifico, que
        Asignatura asig = null;                                            //pertenece a una asignatura en especifico del                      
        Tema tem = null;                                                   //profesor que esta en sesion
        int lvl = Integer.parseInt(z);
        ArrayList<Pregunta> temp = new ArrayList();
        for (Asignatura a : p.getAsignaturas()) {
            if (a.getNombre().equals(x)) {
                asig = a;
            }
        }
        for (Tema t : asig.getTemas()) {
            if (t.getNombre().equals(y)) {
                tem = t;
            }
        }
        if (sw3 == true) {
            modelo.setColumnCount(0);
            modelo.addColumn("Nivel");
            modelo.addColumn("Pregunta");
            modelo.addColumn("Estado");
            modelo.addColumn("Ultima vez");
            sw3 = false;
        }
        String niv = "";
        String pre = "";
        String est = "";
        String fec = "";
        temp = tem.getPreguntas(lvl);
        for (Pregunta pr : temp) {
            niv = z;
            pre = pr.getContenido();
            est = pr.getEstado();
            fec = pr.getFecha();
            if (!niv.equals("") && !pre.equals("") && !est.equals("") && !fec.equals("")) {
                modelo.addRow(new Object[]{niv, pre, est, fec});
            }
        }
        sw1 = true;
        sw2 = true;
    }

    private Pregunta Aleatorio() {
        ArrayList<Pregunta> preguntas = new ArrayList();
        Profesor pro = new Profesor();
        for (Asignatura asig : pro.getAsignaturas()) {
            if (asig.getNombre().equals(asigna.getSelectedItem())) {
                for (Tema tema : asig.getTemas()) {
                    if (tema.getNombre().equals(temas.getSelectedItem())) {
                        return Aleatorio2(tema.getPreguntas(Integer.parseInt((String) ndif.getSelectedItem())));
                    }
                }
            }
        }
        return null;

    }

    private Pregunta Aleatorio2(ArrayList<Pregunta> p) {
        int tope = p.size();
        if (tope != 0) {
            ArrayList<Pregunta> pregDispo = new ArrayList();
            for (Pregunta pregunta : p) {
                if (pregunta.getEstado().equals("Disponible")) {
                    pregDispo.add(pregunta);
                }
            }
            System.out.println("" + tope);
            int sw = 2;
            if (!pregDispo.isEmpty()) {

                while (sw == 2) {
                    int aleatorio = ThreadLocalRandom.current().nextInt(1, tope + 1);
                    Pregunta po = p.get(aleatorio - 1);
                    if (po.getEstado().equals("Disponible")) {
                        p.get(aleatorio - 1).setEstado("No Disponible");
                        DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                        Date date = new Date();
                        p.get(aleatorio - 1).setFecha(dateFormat.format(date));

                        try {
                            SobreEscribir(p);
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }

                        JOptionPane.showMessageDialog(null, "La pregunta ha sido añadida con exito.");
                        return po;
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "El Banco de preguntas seleccionado todas las preguntas ya han sido usadas anteriormente.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "El Banco de preguntas seleccionado se encuentra vacio, por favor llenar este banco previamente si desea utilizarlo.");
        }

        return null;

    }

    private void SobreEscribir(ArrayList<Pregunta> p) throws IOException {
        String a = (String) asigna.getSelectedItem();
        String b = (String) temas.getSelectedItem();
        String c = (String) ndif.getSelectedItem();
        String L = "";
        for (Pregunta pregunta : p) {
            String info = pregunta.getNivel() + ";" + pregunta.getContenido() + ";" + pregunta.getEstado() + ";" + pregunta.getFecha() + ";";
            L = L + info + "\r\n";
        }
        File f = new File("Profesor/" + usuario + "/" + a + "/" + b + "/Preguntas_" + c + ".txt");
        FileWriter fw = new FileWriter(f);
        PrintWriter pw = new PrintWriter(fw);

        pw.write(L);

        pw.close();
        fw.close();
    }

    private void LlenarCombo(JComboBox<String> asignatura) {
        Metodos e = new Metodos();
        int h = 0;
        asignatura.removeAllItems();
        asignatura.addItem("...");
        try {
            h = e.Generador_de_Combobox("Profesor/" + usuario + "/Asignatura.txt", asignatura, h);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (h < 1) {
            JOptionPane.showMessageDialog(null, "No hay Asignaturas, deberia agregar alguna.");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox AgregarDescripcion;
    private javax.swing.JCheckBox AgregarDescripcionTema;
    private javax.swing.JComboBox<String> Asig2;
    private javax.swing.JComboBox<String> Asig3;
    private javax.swing.JPanel Asignatura;
    private javax.swing.JLabel AvisoNumeros;
    private rsbuttom.RSButtonMetro BottonAsignatura;
    private rsbuttom.RSButtonMetro BottonCamContra;
    private rsbuttom.RSButtonMetro BottonEditAsig;
    private rsbuttom.RSButtonMetro BottonEditFoto;
    private rsbuttom.RSButtonMetro BottonEditInfo;
    private rsbuttom.RSButtonMetro BottonGenrExam;
    private rsbuttom.RSButtonMetro BottonHome;
    private rsbuttom.RSButtonMetro BottonPerfil;
    private rsbuttom.RSButtonMetro BottonPreguntas;
    private rsbuttom.RSButtonMetro BottonTemas;
    private rsbuttom.RSButtonMetro BottonVerInfo;
    private rsbuttom.RSButtonMetro ButtomEditTem;
    private rsbuttom.RSButtonMetro ButtonAddPreg;
    private rsbuttom.RSButtonMetro ButtonAgregarPregunta;
    private rsbuttom.RSButtonMetro ButtonAgregarTema;
    private rsbuttom.RSButtonMetro ButtonCambio;
    private rsbuttom.RSButtonMetro ButtonGenerarInforme;
    private rsbuttom.RSButtonMetro ButtonGuardarFoto;
    private rsbuttom.RSButtonMetro ButtonMostrarCENT;
    private rsbuttom.RSButtonMetro ButtonMostrarDER;
    private rsbuttom.RSButtonMetro ButtonMostrarIZQ;
    private javax.swing.JTextField Cedula1;
    private javax.swing.JTextField CodEditAsig;
    private javax.swing.JComboBox<String> ComboAsigEdit;
    private javax.swing.JComboBox<String> ComboAsigPreg;
    private javax.swing.JComboBox<String> ComboAsignatura;
    private javax.swing.JComboBox<String> ComboAsignaturaS;
    private javax.swing.JComboBox<String> ComboBoxTemas;
    private javax.swing.JComboBox<String> ComboNivPreg;
    private javax.swing.JComboBox<String> ComboNivel;
    private javax.swing.JComboBox<String> ComboNivelA;
    private javax.swing.JComboBox<String> ComboTemPreg;
    private javax.swing.JTextArea DesEditAsig;
    private javax.swing.JTextArea DesEditTem;
    private javax.swing.JTextArea Descripcion;
    private javax.swing.JTextArea DescripcionTema;
    private javax.swing.JPanel EditAsig;
    private javax.swing.JPanel EditPreg;
    private javax.swing.JPanel EditTem;
    private rsbuttom.RSButtonMetro EditarAsignatura;
    private rsbuttom.RSButtonMetro EditarPreguntas;
    private rsbuttom.RSButtonMetro EditarTemas;
    private rsbuttom.RSButtonMetro ElimEditAsig;
    private rsbuttom.RSButtonMetro ElimEditTem;
    private javax.swing.JTextField EstadPreg;
    private com.toedter.calendar.JDateChooser FechaPreg;
    private javax.swing.JPanel Fondo;
    private javax.swing.JLabel Foto1;
    private javax.swing.JLabel Foto2;
    private javax.swing.JPanel Generar;
    private rsbuttom.RSButtonMetro GuaEditAsig;
    private rsbuttom.RSButtonMetro GuardarTem;
    private javax.swing.JPanel Home;
    private javax.swing.JTextArea InfoPreg;
    private javax.swing.JLabel InfoTem;
    private javax.swing.JPanel Info_Examen;
    private javax.swing.JPanel InformeTablas;
    private javax.swing.JTabbedPane Menu;
    private javax.swing.JLabel NivInfo;
    private javax.swing.JTextField NomEditAsig;
    private javax.swing.JTextField NomEditTem;
    private javax.swing.JTextField Nombre1;
    private javax.swing.JTextField NombreDelTema;
    private javax.swing.JTextField NombreDelaAsignatura;
    private javax.swing.JPasswordField NuevaContra;
    private javax.swing.JPanel PanelMenu;
    private javax.swing.JPanel Perfil;
    private javax.swing.JPanel Pregunta;
    private javax.swing.JTextArea Preguntas;
    private javax.swing.JLabel Separador;
    private javax.swing.JTabbedPane SubMenu;
    private javax.swing.JTable TablaAsig;
    private javax.swing.JTable TablaPreg;
    private javax.swing.JTable TablaPregEdit;
    private javax.swing.JTable TablaTem;
    private javax.swing.JPanel Tema;
    private javax.swing.JTextField Usuario1;
    private javax.swing.JPasswordField ValNuevaContra;
    private javax.swing.JPanel Ver;
    private rsbuttom.RSButtonMetro addAsig;
    private rsbuttom.RSButtonMetro addAsig7;
    private rsbuttom.RSButtonMetro addAsig8;
    private rsbuttom.RSButtonMetro addAsig9;
    private javax.swing.JComboBox<String> asigna;
    private javax.swing.JTextField codMat;
    private javax.swing.JTextField evaluacion;
    private com.toedter.calendar.JDateChooser fecha;
    private rsbuttom.RSButtonMetro generarExamen;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JComboBox<String> ndif;
    private javax.swing.JComboBox<String> nivel;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField preg;
    private javax.swing.JComboBox<String> seme;
    private javax.swing.JComboBox<String> tema;
    private javax.swing.JComboBox<String> temas;
    // End of variables declaration//GEN-END:variables
}
