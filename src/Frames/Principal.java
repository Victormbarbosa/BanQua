/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Frames;

import Classes.AES;
import Classes.Asignatura;
import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import Classes.Metodos;
import Classes.Pregunta;
import Classes.Profesor;
import Classes.Tema;
import static Frames.InicioSeccion.Correo;
import static Frames.InicioSeccion.nombre_profesor;
import static Frames.InicioSeccion.usuario;
import com.toedter.calendar.JDateChooser;
import java.awt.Color;
import java.awt.Toolkit;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.net.URL;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.concurrent.ThreadLocalRandom;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.TextAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.IndexedColors;
import rsbuttom.RSButtonMetro;

/**
 *
 * @author danie
 */
public class Principal extends javax.swing.JFrame {

    //Variables para la creacion de examen
    static String titulo = "aaa";
    static String nom;
    static String mat;
    static String ev;
    static String fec;
    static String sem;
    static String cod;
    static XWPFDocument documento = new XWPFDocument();
    static int num;
    int pop;
    static ArrayList<String> person = new ArrayList();
    static int i = 0;
    static int jud;
    //Variables para mostrar asignatura, tema y preguntas.
    static boolean sw1 = true; //boolean para asignaturas
    static boolean sw2 = true; //boolean para temas
    static boolean sw3 = true; //boolean para preguntas
    Profesor profesor = new Profesor();
    DefaultTableModel modelo;

    public Principal() {
        initComponents();
        BarraCorrediza();
        this.getContentPane().setBackground(Color.BLACK);;
        Metodos met = new Metodos();
        profesor.ActualizarDatos();
        this.Nombre1.setText(InicioSeccion.nombre_profesor);
        this.Cedula1.setText(met.EncontrarCedula("C:\\ProgramData\\BanQua\\Usuario.txt", InicioSeccion.usuario));
        this.Usuario1.setText(usuario);
        SubMenu.setSelectedIndex(0);
        FotoDefault();
        CambiarAmbienteGrafico();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jScrollPane11 = new javax.swing.JScrollPane();
        PanelMenu = new javax.swing.JPanel();
        Foto2 = new javax.swing.JLabel();
        BottonEditInfo = new rsbuttom.RSButtonMetro();
        BottonHome = new rsbuttom.RSButtonMetro();
        BottonPerfil = new rsbuttom.RSButtonMetro();
        jPanel21 = new javax.swing.JPanel();
        jPanel22 = new javax.swing.JPanel();
        SubMenu = new javax.swing.JTabbedPane();
        jPanel10 = new javax.swing.JPanel();
        BottonVerInfo3 = new rsbuttom.RSButtonMetro();
        BottonGenrExam2 = new rsbuttom.RSButtonMetro();
        jPanel23 = new javax.swing.JPanel();
        BottonTemas = new rsbuttom.RSButtonMetro();
        BottonPreguntas = new rsbuttom.RSButtonMetro();
        BottonAsignatura = new rsbuttom.RSButtonMetro();
        BottonVerInfo = new rsbuttom.RSButtonMetro();
        BottonGenrExam = new rsbuttom.RSButtonMetro();
        jPanel2 = new javax.swing.JPanel();
        EditarAsignatura1 = new rsbuttom.RSButtonMetro();
        EditarTemas1 = new rsbuttom.RSButtonMetro();
        EditarPreguntas1 = new rsbuttom.RSButtonMetro();
        BottonVerInfo2 = new rsbuttom.RSButtonMetro();
        BottonGenrExam1 = new rsbuttom.RSButtonMetro();
        BottonVerInfo1 = new rsbuttom.RSButtonMetro();
        Fondo = new javax.swing.JPanel();
        Menu = new javax.swing.JTabbedPane();
        Home = new javax.swing.JPanel();
        jLabel61 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        BottonCambiarDeUsuario = new rsbuttom.RSButtonMetro();
        jPanel5 = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        Perfil = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        BottonCamContra = new rsbuttom.RSButtonMetro();
        NuevaContra = new javax.swing.JPasswordField();
        ValNuevaContra = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        ButtonCambio = new rsbuttom.RSButtonMetro();
        Nombre1 = new javax.swing.JTextField();
        Cedula1 = new javax.swing.JTextField();
        CorreoPerfil = new javax.swing.JTextField();
        Usuario1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Foto1 = new javax.swing.JLabel();
        BottonEditFoto = new rsbuttom.RSButtonMetro();
        ButtonGuardarFoto = new rsbuttom.RSButtonMetro();
        jLabel39 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        ButtomEditPreg1 = new rsbuttom.RSButtonMetro();
        GuarEditPreg1 = new rsbuttom.RSButtonMetro();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        Asignatura = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        NombreDelaAsignatura = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        codMat = new javax.swing.JTextField();
        AgregarDescripcion = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Descripcion = new javax.swing.JTextArea();
        addAsig = new rsbuttom.RSButtonMetro();
        Tema = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        ComboAsignatura = new javax.swing.JComboBox<>();
        NombreDelTema = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        AgregarDescripcionTema = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        DescripcionTema = new javax.swing.JTextArea();
        ButtonAgregarTema = new rsbuttom.RSButtonMetro();
        AdTema = new javax.swing.JLabel();
        Pregunta = new javax.swing.JPanel();
        ComboAsignaturaS = new javax.swing.JComboBox<>();
        ComboBoxTemas = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        ComboNivel = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        Preguntas = new javax.swing.JTextArea();
        ButtonAgregarPregunta = new rsbuttom.RSButtonMetro();
        jLabel20 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        AdTem = new javax.swing.JLabel();
        AdDif = new javax.swing.JLabel();
        AdAsig = new javax.swing.JLabel();
        Ver = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        ButtonMostrarIZQ = new rsbuttom.RSButtonMetro();
        jLabel35 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        Asig3 = new javax.swing.JComboBox<>();
        tema = new javax.swing.JComboBox<>();
        nivel = new javax.swing.JComboBox<>();
        ButtonMostrarDER = new rsbuttom.RSButtonMetro();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        AdAsig2 = new javax.swing.JLabel();
        AdAsig3 = new javax.swing.JLabel();
        AdAsig4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TablaPreg = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        Asig2 = new javax.swing.JComboBox<>();
        ButtonMostrarCENT = new rsbuttom.RSButtonMetro();
        jLabel30 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        AdAsig1 = new javax.swing.JLabel();
        ButtonGenerarInforme = new rsbuttom.RSButtonMetro();
        Generar = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        evaluacion = new javax.swing.JTextField();
        nombre = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        seme = new javax.swing.JComboBox<>();
        asigna = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        fecha = new com.toedter.calendar.JDateChooser();
        preg = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        AvisoNumeros = new javax.swing.JLabel();
        ButtonAddPreg = new rsbuttom.RSButtonMetro();
        InfoTem = new javax.swing.JLabel();
        temas = new javax.swing.JComboBox<>();
        NivInfo = new javax.swing.JLabel();
        ndif = new javax.swing.JComboBox<>();
        generarExamen = new rsbuttom.RSButtonMetro();
        Separador = new javax.swing.JLabel();
        AsAd = new javax.swing.JLabel();
        NivAd = new javax.swing.JLabel();
        SeAd = new javax.swing.JLabel();
        TemAd = new javax.swing.JLabel();
        PregActual = new javax.swing.JLabel();
        EditAsig = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        NomEditAsig = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        CodEditAsig = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        DesEditAsig = new javax.swing.JTextArea();
        BottonEditAsig = new rsbuttom.RSButtonMetro();
        jScrollPane6 = new javax.swing.JScrollPane();
        TablaAsig = new javax.swing.JTable();
        GuaEditAsig = new rsbuttom.RSButtonMetro();
        ElimEditAsig = new rsbuttom.RSButtonMetro();
        EditTem = new javax.swing.JPanel();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        ComboAsigEdit = new javax.swing.JComboBox<>();
        NomEditTem = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        DesEditTem = new javax.swing.JTextArea();
        jScrollPane8 = new javax.swing.JScrollPane();
        TablaTem = new javax.swing.JTable();
        ButtomEditTem = new rsbuttom.RSButtonMetro();
        ElimEditTem = new rsbuttom.RSButtonMetro();
        GuardarTem = new rsbuttom.RSButtonMetro();
        AdAsig5 = new javax.swing.JLabel();
        EditPreg = new javax.swing.JPanel();
        ComboAsigPreg = new javax.swing.JComboBox<>();
        jLabel52 = new javax.swing.JLabel();
        ComboTemPreg = new javax.swing.JComboBox<>();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        ComboNivelA = new javax.swing.JComboBox<>();
        jScrollPane9 = new javax.swing.JScrollPane();
        InfoPreg = new javax.swing.JTextArea();
        jLabel56 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        TablaPregEdit = new javax.swing.JTable();
        ButtomEditPreg = new rsbuttom.RSButtonMetro();
        ElemEditPreg = new rsbuttom.RSButtonMetro();
        GuarEditPreg = new rsbuttom.RSButtonMetro();
        FechaPreg = new com.toedter.calendar.JDateChooser();
        EstadPreg = new javax.swing.JTextField();
        DesButto = new javax.swing.JButton();
        jLabel55 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        ComboNivPreg = new javax.swing.JComboBox<>();
        jLabel59 = new javax.swing.JLabel();
        AdAsig6 = new javax.swing.JLabel();
        AdAsig11 = new javax.swing.JLabel();
        AdAsig12 = new javax.swing.JLabel();
        AdAsig14 = new javax.swing.JLabel();
        BotonDesBloqueo = new rsbuttom.RSButtonMetro();
        jLabel29 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 87, 116));
        setMinimumSize(new java.awt.Dimension(1050, 800));
        setSize(new java.awt.Dimension(1017, 1093));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jScrollPane11.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane11.setAlignmentX(0.3F);
        jScrollPane11.setAlignmentY(0.3F);

        PanelMenu.setBackground(new java.awt.Color(0, 103, 142));
        PanelMenu.setMaximumSize(new java.awt.Dimension(217, 750));
        PanelMenu.setPreferredSize(new java.awt.Dimension(217, 750));
        PanelMenu.setRequestFocusEnabled(false);
        PanelMenu.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                PanelMenuComponentResized(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                PanelMenuComponentShown(evt);
            }
        });
        PanelMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Foto2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Foto2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Perfil Blanco.png"))); // NOI18N
        Foto2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 4));
        PanelMenu.add(Foto2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 180, 200));

        BottonEditInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Portafolio.png"))); // NOI18N
        BottonEditInfo.setText("Añadir        ");
        BottonEditInfo.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonEditInfo.setColorHover(new java.awt.Color(101, 203, 255));
        BottonEditInfo.setColorNormal(new java.awt.Color(53, 188, 255));
        BottonEditInfo.setColorPressed(new java.awt.Color(0, 159, 239));
        BottonEditInfo.setFocusPainted(false);
        BottonEditInfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonEditInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonEditInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonEditInfoActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonEditInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 183, 42));

        BottonHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_2302(0)_48.png"))); // NOI18N
        BottonHome.setText("Home             ");
        BottonHome.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonHome.setColorHover(new java.awt.Color(101, 203, 255));
        BottonHome.setColorNormal(new java.awt.Color(53, 188, 255));
        BottonHome.setColorPressed(new java.awt.Color(0, 159, 239));
        BottonHome.setFocusPainted(false);
        BottonHome.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonHome.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonHomeActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonHome, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 183, 42));

        BottonPerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IconoPerfil.png"))); // NOI18N
        BottonPerfil.setText("Perfil");
        BottonPerfil.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonPerfil.setColorHover(new java.awt.Color(101, 203, 255));
        BottonPerfil.setColorNormal(new java.awt.Color(53, 188, 255));
        BottonPerfil.setColorPressed(new java.awt.Color(0, 159, 239));
        BottonPerfil.setFocusPainted(false);
        BottonPerfil.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonPerfil.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonPerfilActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 183, 42));

        jPanel21.setBackground(new java.awt.Color(0, 103, 142));

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );

        PanelMenu.add(jPanel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 440, 220, 40));

        jPanel22.setBackground(new java.awt.Color(0, 103, 142));

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 220, Short.MAX_VALUE)
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        PanelMenu.add(jPanel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 770, -1, 30));

        jPanel10.setBackground(new java.awt.Color(0, 103, 142));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BottonVerInfo3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EditarIcono.png"))); // NOI18N
        BottonVerInfo3.setText("Editar");
        BottonVerInfo3.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonVerInfo3.setColorHover(new java.awt.Color(101, 203, 255));
        BottonVerInfo3.setColorNormal(new java.awt.Color(53, 188, 255));
        BottonVerInfo3.setColorPressed(new java.awt.Color(0, 159, 239));
        BottonVerInfo3.setFocusPainted(false);
        BottonVerInfo3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonVerInfo3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonVerInfo3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonVerInfo3ActionPerformed(evt);
            }
        });
        jPanel10.add(BottonVerInfo3, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 15, 183, 42));

        BottonGenrExam2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(0)_48.png"))); // NOI18N
        BottonGenrExam2.setText("Crear Examen");
        BottonGenrExam2.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonGenrExam2.setColorHover(new java.awt.Color(101, 203, 255));
        BottonGenrExam2.setColorNormal(new java.awt.Color(53, 188, 255));
        BottonGenrExam2.setColorPressed(new java.awt.Color(0, 159, 239));
        BottonGenrExam2.setFocusPainted(false);
        BottonGenrExam2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonGenrExam2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonGenrExam2.setMaximumSize(new java.awt.Dimension(150, 35));
        BottonGenrExam2.setMinimumSize(new java.awt.Dimension(150, 35));
        BottonGenrExam2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonGenrExam2ActionPerformed(evt);
            }
        });
        jPanel10.add(BottonGenrExam2, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 75, 183, 42));

        SubMenu.addTab("tab1", jPanel10);

        jPanel23.setBackground(new java.awt.Color(0, 103, 142));
        jPanel23.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BottonTemas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(2)_48.png"))); // NOI18N
        BottonTemas.setText("Temas");
        BottonTemas.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonTemas.setColorHover(new java.awt.Color(133, 207, 244));
        BottonTemas.setColorNormal(new java.awt.Color(76, 185, 239));
        BottonTemas.setColorPressed(new java.awt.Color(18, 143, 205));
        BottonTemas.setFocusPainted(false);
        BottonTemas.setFocusable(false);
        BottonTemas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonTemas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonTemas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonTemasActionPerformed(evt);
            }
        });
        jPanel23.add(BottonTemas, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 169, 42));

        BottonPreguntas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(2)_48.png"))); // NOI18N
        BottonPreguntas.setText("Preguntas");
        BottonPreguntas.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonPreguntas.setColorHover(new java.awt.Color(133, 207, 244));
        BottonPreguntas.setColorNormal(new java.awt.Color(76, 185, 239));
        BottonPreguntas.setColorPressed(new java.awt.Color(18, 143, 205));
        BottonPreguntas.setFocusPainted(false);
        BottonPreguntas.setFocusable(false);
        BottonPreguntas.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonPreguntas.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonPreguntas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonPreguntasActionPerformed(evt);
            }
        });
        jPanel23.add(BottonPreguntas, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 169, 42));

        BottonAsignatura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(2)_48.png"))); // NOI18N
        BottonAsignatura.setText("Asignaturas");
        BottonAsignatura.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonAsignatura.setColorHover(new java.awt.Color(133, 207, 244));
        BottonAsignatura.setColorNormal(new java.awt.Color(76, 185, 239));
        BottonAsignatura.setColorPressed(new java.awt.Color(18, 143, 205));
        BottonAsignatura.setFocusPainted(false);
        BottonAsignatura.setFocusable(false);
        BottonAsignatura.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonAsignatura.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonAsignatura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonAsignaturaActionPerformed(evt);
            }
        });
        jPanel23.add(BottonAsignatura, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 169, 42));

        BottonVerInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EditarIcono.png"))); // NOI18N
        BottonVerInfo.setText("Editar");
        BottonVerInfo.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonVerInfo.setColorHover(new java.awt.Color(101, 203, 255));
        BottonVerInfo.setColorNormal(new java.awt.Color(53, 188, 255));
        BottonVerInfo.setColorPressed(new java.awt.Color(0, 159, 239));
        BottonVerInfo.setFocusPainted(false);
        BottonVerInfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonVerInfo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonVerInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonVerInfoActionPerformed(evt);
            }
        });
        jPanel23.add(BottonVerInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 183, 42));

        BottonGenrExam.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(0)_48.png"))); // NOI18N
        BottonGenrExam.setText("Crear Examen");
        BottonGenrExam.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonGenrExam.setColorHover(new java.awt.Color(101, 203, 255));
        BottonGenrExam.setColorNormal(new java.awt.Color(53, 188, 255));
        BottonGenrExam.setColorPressed(new java.awt.Color(0, 159, 239));
        BottonGenrExam.setFocusPainted(false);
        BottonGenrExam.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonGenrExam.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonGenrExam.setMaximumSize(new java.awt.Dimension(150, 35));
        BottonGenrExam.setMinimumSize(new java.awt.Dimension(150, 35));
        BottonGenrExam.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonGenrExamActionPerformed(evt);
            }
        });
        jPanel23.add(BottonGenrExam, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 183, 42));

        SubMenu.addTab("tab2", jPanel23);

        jPanel2.setBackground(new java.awt.Color(0, 103, 142));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        EditarAsignatura1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EditarIcono.png"))); // NOI18N
        EditarAsignatura1.setText("Asignaturas");
        EditarAsignatura1.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        EditarAsignatura1.setColorHover(new java.awt.Color(133, 207, 244));
        EditarAsignatura1.setColorNormal(new java.awt.Color(76, 185, 239));
        EditarAsignatura1.setColorPressed(new java.awt.Color(18, 143, 205));
        EditarAsignatura1.setFocusPainted(false);
        EditarAsignatura1.setFocusable(false);
        EditarAsignatura1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EditarAsignatura1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        EditarAsignatura1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarAsignatura1ActionPerformed(evt);
            }
        });
        jPanel2.add(EditarAsignatura1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 169, 42));

        EditarTemas1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EditarIcono.png"))); // NOI18N
        EditarTemas1.setText("Temas");
        EditarTemas1.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        EditarTemas1.setColorHover(new java.awt.Color(133, 207, 244));
        EditarTemas1.setColorNormal(new java.awt.Color(76, 185, 239));
        EditarTemas1.setColorPressed(new java.awt.Color(18, 143, 205));
        EditarTemas1.setFocusPainted(false);
        EditarTemas1.setFocusable(false);
        EditarTemas1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EditarTemas1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        EditarTemas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarTemas1ActionPerformed(evt);
            }
        });
        jPanel2.add(EditarTemas1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 169, 42));

        EditarPreguntas1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EditarIcono.png"))); // NOI18N
        EditarPreguntas1.setText("Preguntas");
        EditarPreguntas1.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        EditarPreguntas1.setColorHover(new java.awt.Color(133, 207, 244));
        EditarPreguntas1.setColorNormal(new java.awt.Color(76, 185, 239));
        EditarPreguntas1.setColorPressed(new java.awt.Color(18, 143, 205));
        EditarPreguntas1.setFocusPainted(false);
        EditarPreguntas1.setFocusable(false);
        EditarPreguntas1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        EditarPreguntas1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        EditarPreguntas1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarPreguntas1ActionPerformed(evt);
            }
        });
        jPanel2.add(EditarPreguntas1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, 169, 42));

        BottonVerInfo2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/EditarIcono.png"))); // NOI18N
        BottonVerInfo2.setText("Editar");
        BottonVerInfo2.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonVerInfo2.setColorHover(new java.awt.Color(101, 203, 255));
        BottonVerInfo2.setColorNormal(new java.awt.Color(53, 188, 255));
        BottonVerInfo2.setColorPressed(new java.awt.Color(0, 159, 239));
        BottonVerInfo2.setFocusPainted(false);
        BottonVerInfo2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonVerInfo2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonVerInfo2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonVerInfo2ActionPerformed(evt);
            }
        });
        jPanel2.add(BottonVerInfo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 15, 183, 42));

        BottonGenrExam1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_d83d(0)_48.png"))); // NOI18N
        BottonGenrExam1.setText("Crear Examen");
        BottonGenrExam1.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonGenrExam1.setColorHover(new java.awt.Color(101, 203, 255));
        BottonGenrExam1.setColorNormal(new java.awt.Color(53, 188, 255));
        BottonGenrExam1.setColorPressed(new java.awt.Color(0, 159, 239));
        BottonGenrExam1.setFocusPainted(false);
        BottonGenrExam1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonGenrExam1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonGenrExam1.setMaximumSize(new java.awt.Dimension(150, 35));
        BottonGenrExam1.setMinimumSize(new java.awt.Dimension(150, 35));
        BottonGenrExam1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonGenrExam1ActionPerformed(evt);
            }
        });
        jPanel2.add(BottonGenrExam1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 230, 183, 42));

        SubMenu.addTab("tab3", jPanel2);

        PanelMenu.add(SubMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 450, 230, 330));

        BottonVerInfo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Entypo_e70a(1)_48.png"))); // NOI18N
        BottonVerInfo1.setText("Consultar");
        BottonVerInfo1.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonVerInfo1.setColorHover(new java.awt.Color(101, 203, 255));
        BottonVerInfo1.setColorNormal(new java.awt.Color(53, 188, 255));
        BottonVerInfo1.setColorPressed(new java.awt.Color(0, 159, 239));
        BottonVerInfo1.setFocusPainted(false);
        BottonVerInfo1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonVerInfo1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonVerInfo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonVerInfo1ActionPerformed(evt);
            }
        });
        PanelMenu.add(BottonVerInfo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 183, 42));

        jScrollPane11.setViewportView(PanelMenu);

        getContentPane().add(jScrollPane11, java.awt.BorderLayout.WEST);

        Fondo.setBackground(new java.awt.Color(0, 87, 116));
        Fondo.setMaximumSize(new java.awt.Dimension(1000, 830));
        Fondo.setMinimumSize(new java.awt.Dimension(1000, 700));
        Fondo.setPreferredSize(new java.awt.Dimension(700, 830));
        Fondo.setLayout(new java.awt.CardLayout(-9, -28));

        Menu.setBackground(new java.awt.Color(0, 87, 116));
        Menu.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));

        Home.setBackground(new java.awt.Color(0, 87, 116));
        Home.setPreferredSize(new java.awt.Dimension(250, 600));
        Home.setLayout(new java.awt.BorderLayout());

        jLabel61.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel61.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Logo2.png"))); // NOI18N
        jLabel61.setMinimumSize(new java.awt.Dimension(0, 0));
        jLabel61.setPreferredSize(new java.awt.Dimension(0, 0));
        jLabel61.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel61MouseClicked(evt);
            }
        });
        Home.add(jLabel61, java.awt.BorderLayout.CENTER);

        jPanel1.setBackground(new java.awt.Color(0, 87, 116));
        jPanel1.setMaximumSize(new java.awt.Dimension(100000, 1000000));
        jPanel1.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanel1.setName(""); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(250, 600));

        jPanel3.setMinimumSize(new java.awt.Dimension(0, 240));
        jPanel3.setPreferredSize(new java.awt.Dimension(0, 240));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        jPanel4.setBackground(new java.awt.Color(0, 87, 116));
        jPanel4.setMaximumSize(new java.awt.Dimension(2147483647, 150));
        jPanel4.setMinimumSize(new java.awt.Dimension(250, 150));
        jPanel4.setPreferredSize(new java.awt.Dimension(250, 150));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BottonCambiarDeUsuario.setText(" Cerrar Sesion");
        BottonCambiarDeUsuario.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        BottonCambiarDeUsuario.setColorHover(new java.awt.Color(255, 102, 102));
        BottonCambiarDeUsuario.setColorNormal(new java.awt.Color(255, 51, 51));
        BottonCambiarDeUsuario.setColorPressed(new java.awt.Color(239, 0, 0));
        BottonCambiarDeUsuario.setFocusPainted(false);
        BottonCambiarDeUsuario.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BottonCambiarDeUsuario.setMaximumSize(new java.awt.Dimension(150, 35));
        BottonCambiarDeUsuario.setMinimumSize(new java.awt.Dimension(150, 35));
        BottonCambiarDeUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonCambiarDeUsuarioActionPerformed(evt);
            }
        });
        jPanel4.add(BottonCambiarDeUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 183, 42));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(620, 620, 620))
        );

        Home.add(jPanel1, java.awt.BorderLayout.LINE_END);

        jPanel5.setBackground(new java.awt.Color(0, 87, 116));

        jLabel62.setIcon(new javax.swing.ImageIcon("C:\\Users\\USER\\Documents\\NetBeansProjects\\BanQua\\src\\Imagenes\\copy.png")); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel62)
                .addContainerGap(881, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addComponent(jLabel62)
                .addGap(26, 26, 26))
        );

        Home.add(jPanel5, java.awt.BorderLayout.PAGE_END);

        Menu.addTab("Home", Home);

        Perfil.setBackground(new java.awt.Color(255, 255, 255));
        Perfil.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 103, 142));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel9.setText("Contraseña:");
        Perfil.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 660, 80, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 103, 142));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Validar contraseña:");
        Perfil.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 700, 120, 20));

        BottonCamContra.setBackground(new java.awt.Color(255, 255, 255));
        BottonCamContra.setText("Cambiar contraseña?");
        BottonCamContra.setColorHover(new java.awt.Color(239, 239, 239));
        BottonCamContra.setColorNormal(new java.awt.Color(255, 255, 255));
        BottonCamContra.setColorPressed(new java.awt.Color(239, 239, 239));
        BottonCamContra.setColorTextHover(new java.awt.Color(0, 75, 104));
        BottonCamContra.setColorTextNormal(new java.awt.Color(0, 103, 142));
        BottonCamContra.setColorTextPressed(new java.awt.Color(0, 75, 104));
        BottonCamContra.setFocusable(false);
        BottonCamContra.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BottonCamContra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonCamContraActionPerformed(evt);
            }
        });
        Perfil.add(BottonCamContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 580, 160, 20));

        NuevaContra.setMaximumSize(new java.awt.Dimension(7, 20));
        NuevaContra.setMinimumSize(new java.awt.Dimension(7, 20));
        NuevaContra.setPreferredSize(new java.awt.Dimension(7, 20));
        NuevaContra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevaContraActionPerformed(evt);
            }
        });
        Perfil.add(NuevaContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 660, 361, 25));

        ValNuevaContra.setMaximumSize(new java.awt.Dimension(7, 20));
        ValNuevaContra.setMinimumSize(new java.awt.Dimension(7, 20));
        ValNuevaContra.setPreferredSize(new java.awt.Dimension(7, 20));
        ValNuevaContra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValNuevaContraActionPerformed(evt);
            }
        });
        ValNuevaContra.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ValNuevaContraKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ValNuevaContraKeyReleased(evt);
            }
        });
        Perfil.add(ValNuevaContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 700, 361, 25));

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 103, 142));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Foto del Perfil");
        Perfil.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 180, -1));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(255, 51, 51));
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel27.setText("Las contraseñas no son iguales.");
        Perfil.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 740, 200, -1));

        ButtonCambio.setText("Hacer Cambio");
        ButtonCambio.setColorHover(new java.awt.Color(1, 165, 228));
        ButtonCambio.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonCambio.setColorPressed(new java.awt.Color(2, 95, 130));
        ButtonCambio.setFocusable(false);
        ButtonCambio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCambioActionPerformed(evt);
            }
        });
        Perfil.add(ButtonCambio, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 770, 160, 40));

        Nombre1.setEditable(false);
        Nombre1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Nombre1.setForeground(new java.awt.Color(51, 51, 51));
        Nombre1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Nombre1.setMaximumSize(new java.awt.Dimension(7, 28));
        Nombre1.setMinimumSize(new java.awt.Dimension(7, 28));
        Nombre1.setOpaque(false);
        Nombre1.setPreferredSize(new java.awt.Dimension(7, 28));
        Nombre1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Nombre1KeyReleased(evt);
            }
        });
        Perfil.add(Nombre1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, 360, 25));

        Cedula1.setEditable(false);
        Cedula1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Cedula1.setForeground(new java.awt.Color(51, 51, 51));
        Cedula1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Cedula1.setMaximumSize(new java.awt.Dimension(7, 28));
        Cedula1.setMinimumSize(new java.awt.Dimension(7, 28));
        Cedula1.setOpaque(false);
        Cedula1.setPreferredSize(new java.awt.Dimension(7, 28));
        Cedula1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Cedula1KeyReleased(evt);
            }
        });
        Perfil.add(Cedula1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, 360, 25));

        CorreoPerfil.setEditable(false);
        CorreoPerfil.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CorreoPerfil.setForeground(new java.awt.Color(51, 51, 51));
        CorreoPerfil.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        CorreoPerfil.setMaximumSize(new java.awt.Dimension(7, 28));
        CorreoPerfil.setMinimumSize(new java.awt.Dimension(7, 28));
        CorreoPerfil.setOpaque(false);
        CorreoPerfil.setPreferredSize(new java.awt.Dimension(7, 28));
        CorreoPerfil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CorreoPerfilActionPerformed(evt);
            }
        });
        CorreoPerfil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CorreoPerfilKeyReleased(evt);
            }
        });
        Perfil.add(CorreoPerfil, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 490, 360, 25));

        Usuario1.setEditable(false);
        Usuario1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Usuario1.setForeground(new java.awt.Color(51, 51, 51));
        Usuario1.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        Usuario1.setMaximumSize(new java.awt.Dimension(7, 28));
        Usuario1.setMinimumSize(new java.awt.Dimension(7, 28));
        Usuario1.setOpaque(false);
        Usuario1.setPreferredSize(new java.awt.Dimension(7, 28));
        Perfil.add(Usuario1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 450, 360, 25));

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 103, 142));
        jLabel18.setText("Correo:");
        Perfil.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 490, 72, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 103, 142));
        jLabel3.setText("Nickname: ");
        Perfil.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 450, 72, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 103, 142));
        jLabel2.setText("Cedula: ");
        Perfil.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, 70, -1));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 103, 142));
        jLabel1.setText("Nombre:");
        Perfil.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 370, 72, -1));

        Foto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Foto1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Perfil Azul.png"))); // NOI18N
        Foto1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 103, 142), 4));
        Perfil.add(Foto1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 80, 180, 200));

        BottonEditFoto.setText("Editar foto");
        BottonEditFoto.setColorHover(new java.awt.Color(1, 165, 228));
        BottonEditFoto.setColorNormal(new java.awt.Color(1, 128, 176));
        BottonEditFoto.setColorPressed(new java.awt.Color(2, 95, 130));
        BottonEditFoto.setFocusable(false);
        BottonEditFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BottonEditFotoActionPerformed(evt);
            }
        });
        Perfil.add(BottonEditFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 80, 183, 38));

        ButtonGuardarFoto.setText("Imagen por Defecto");
        ButtonGuardarFoto.setColorHover(new java.awt.Color(1, 165, 228));
        ButtonGuardarFoto.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonGuardarFoto.setColorPressed(new java.awt.Color(2, 95, 130));
        ButtonGuardarFoto.setFocusable(false);
        ButtonGuardarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonGuardarFotoActionPerformed(evt);
            }
        });
        Perfil.add(ButtonGuardarFoto, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 140, 184, 38));

        jLabel39.setForeground(new java.awt.Color(0, 103, 142));
        jLabel39.setText("_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________-");
        jLabel39.setToolTipText("");
        Perfil.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 590, 1780, -1));

        jLabel41.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(0, 103, 142));
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel41.setText("Ingrese la nueva contraseña");
        Perfil.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 620, 180, -1));

        jLabel42.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(0, 103, 142));
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel42.setText("Datos del Perfil");
        Perfil.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 330, 180, -1));

        jLabel43.setForeground(new java.awt.Color(0, 103, 142));
        jLabel43.setText("_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________-");
        jLabel43.setToolTipText("");
        Perfil.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 1770, -1));

        jLabel44.setForeground(new java.awt.Color(0, 103, 142));
        jLabel44.setText("_______________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________-");
        jLabel44.setToolTipText("");
        Perfil.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 1780, -1));

        ButtomEditPreg1.setText("Editar");
        ButtomEditPreg1.setColorBorde(null);
        ButtomEditPreg1.setColorHover(new java.awt.Color(255, 157, 61));
        ButtomEditPreg1.setColorNormal(new java.awt.Color(255, 127, 0));
        ButtomEditPreg1.setColorPressed(new java.awt.Color(244, 121, 0));
        ButtomEditPreg1.setFocusable(false);
        ButtomEditPreg1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ButtomEditPreg1.setMaximumSize(new java.awt.Dimension(125, 17));
        ButtomEditPreg1.setMinimumSize(new java.awt.Dimension(125, 17));
        ButtomEditPreg1.setPreferredSize(new java.awt.Dimension(125, 17));
        ButtomEditPreg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtomEditPreg1ActionPerformed(evt);
            }
        });
        Perfil.add(ButtomEditPreg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 530, 140, 40));

        GuarEditPreg1.setText("Guardar");
        GuarEditPreg1.setColorHover(new java.awt.Color(1, 165, 228));
        GuarEditPreg1.setColorNormal(new java.awt.Color(1, 128, 176));
        GuarEditPreg1.setColorPressed(new java.awt.Color(2, 95, 130));
        GuarEditPreg1.setFocusable(false);
        GuarEditPreg1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        GuarEditPreg1.setMaximumSize(new java.awt.Dimension(125, 17));
        GuarEditPreg1.setMinimumSize(new java.awt.Dimension(125, 17));
        GuarEditPreg1.setPreferredSize(new java.awt.Dimension(125, 17));
        GuarEditPreg1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuarEditPreg1ActionPerformed(evt);
            }
        });
        Perfil.add(GuarEditPreg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 530, 150, 40));

        jLabel37.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(255, 51, 51));
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel37.setText("*Obligatorio tener un @");
        Perfil.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 490, 200, -1));

        jLabel38.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(255, 51, 51));
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel38.setText("*No puede estar vacio el nombre");
        Perfil.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 370, 220, -1));

        jLabel60.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(255, 51, 51));
        jLabel60.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel60.setText("*Campo solo numerico");
        Perfil.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 410, 200, -1));

        Menu.addTab("Perfil", Perfil);

        Asignatura.setBackground(new java.awt.Color(255, 255, 255));
        Asignatura.setLayout(new java.awt.GridBagLayout());

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 87, 116));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText(" Agregar Asignatura");
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.ipadx = 231;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Asignatura.add(jLabel11, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 204;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 7, 0, 0);
        Asignatura.add(NombreDelaAsignatura, gridBagConstraints);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 87, 116));
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setText("Nombre de la asigantura:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Asignatura.add(jLabel13, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 87, 116));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Codigo de la asignatura:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 3;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
        Asignatura.add(jLabel5, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 204;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 7, 0, 0);
        Asignatura.add(codMat, gridBagConstraints);

        AgregarDescripcion.setBackground(new java.awt.Color(255, 255, 255));
        AgregarDescripcion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AgregarDescripcion.setForeground(new java.awt.Color(0, 87, 116));
        AgregarDescripcion.setText("Agregar descripcion");
        AgregarDescripcion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AgregarDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarDescripcionActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
        Asignatura.add(AgregarDescripcion, gridBagConstraints);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 87, 116));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel12.setText("Descripcion:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
        Asignatura.add(jLabel12, gridBagConstraints);

        Descripcion.setEditable(false);
        Descripcion.setColumns(20);
        Descripcion.setLineWrap(true);
        Descripcion.setRows(5);
        Descripcion.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        jScrollPane1.setViewportView(Descripcion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1397;
        gridBagConstraints.ipady = 477;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 20, 0, 24);
        Asignatura.add(jScrollPane1, gridBagConstraints);

        addAsig.setText("Agregar");
        addAsig.setColorHover(new java.awt.Color(1, 165, 228));
        addAsig.setColorNormal(new java.awt.Color(1, 128, 176));
        addAsig.setColorPressed(new java.awt.Color(2, 95, 130));
        addAsig.setFocusable(false);
        addAsig.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addAsig.setMaximumSize(new java.awt.Dimension(125, 17));
        addAsig.setMinimumSize(new java.awt.Dimension(125, 17));
        addAsig.setPreferredSize(new java.awt.Dimension(125, 17));
        addAsig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAsigActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 75;
        gridBagConstraints.ipady = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 20, 44, 0);
        Asignatura.add(addAsig, gridBagConstraints);

        Menu.addTab("Asigantura", Asignatura);

        Tema.setBackground(new java.awt.Color(255, 255, 255));
        Tema.setLayout(new java.awt.GridBagLayout());

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 87, 116));
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel17.setText(" Agregar Tema");
        jLabel17.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 15;
        gridBagConstraints.ipadx = 268;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Tema.add(jLabel17, gridBagConstraints);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 87, 116));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel14.setText("Seleccione la Asignatura a la cual pertenece el Tema.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 11;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 13;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Tema.add(jLabel14, gridBagConstraints);

        ComboAsignatura.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboAsignatura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        ComboAsignatura.setFocusable(false);
        ComboAsignatura.setMaximumSize(new java.awt.Dimension(20, 204));
        ComboAsignatura.setMinimumSize(new java.awt.Dimension(20, 20));
        ComboAsignatura.setPreferredSize(new java.awt.Dimension(20, 20));
        ComboAsignatura.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboAsignaturaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 147;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 20, 0, 0);
        Tema.add(ComboAsignatura, gridBagConstraints);

        NombreDelTema.setMaximumSize(new java.awt.Dimension(6, 28));
        NombreDelTema.setMinimumSize(new java.awt.Dimension(6, 28));
        NombreDelTema.setPreferredSize(new java.awt.Dimension(6, 28));
        NombreDelTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreDelTemaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 12;
        gridBagConstraints.ipadx = 234;
        gridBagConstraints.ipady = -3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 0, 0, 0);
        Tema.add(NombreDelTema, gridBagConstraints);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 87, 116));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel15.setText("Nombre del Tema:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
        Tema.add(jLabel15, gridBagConstraints);

        AgregarDescripcionTema.setBackground(new java.awt.Color(255, 255, 255));
        AgregarDescripcionTema.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AgregarDescripcionTema.setForeground(new java.awt.Color(0, 87, 116));
        AgregarDescripcionTema.setText("Agregar descripcion");
        AgregarDescripcionTema.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AgregarDescripcionTema.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        AgregarDescripcionTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarDescripcionTemaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
        Tema.add(AgregarDescripcionTema, gridBagConstraints);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 87, 116));
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel16.setText("Descripcion");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
        Tema.add(jLabel16, gridBagConstraints);

        DescripcionTema.setEditable(false);
        DescripcionTema.setColumns(20);
        DescripcionTema.setLineWrap(true);
        DescripcionTema.setRows(5);
        DescripcionTema.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        jScrollPane2.setViewportView(DescripcionTema);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 16;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1397;
        gridBagConstraints.ipady = 437;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(17, 20, 0, 24);
        Tema.add(jScrollPane2, gridBagConstraints);

        ButtonAgregarTema.setText("Agregar");
        ButtonAgregarTema.setColorHover(new java.awt.Color(1, 165, 228));
        ButtonAgregarTema.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonAgregarTema.setColorPressed(new java.awt.Color(2, 95, 130));
        ButtonAgregarTema.setFocusable(false);
        ButtonAgregarTema.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ButtonAgregarTema.setMaximumSize(new java.awt.Dimension(125, 17));
        ButtonAgregarTema.setMinimumSize(new java.awt.Dimension(125, 17));
        ButtonAgregarTema.setPreferredSize(new java.awt.Dimension(125, 17));
        ButtonAgregarTema.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAgregarTemaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 75;
        gridBagConstraints.ipady = 29;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(32, 20, 44, 0);
        Tema.add(ButtonAgregarTema, gridBagConstraints);

        AdTema.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AdTema.setForeground(new java.awt.Color(255, 0, 51));
        AdTema.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AdTema.setText("*Opcion no valida");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 13, 0, 0);
        Tema.add(AdTema, gridBagConstraints);

        Menu.addTab("Tema", Tema);

        Pregunta.setBackground(new java.awt.Color(255, 255, 255));
        Pregunta.setFocusable(false);
        Pregunta.setLayout(new java.awt.GridBagLayout());

        ComboAsignaturaS.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboAsignaturaS.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        ComboAsignaturaS.setFocusable(false);
        ComboAsignaturaS.setMaximumSize(new java.awt.Dimension(40, 20));
        ComboAsignaturaS.setMinimumSize(new java.awt.Dimension(40, 20));
        ComboAsignaturaS.setPreferredSize(new java.awt.Dimension(40, 20));
        ComboAsignaturaS.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboAsignaturaSPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
        Pregunta.add(ComboAsignaturaS, gridBagConstraints);

        ComboBoxTemas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboBoxTemas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        ComboBoxTemas.setFocusable(false);
        ComboBoxTemas.setMaximumSize(new java.awt.Dimension(40, 20));
        ComboBoxTemas.setMinimumSize(new java.awt.Dimension(40, 20));
        ComboBoxTemas.setPreferredSize(new java.awt.Dimension(40, 20));
        ComboBoxTemas.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboBoxTemasPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
        Pregunta.add(ComboBoxTemas, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 87, 116));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel19.setText("Temas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
        Pregunta.add(jLabel19, gridBagConstraints);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 87, 116));
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel21.setText("Dificultad");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 15;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
        Pregunta.add(jLabel21, gridBagConstraints);

        ComboNivel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ComboNivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Facil", "Medio", "Dificil" }));
        ComboNivel.setFocusable(false);
        ComboNivel.setMaximumSize(new java.awt.Dimension(40, 20));
        ComboNivel.setMinimumSize(new java.awt.Dimension(40, 20));
        ComboNivel.setPreferredSize(new java.awt.Dimension(40, 20));
        ComboNivel.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                ComboNivelPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.ipadx = 143;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
        Pregunta.add(ComboNivel, gridBagConstraints);

        jLabel10.setBackground(new java.awt.Color(255, 153, 51));
        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 87, 116));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Contendio de la pregunta:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.ipadx = 17;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
        Pregunta.add(jLabel10, gridBagConstraints);

        Preguntas.setColumns(20);
        Preguntas.setLineWrap(true);
        Preguntas.setRows(5);
        Preguntas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        jScrollPane3.setViewportView(Preguntas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 15;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1397;
        gridBagConstraints.ipady = 397;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 20, 0, 24);
        Pregunta.add(jScrollPane3, gridBagConstraints);

        ButtonAgregarPregunta.setText("Agregar ");
        ButtonAgregarPregunta.setColorHover(new java.awt.Color(1, 165, 228));
        ButtonAgregarPregunta.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonAgregarPregunta.setColorPressed(new java.awt.Color(2, 95, 130));
        ButtonAgregarPregunta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ButtonAgregarPregunta.setPreferredSize(new java.awt.Dimension(125, 17));
        ButtonAgregarPregunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonAgregarPreguntaActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 133;
        gridBagConstraints.ipady = 23;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(22, 20, 50, 0);
        Pregunta.add(ButtonAgregarPregunta, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 87, 116));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel20.setText(" Agregar Pregunta");
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 8;
        gridBagConstraints.ipadx = 242;
        gridBagConstraints.ipady = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Pregunta.add(jLabel20, gridBagConstraints);

        jLabel28.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(0, 87, 116));
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel28.setText("Asignatura");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 6;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
        Pregunta.add(jLabel28, gridBagConstraints);

        AdTem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AdTem.setForeground(new java.awt.Color(255, 0, 51));
        AdTem.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AdTem.setText("*Opcion no valida");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 14, 0, 0);
        Pregunta.add(AdTem, gridBagConstraints);

        AdDif.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AdDif.setForeground(new java.awt.Color(255, 0, 51));
        AdDif.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AdDif.setText("*Opcion no valida");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 9;
        gridBagConstraints.ipadx = 51;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 14, 0, 0);
        Pregunta.add(AdDif, gridBagConstraints);

        AdAsig.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AdAsig.setForeground(new java.awt.Color(255, 0, 51));
        AdAsig.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AdAsig.setText("*Opcion no valida");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 11;
        gridBagConstraints.ipady = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 14, 0, 0);
        Pregunta.add(AdAsig, gridBagConstraints);

        Menu.addTab("Pregunta", Pregunta);

        Ver.setBackground(new java.awt.Color(255, 255, 255));
        Ver.setLayout(new java.awt.GridBagLayout());

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));
        jPanel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ButtonMostrarIZQ.setBackground(new java.awt.Color(1, 128, 176));
        ButtonMostrarIZQ.setText("Mostrar ");
        ButtonMostrarIZQ.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        ButtonMostrarIZQ.setColorHover(new java.awt.Color(1, 165, 228));
        ButtonMostrarIZQ.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonMostrarIZQ.setColorPressed(new java.awt.Color(2, 95, 130));
        ButtonMostrarIZQ.setFocusPainted(false);
        ButtonMostrarIZQ.setFocusable(false);
        ButtonMostrarIZQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMostrarIZQActionPerformed(evt);
            }
        });
        jPanel11.add(ButtonMostrarIZQ, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 170, 30));

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(0, 87, 116));
        jLabel35.setText("Todas las Asignaturas");
        jPanel11.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 160, -1));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 10;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 30, 0, 0);
        Ver.add(jPanel11, gridBagConstraints);

        jPanel18.setBackground(new java.awt.Color(255, 255, 255));
        jPanel18.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Asig3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        Asig3.setFocusable(false);
        Asig3.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                Asig3PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        Asig3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Asig3ActionPerformed(evt);
            }
        });
        jPanel18.add(Asig3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 150, -1));

        tema.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
        tema.setFocusable(false);
        tema.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                temaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jPanel18.add(tema, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 150, -1));

        nivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Facil", "Medio", "Dificil" }));
        nivel.setFocusable(false);
        nivel.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                nivelPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jPanel18.add(nivel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 150, -1));

        ButtonMostrarDER.setBackground(new java.awt.Color(1, 128, 176));
        ButtonMostrarDER.setText("Mostar");
        ButtonMostrarDER.setColorBorde(null);
        ButtonMostrarDER.setColorHover(new java.awt.Color(1, 165, 228));
        ButtonMostrarDER.setColorNormal(new java.awt.Color(1, 128, 176));
        ButtonMostrarDER.setColorPressed(new java.awt.Color(2, 95, 130));
        ButtonMostrarDER.setFocusPainted(false);
        ButtonMostrarDER.setFocusable(false);
        ButtonMostrarDER.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonMostrarDERActionPerformed(evt);
            }
        });
        jPanel18.add(ButtonMostrarDER, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 170, 30));

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(0, 87, 116));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel31.setText("Temas");
        jPanel18.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 180, 20));

        jLabel32.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(0, 87, 116));
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel32.setText("Dificultad");
        jPanel18.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 60, -1));

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(0, 87, 116));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel33.setText("Asignatura");
        jPanel18.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 130, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 87, 116));
        jLabel6.setText("Preguntas");
        jPanel18.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 180, 20));

        AdAsig2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AdAsig2.setForeground(new java.awt.Color(255, 0, 51));
        AdAsig2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AdAsig2.setText("*Opcion no valida");
        jPanel18.add(AdAsig2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 160, 20));

        AdAsig3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AdAsig3.setForeground(new java.awt.Color(255, 0, 51));
        AdAsig3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AdAsig3.setText("*Opcion no valida");
        jPanel18.add(AdAsig3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 160, 20));

        AdAsig4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        AdAsig4.setForeground(new java.awt.Color(255, 0, 51));
        AdAsig4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        AdAsig4.setText("*Opcion no valida");
        jPanel18.add(AdAsig4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 160, 20));

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipady = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 0);
        Ver.add(jPanel18, gridBagConstraints);

        TablaPreg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
        TablaPreg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TablaPreg.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}

    );
    jScrollPane4.setViewportView(TablaPreg);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 5;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 1177;
    gridBagConstraints.ipady = 763;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(10, 21, 56, 22);
    Ver.add(jScrollPane4, gridBagConstraints);

    jPanel16.setBackground(new java.awt.Color(255, 255, 255));
    jPanel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    Asig2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    Asig2.setFocusable(false);
    Asig2.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            Asig2PopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    jPanel16.add(Asig2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, 150, -1));

    ButtonMostrarCENT.setBackground(new java.awt.Color(1, 128, 176));
    ButtonMostrarCENT.setText("Mostrar");
    ButtonMostrarCENT.setColorBorde(null);
    ButtonMostrarCENT.setColorHover(new java.awt.Color(1, 165, 228));
    ButtonMostrarCENT.setColorNormal(new java.awt.Color(1, 128, 176));
    ButtonMostrarCENT.setColorPressed(new java.awt.Color(2, 95, 130));
    ButtonMostrarCENT.setFocusPainted(false);
    ButtonMostrarCENT.setFocusable(false);
    ButtonMostrarCENT.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonMostrarCENTActionPerformed(evt);
        }
    });
    jPanel16.add(ButtonMostrarCENT, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 170, 30));

    jLabel30.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel30.setForeground(new java.awt.Color(0, 87, 116));
    jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel30.setText("Asignatura");
    jPanel16.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 110, -1));

    jLabel36.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel36.setForeground(new java.awt.Color(0, 87, 116));
    jLabel36.setText("Temas de la Asignatura");
    jPanel16.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 160, 20));

    AdAsig1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    AdAsig1.setForeground(new java.awt.Color(255, 0, 51));
    AdAsig1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    AdAsig1.setText("*Opcion no valida");
    jPanel16.add(AdAsig1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 160, 20));

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.ipadx = 10;
    gridBagConstraints.ipady = 10;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(30, 30, 0, 0);
    Ver.add(jPanel16, gridBagConstraints);

    ButtonGenerarInforme.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/IconoInforme.png"))); // NOI18N
    ButtonGenerarInforme.setText("Informe");
    ButtonGenerarInforme.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
    ButtonGenerarInforme.setColorHover(new java.awt.Color(1, 165, 228));
    ButtonGenerarInforme.setColorNormal(new java.awt.Color(1, 128, 176));
    ButtonGenerarInforme.setColorPressed(new java.awt.Color(2, 95, 130));
    ButtonGenerarInforme.setFocusPainted(false);
    ButtonGenerarInforme.setFocusable(false);
    ButtonGenerarInforme.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ButtonGenerarInforme.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    ButtonGenerarInforme.setMaximumSize(new java.awt.Dimension(150, 35));
    ButtonGenerarInforme.setMinimumSize(new java.awt.Dimension(150, 35));
    ButtonGenerarInforme.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonGenerarInformeActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 40;
    gridBagConstraints.ipady = 7;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(30, 31, 0, 0);
    Ver.add(ButtonGenerarInforme, gridBagConstraints);

    Menu.addTab("Ver", Ver);

    Generar.setBackground(new java.awt.Color(255, 255, 255));
    Generar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

    jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel23.setForeground(new java.awt.Color(0, 87, 116));
    jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel23.setText(" Informacion Examen");
    jLabel23.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    Generar.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 420, 36));

    jLabel25.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel25.setForeground(new java.awt.Color(0, 87, 116));
    jLabel25.setText("Titulo:");
    Generar.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 110, -1));

    evaluacion.setMaximumSize(new java.awt.Dimension(8, 20));
    evaluacion.setMinimumSize(new java.awt.Dimension(8, 20));
    evaluacion.setPreferredSize(new java.awt.Dimension(8, 20));
    Generar.add(evaluacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 100, 250, 25));

    nombre.setEditable(false);
    nombre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    nombre.setMaximumSize(new java.awt.Dimension(7, 20));
    nombre.setMinimumSize(new java.awt.Dimension(7, 20));
    nombre.setOpaque(false);
    nombre.setPreferredSize(new java.awt.Dimension(7, 20));
    Generar.add(nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 150, 250, 25));

    jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel34.setForeground(new java.awt.Color(0, 87, 116));
    jLabel34.setText("Nombre del Profesor:");
    Generar.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, 22));

    jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel4.setForeground(new java.awt.Color(0, 87, 116));
    jLabel4.setText("Semestre:");
    Generar.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, -1, -1));

    seme.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    seme.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Primero", "Segundo" }));
    seme.setFocusable(false);
    seme.setMaximumSize(new java.awt.Dimension(7, 20));
    seme.setMinimumSize(new java.awt.Dimension(7, 20));
    seme.setPreferredSize(new java.awt.Dimension(7, 20));
    seme.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            semePopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    Generar.add(seme, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 200, 250, 25));

    asigna.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
    asigna.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    asigna.setFocusable(false);
    asigna.setMaximumSize(new java.awt.Dimension(7, 20));
    asigna.setMinimumSize(new java.awt.Dimension(7, 20));
    asigna.setPreferredSize(new java.awt.Dimension(7, 20));
    asigna.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            asignaPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    asigna.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            asignaActionPerformed(evt);
        }
    });
    Generar.add(asigna, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 250, 250, 25));

    jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel24.setForeground(new java.awt.Color(0, 87, 116));
    jLabel24.setText("Asignatura:");
    Generar.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 120, -1));

    jLabel26.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel26.setForeground(new java.awt.Color(0, 87, 116));
    jLabel26.setText("Fecha:");
    Generar.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 110, -1));

    fecha.setPreferredSize(new java.awt.Dimension(7, 20));
    Generar.add(fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 250, 25));

    preg.setMaximumSize(new java.awt.Dimension(7, 20));
    preg.setMinimumSize(new java.awt.Dimension(7, 20));
    preg.setPreferredSize(new java.awt.Dimension(7, 20));
    preg.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            pregActionPerformed(evt);
        }
    });
    preg.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            pregKeyReleased(evt);
        }
    });
    Generar.add(preg, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 250, 25));

    jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel22.setForeground(new java.awt.Color(0, 87, 116));
    jLabel22.setText("Numero de preguntas:");
    Generar.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 350, 143, -1));

    AvisoNumeros.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    AvisoNumeros.setForeground(new java.awt.Color(255, 102, 51));
    AvisoNumeros.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    AvisoNumeros.setText("*El numero de preguntas es solo numerico.");
    Generar.add(AvisoNumeros, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 350, 270, -1));

    ButtonAddPreg.setText("Generar");
    ButtonAddPreg.setColorHover(new java.awt.Color(1, 165, 228));
    ButtonAddPreg.setColorNormal(new java.awt.Color(1, 128, 176));
    ButtonAddPreg.setColorPressed(new java.awt.Color(2, 95, 130));
    ButtonAddPreg.setFocusable(false);
    ButtonAddPreg.setMaximumSize(new java.awt.Dimension(125, 17));
    ButtonAddPreg.setMinimumSize(new java.awt.Dimension(125, 17));
    ButtonAddPreg.setPreferredSize(new java.awt.Dimension(125, 17));
    ButtonAddPreg.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtonAddPregActionPerformed(evt);
        }
    });
    Generar.add(ButtonAddPreg, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 450, 180, 43));

    InfoTem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    InfoTem.setForeground(new java.awt.Color(0, 87, 116));
    InfoTem.setText("Tema");
    Generar.add(InfoTem, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 560, -1, -1));

    temas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    temas.setFocusable(false);
    temas.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            temasPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    Generar.add(temas, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 590, 250, 25));

    NivInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    NivInfo.setForeground(new java.awt.Color(0, 87, 116));
    NivInfo.setText("Nivel de dificultad");
    Generar.add(NivInfo, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 630, -1, -1));

    ndif.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Facil", "Medio", "Dificil" }));
    ndif.setFocusable(false);
    ndif.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            ndifPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    Generar.add(ndif, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, 250, 25));

    generarExamen.setText("Añadir Pregunta");
    generarExamen.setColorHover(new java.awt.Color(1, 165, 228));
    generarExamen.setColorNormal(new java.awt.Color(1, 128, 176));
    generarExamen.setColorPressed(new java.awt.Color(128, 140, 207));
    generarExamen.setFocusable(false);
    generarExamen.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            generarExamenActionPerformed(evt);
        }
    });
    Generar.add(generarExamen, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 710, 180, 43));

    Separador.setText("__________________________________________________________________________________________________________");
    Generar.add(Separador, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 700, -1));

    AsAd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    AsAd.setForeground(new java.awt.Color(255, 0, 51));
    AsAd.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    AsAd.setText("*Opcion no valida");
    Generar.add(AsAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 250, 130, 20));

    NivAd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    NivAd.setForeground(new java.awt.Color(255, 0, 51));
    NivAd.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    NivAd.setText("*Opcion no valida");
    Generar.add(NivAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 660, 380, 20));

    SeAd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    SeAd.setForeground(new java.awt.Color(255, 0, 51));
    SeAd.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    SeAd.setText("*Opcion no valida");
    Generar.add(SeAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 200, 130, 20));

    TemAd.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    TemAd.setForeground(new java.awt.Color(255, 0, 51));
    TemAd.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    TemAd.setText("*Opcion no valida");
    Generar.add(TemAd, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 590, 370, 20));

    PregActual.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
    PregActual.setForeground(new java.awt.Color(0, 87, 116));
    PregActual.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    Generar.add(PregActual, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 530, 120, 20));

    Menu.addTab("Generar", Generar);

    EditAsig.setBackground(new java.awt.Color(255, 255, 255));
    EditAsig.setLayout(new java.awt.GridBagLayout());

    jLabel40.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel40.setForeground(new java.awt.Color(0, 87, 116));
    jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel40.setText(" Editor Asignatura");
    jLabel40.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 21;
    gridBagConstraints.ipadx = 283;
    gridBagConstraints.ipady = 19;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
    EditAsig.add(jLabel40, gridBagConstraints);

    NomEditAsig.setEditable(false);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 7;
    gridBagConstraints.ipadx = 174;
    gridBagConstraints.ipady = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(22, 7, 0, 0);
    EditAsig.add(NomEditAsig, gridBagConstraints);

    jLabel45.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel45.setForeground(new java.awt.Color(0, 87, 116));
    jLabel45.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel45.setText("Nombre de la asigantura:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(22, 20, 0, 0);
    EditAsig.add(jLabel45, gridBagConstraints);

    jLabel46.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel46.setForeground(new java.awt.Color(0, 87, 116));
    jLabel46.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel46.setText("Codigo de la asignatura:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.ipadx = 3;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
    EditAsig.add(jLabel46, gridBagConstraints);

    CodEditAsig.setEditable(false);
    CodEditAsig.setMaximumSize(new java.awt.Dimension(6, 20));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 7;
    gridBagConstraints.ipadx = 174;
    gridBagConstraints.ipady = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(15, 7, 0, 0);
    EditAsig.add(CodEditAsig, gridBagConstraints);

    jLabel47.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel47.setForeground(new java.awt.Color(0, 87, 116));
    jLabel47.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel47.setText("Descripcion");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.ipadx = 10;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(23, 20, 0, 0);
    EditAsig.add(jLabel47, gridBagConstraints);

    jScrollPane5.setMaximumSize(new java.awt.Dimension(430, 470));
    jScrollPane5.setMinimumSize(new java.awt.Dimension(430, 470));
    jScrollPane5.setPreferredSize(new java.awt.Dimension(430, 470));

    DesEditAsig.setEditable(false);
    DesEditAsig.setColumns(20);
    DesEditAsig.setLineWrap(true);
    DesEditAsig.setRows(5);
    DesEditAsig.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    DesEditAsig.setMaximumSize(new java.awt.Dimension(164, 94));
    DesEditAsig.setMinimumSize(new java.awt.Dimension(164, 94));
    DesEditAsig.setPreferredSize(new java.awt.Dimension(164, 94));
    jScrollPane5.setViewportView(DesEditAsig);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 21;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = -20;
    gridBagConstraints.ipady = -10;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
    EditAsig.add(jScrollPane5, gridBagConstraints);

    BottonEditAsig.setText("Editar");
    BottonEditAsig.setColorBorde(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
    BottonEditAsig.setColorHover(new java.awt.Color(255, 157, 61));
    BottonEditAsig.setColorNormal(new java.awt.Color(255, 127, 0));
    BottonEditAsig.setColorPressed(new java.awt.Color(244, 121, 0));
    BottonEditAsig.setFocusable(false);
    BottonEditAsig.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    BottonEditAsig.setMaximumSize(new java.awt.Dimension(125, 17));
    BottonEditAsig.setMinimumSize(new java.awt.Dimension(125, 17));
    BottonEditAsig.setPreferredSize(new java.awt.Dimension(125, 17));
    BottonEditAsig.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            BottonEditAsigActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
    EditAsig.add(BottonEditAsig, gridBagConstraints);

    TablaAsig.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    )
    {public boolean isCellEditable(int row, int column){return false;}}
    );
    TablaAsig.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            TablaAsigMouseClicked(evt);
        }
        public void mouseReleased(java.awt.event.MouseEvent evt) {
            TablaAsigMouseReleased(evt);
        }
    });
    TablaAsig.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            TablaAsigKeyReleased(evt);
        }
    });
    jScrollPane6.setViewportView(TablaAsig);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 21;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 7;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 947;
    gridBagConstraints.ipady = 753;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(20, 40, 56, 24);
    EditAsig.add(jScrollPane6, gridBagConstraints);

    GuaEditAsig.setText("Guardar");
    GuaEditAsig.setColorHover(new java.awt.Color(1, 165, 228));
    GuaEditAsig.setColorNormal(new java.awt.Color(1, 128, 176));
    GuaEditAsig.setColorPressed(new java.awt.Color(2, 95, 130));
    GuaEditAsig.setFocusable(false);
    GuaEditAsig.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    GuaEditAsig.setMaximumSize(new java.awt.Dimension(125, 17));
    GuaEditAsig.setMinimumSize(new java.awt.Dimension(125, 17));
    GuaEditAsig.setPreferredSize(new java.awt.Dimension(125, 17));
    GuaEditAsig.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            GuaEditAsigActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 13;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 8;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
    EditAsig.add(GuaEditAsig, gridBagConstraints);

    ElimEditAsig.setText("Eliminar");
    ElimEditAsig.setColorHover(new java.awt.Color(255, 81, 81));
    ElimEditAsig.setColorNormal(new java.awt.Color(255, 0, 0));
    ElimEditAsig.setColorPressed(new java.awt.Color(219, 0, 0));
    ElimEditAsig.setFocusable(false);
    ElimEditAsig.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ElimEditAsig.setMaximumSize(new java.awt.Dimension(125, 17));
    ElimEditAsig.setMinimumSize(new java.awt.Dimension(125, 17));
    ElimEditAsig.setPreferredSize(new java.awt.Dimension(125, 17));
    ElimEditAsig.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ElimEditAsigActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
    EditAsig.add(ElimEditAsig, gridBagConstraints);

    Menu.addTab("Asigantura", EditAsig);

    EditTem.setBackground(new java.awt.Color(255, 255, 255));
    EditTem.setLayout(new java.awt.GridBagLayout());

    jLabel48.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel48.setForeground(new java.awt.Color(0, 87, 116));
    jLabel48.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel48.setText(" Editor Tema");
    jLabel48.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridwidth = 28;
    gridBagConstraints.ipadx = 320;
    gridBagConstraints.ipady = 19;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
    EditTem.add(jLabel48, gridBagConstraints);

    jLabel49.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel49.setForeground(new java.awt.Color(0, 87, 116));
    jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel49.setText("Seleccione la Asignatura a la cual pertenece el Tema.");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 10;
    gridBagConstraints.ipadx = 4;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(18, 20, 0, 0);
    EditTem.add(jLabel49, gridBagConstraints);

    ComboAsigEdit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ComboAsigEdit.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    ComboAsigEdit.setFocusable(false);
    ComboAsigEdit.setMaximumSize(new java.awt.Dimension(20, 204));
    ComboAsigEdit.setMinimumSize(new java.awt.Dimension(20, 20));
    ComboAsigEdit.setPreferredSize(new java.awt.Dimension(20, 20));
    ComboAsigEdit.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            ComboAsigEditPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    ComboAsigEdit.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ComboAsigEditActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.ipadx = 133;
    gridBagConstraints.ipady = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
    EditTem.add(ComboAsigEdit, gridBagConstraints);

    NomEditTem.setMaximumSize(new java.awt.Dimension(6, 28));
    NomEditTem.setMinimumSize(new java.awt.Dimension(6, 28));
    NomEditTem.setPreferredSize(new java.awt.Dimension(6, 28));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 18;
    gridBagConstraints.ipadx = 250;
    gridBagConstraints.ipady = -3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 30, 0, 0);
    EditTem.add(NomEditTem, gridBagConstraints);

    jLabel50.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel50.setForeground(new java.awt.Color(0, 87, 116));
    jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel50.setText("Nombre del Tema:");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 17;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
    EditTem.add(jLabel50, gridBagConstraints);

    jLabel51.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel51.setForeground(new java.awt.Color(0, 87, 116));
    jLabel51.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel51.setText("Descripcion");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.ipadx = 20;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(30, 20, 0, 0);
    EditTem.add(jLabel51, gridBagConstraints);

    DesEditTem.setColumns(20);
    DesEditTem.setLineWrap(true);
    DesEditTem.setRows(5);
    DesEditTem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    jScrollPane7.setViewportView(DesEditTem);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 5;
    gridBagConstraints.gridwidth = 28;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 387;
    gridBagConstraints.ipady = 377;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(15, 20, 0, 0);
    EditTem.add(jScrollPane7, gridBagConstraints);

    TablaTem.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    )
    {public boolean isCellEditable(int row, int column){return false;}}

    );
    TablaTem.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseReleased(java.awt.event.MouseEvent evt) {
            TablaTemMouseReleased(evt);
        }
    });
    TablaTem.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            TablaTemKeyReleased(evt);
        }
    });
    jScrollPane8.setViewportView(TablaTem);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 28;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.gridheight = 8;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 947;
    gridBagConstraints.ipady = 753;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(20, 40, 56, 24);
    EditTem.add(jScrollPane8, gridBagConstraints);

    ButtomEditTem.setText("Editar");
    ButtomEditTem.setColorBorde(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    ButtomEditTem.setColorHover(new java.awt.Color(255, 157, 61));
    ButtomEditTem.setColorNormal(new java.awt.Color(255, 127, 0));
    ButtomEditTem.setColorPressed(new java.awt.Color(244, 121, 0));
    ButtomEditTem.setFocusable(false);
    ButtomEditTem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ButtomEditTem.setMaximumSize(new java.awt.Dimension(125, 17));
    ButtomEditTem.setMinimumSize(new java.awt.Dimension(125, 17));
    ButtomEditTem.setPreferredSize(new java.awt.Dimension(125, 17));
    ButtomEditTem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtomEditTemActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
    EditTem.add(ButtomEditTem, gridBagConstraints);

    ElimEditTem.setText("Eliminar");
    ElimEditTem.setColorHover(new java.awt.Color(255, 81, 81));
    ElimEditTem.setColorNormal(new java.awt.Color(255, 0, 0));
    ElimEditTem.setColorPressed(new java.awt.Color(219, 0, 0));
    ElimEditTem.setFocusable(false);
    ElimEditTem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ElimEditTem.setMaximumSize(new java.awt.Dimension(125, 17));
    ElimEditTem.setMinimumSize(new java.awt.Dimension(125, 17));
    ElimEditTem.setPreferredSize(new java.awt.Dimension(125, 17));
    ElimEditTem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ElimEditTemActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
    EditTem.add(ElimEditTem, gridBagConstraints);

    GuardarTem.setText("Guardar");
    GuardarTem.setColorHover(new java.awt.Color(1, 165, 228));
    GuardarTem.setColorNormal(new java.awt.Color(1, 128, 176));
    GuardarTem.setColorPressed(new java.awt.Color(2, 95, 130));
    GuardarTem.setFocusable(false);
    GuardarTem.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    GuardarTem.setMaximumSize(new java.awt.Dimension(125, 17));
    GuardarTem.setMinimumSize(new java.awt.Dimension(125, 17));
    GuardarTem.setPreferredSize(new java.awt.Dimension(125, 17));
    GuardarTem.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            GuardarTemActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 9;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 19;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 10, 0, 0);
    EditTem.add(GuardarTem, gridBagConstraints);

    AdAsig5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    AdAsig5.setForeground(new java.awt.Color(255, 0, 51));
    AdAsig5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    AdAsig5.setText("*Opcion no valida");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.ipadx = 51;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(15, 7, 0, 0);
    EditTem.add(AdAsig5, gridBagConstraints);

    Menu.addTab("Tema", EditTem);

    EditPreg.setBackground(new java.awt.Color(255, 255, 255));
    EditPreg.setBorder(javax.swing.BorderFactory.createEtchedBorder());
    EditPreg.setLayout(new java.awt.GridBagLayout());

    ComboAsigPreg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ComboAsigPreg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    ComboAsigPreg.setFocusable(false);
    ComboAsigPreg.setMaximumSize(new java.awt.Dimension(40, 20));
    ComboAsigPreg.setMinimumSize(new java.awt.Dimension(40, 20));
    ComboAsigPreg.setPreferredSize(new java.awt.Dimension(40, 20));
    ComboAsigPreg.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            ComboAsigPregPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.ipadx = 120;
    gridBagConstraints.ipady = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
    EditPreg.add(ComboAsigPreg, gridBagConstraints);

    jLabel52.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel52.setForeground(new java.awt.Color(0, 87, 116));
    jLabel52.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel52.setText("Contendio Pregunta");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 13;
    gridBagConstraints.gridwidth = 3;
    gridBagConstraints.ipadx = 3;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
    EditPreg.add(jLabel52, gridBagConstraints);

    ComboTemPreg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ComboTemPreg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "..." }));
    ComboTemPreg.setFocusable(false);
    ComboTemPreg.setMaximumSize(new java.awt.Dimension(40, 20));
    ComboTemPreg.setMinimumSize(new java.awt.Dimension(40, 20));
    ComboTemPreg.setPreferredSize(new java.awt.Dimension(40, 20));
    ComboTemPreg.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            ComboTemPregPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.gridwidth = 33;
    gridBagConstraints.ipadx = 110;
    gridBagConstraints.ipady = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 22, 0, 0);
    EditPreg.add(ComboTemPreg, gridBagConstraints);

    jLabel53.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel53.setForeground(new java.awt.Color(0, 87, 116));
    jLabel53.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel53.setText("Temas");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 7;
    gridBagConstraints.ipadx = 10;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(12, 22, 0, 0);
    EditPreg.add(jLabel53, gridBagConstraints);

    jLabel54.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel54.setForeground(new java.awt.Color(0, 87, 116));
    jLabel54.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel54.setText("Dificultad");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 56;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(12, 18, 0, 0);
    EditPreg.add(jLabel54, gridBagConstraints);

    ComboNivelA.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ComboNivelA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Facil", "Medio", "Dificil" }));
    ComboNivelA.setFocusable(false);
    ComboNivelA.setMaximumSize(new java.awt.Dimension(40, 20));
    ComboNivelA.setMinimumSize(new java.awt.Dimension(40, 20));
    ComboNivelA.setPreferredSize(new java.awt.Dimension(40, 20));
    ComboNivelA.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            ComboNivelAPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.ipadx = 20;
    gridBagConstraints.ipady = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
    EditPreg.add(ComboNivelA, gridBagConstraints);

    InfoPreg.setColumns(20);
    InfoPreg.setLineWrap(true);
    InfoPreg.setRows(5);
    InfoPreg.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    jScrollPane9.setViewportView(InfoPreg);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 14;
    gridBagConstraints.gridwidth = 56;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 387;
    gridBagConstraints.ipady = 347;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(4, 20, 0, 0);
    EditPreg.add(jScrollPane9, gridBagConstraints);

    jLabel56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    jLabel56.setForeground(new java.awt.Color(0, 87, 116));
    jLabel56.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel56.setText(" Editar Pregunta");
    jLabel56.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 87, 116)));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 56;
    gridBagConstraints.ipadx = 295;
    gridBagConstraints.ipady = 19;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 0);
    EditPreg.add(jLabel56, gridBagConstraints);

    TablaPregEdit.setModel(new javax.swing.table.DefaultTableModel(
        new Object [][] {
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null},
            {null, null, null, null}
        },
        new String [] {
            "Title 1", "Title 2", "Title 3", "Title 4"
        }
    )
    {public boolean isCellEditable(int row, int column){return false;}}

    );
    TablaPregEdit.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseReleased(java.awt.event.MouseEvent evt) {
            TablaPregEditMouseReleased(evt);
        }
    });
    TablaPregEdit.addKeyListener(new java.awt.event.KeyAdapter() {
        public void keyReleased(java.awt.event.KeyEvent evt) {
            TablaPregEditKeyReleased(evt);
        }
    });
    jScrollPane10.setViewportView(TablaPregEdit);

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 114;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridheight = 16;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.ipadx = 943;
    gridBagConstraints.ipady = 749;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(20, 38, 60, 26);
    EditPreg.add(jScrollPane10, gridBagConstraints);

    ButtomEditPreg.setText("Editar");
    ButtomEditPreg.setColorBorde(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
    ButtomEditPreg.setColorHover(new java.awt.Color(255, 157, 61));
    ButtomEditPreg.setColorNormal(new java.awt.Color(255, 127, 0));
    ButtomEditPreg.setColorPressed(new java.awt.Color(244, 121, 0));
    ButtomEditPreg.setFocusable(false);
    ButtomEditPreg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ButtomEditPreg.setMaximumSize(new java.awt.Dimension(125, 17));
    ButtomEditPreg.setMinimumSize(new java.awt.Dimension(125, 17));
    ButtomEditPreg.setPreferredSize(new java.awt.Dimension(125, 17));
    ButtomEditPreg.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButtomEditPregActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 15;
    gridBagConstraints.gridwidth = 4;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(8, 20, 0, 0);
    EditPreg.add(ButtomEditPreg, gridBagConstraints);

    ElemEditPreg.setText("Eliminar");
    ElemEditPreg.setColorHover(new java.awt.Color(255, 81, 81));
    ElemEditPreg.setColorNormal(new java.awt.Color(255, 0, 0));
    ElemEditPreg.setColorPressed(new java.awt.Color(219, 0, 0));
    ElemEditPreg.setFocusable(false);
    ElemEditPreg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    ElemEditPreg.setMaximumSize(new java.awt.Dimension(125, 17));
    ElemEditPreg.setMinimumSize(new java.awt.Dimension(125, 17));
    ElemEditPreg.setPreferredSize(new java.awt.Dimension(125, 17));
    ElemEditPreg.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ElemEditPregActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 5;
    gridBagConstraints.gridy = 15;
    gridBagConstraints.gridwidth = 16;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(8, 10, 0, 0);
    EditPreg.add(ElemEditPreg, gridBagConstraints);

    GuarEditPreg.setText("Guardar");
    GuarEditPreg.setColorHover(new java.awt.Color(1, 165, 228));
    GuarEditPreg.setColorNormal(new java.awt.Color(1, 128, 176));
    GuarEditPreg.setColorPressed(new java.awt.Color(2, 95, 130));
    GuarEditPreg.setFocusable(false);
    GuarEditPreg.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
    GuarEditPreg.setMaximumSize(new java.awt.Dimension(125, 17));
    GuarEditPreg.setMinimumSize(new java.awt.Dimension(125, 17));
    GuarEditPreg.setPreferredSize(new java.awt.Dimension(125, 17));
    GuarEditPreg.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            GuarEditPregActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 23;
    gridBagConstraints.gridy = 15;
    gridBagConstraints.gridwidth = 34;
    gridBagConstraints.ipadx = 5;
    gridBagConstraints.ipady = 29;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(8, 10, 0, 0);
    EditPreg.add(GuarEditPreg, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 12;
    gridBagConstraints.gridwidth = 14;
    gridBagConstraints.ipadx = 223;
    gridBagConstraints.ipady = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
    EditPreg.add(FechaPreg, gridBagConstraints);
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.gridwidth = 14;
    gridBagConstraints.ipadx = 244;
    gridBagConstraints.ipady = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(3, 20, 0, 0);
    EditPreg.add(EstadPreg, gridBagConstraints);

    DesButto.setBackground(new java.awt.Color(204, 204, 204));
    DesButto.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            DesButtoActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.ipadx = -33;
    gridBagConstraints.ipady = -9;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    EditPreg.add(DesButto, gridBagConstraints);

    jLabel55.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel55.setForeground(new java.awt.Color(0, 87, 116));
    jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel55.setText("Asignatura");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 16;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(12, 20, 0, 0);
    EditPreg.add(jLabel55, gridBagConstraints);

    jLabel57.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel57.setForeground(new java.awt.Color(0, 87, 116));
    jLabel57.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel57.setText("Nivel Actual");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 6;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 11;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(1, 20, 0, 0);
    EditPreg.add(jLabel57, gridBagConstraints);

    jLabel58.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel58.setForeground(new java.awt.Color(0, 87, 116));
    jLabel58.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel58.setText("Estado");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 8;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 38;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
    EditPreg.add(jLabel58, gridBagConstraints);

    ComboNivPreg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    ComboNivPreg.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "...", "Facil", "Medio", "Dificil" }));
    ComboNivPreg.setFocusable(false);
    ComboNivPreg.setMaximumSize(new java.awt.Dimension(40, 20));
    ComboNivPreg.setMinimumSize(new java.awt.Dimension(40, 20));
    ComboNivPreg.setPreferredSize(new java.awt.Dimension(40, 20));
    ComboNivPreg.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
        public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
        }
        public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
            ComboNivPregPopupMenuWillBecomeInvisible(evt);
        }
        public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 56;
    gridBagConstraints.gridy = 3;
    gridBagConstraints.ipadx = 20;
    gridBagConstraints.ipady = 5;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 18, 0, 0);
    EditPreg.add(ComboNivPreg, gridBagConstraints);

    jLabel59.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    jLabel59.setForeground(new java.awt.Color(0, 87, 116));
    jLabel59.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    jLabel59.setText("Ultimo uso");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 11;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.ipadx = 16;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(6, 20, 0, 0);
    EditPreg.add(jLabel59, gridBagConstraints);

    AdAsig6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    AdAsig6.setForeground(new java.awt.Color(255, 0, 51));
    AdAsig6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    AdAsig6.setText("*Opcion no valida");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 2;
    gridBagConstraints.gridy = 7;
    gridBagConstraints.gridwidth = 6;
    gridBagConstraints.ipadx = 11;
    gridBagConstraints.ipady = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 14, 0, 0);
    EditPreg.add(AdAsig6, gridBagConstraints);

    AdAsig11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    AdAsig11.setForeground(new java.awt.Color(255, 0, 51));
    AdAsig11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    AdAsig11.setText("*Opcion no valida");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 5;
    gridBagConstraints.ipadx = 51;
    gridBagConstraints.ipady = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
    EditPreg.add(AdAsig11, gridBagConstraints);

    AdAsig12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    AdAsig12.setForeground(new java.awt.Color(255, 0, 51));
    AdAsig12.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    AdAsig12.setText("*");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 56;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 57;
    gridBagConstraints.ipadx = 52;
    gridBagConstraints.ipady = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
    EditPreg.add(AdAsig12, gridBagConstraints);

    AdAsig14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
    AdAsig14.setForeground(new java.awt.Color(255, 0, 51));
    AdAsig14.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    AdAsig14.setText("*Opcion no valida");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 7;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 17;
    gridBagConstraints.ipadx = 11;
    gridBagConstraints.ipady = 3;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(5, 22, 0, 0);
    EditPreg.add(AdAsig14, gridBagConstraints);

    BotonDesBloqueo.setBackground(new java.awt.Color(204, 204, 204));
    BotonDesBloqueo.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
    BotonDesBloqueo.setColorBorde(javax.swing.BorderFactory.createEtchedBorder());
    BotonDesBloqueo.setColorHover(new java.awt.Color(204, 204, 204));
    BotonDesBloqueo.setColorNormal(new java.awt.Color(204, 204, 204));
    BotonDesBloqueo.setColorPressed(new java.awt.Color(204, 204, 204));
    BotonDesBloqueo.setFocusPainted(false);
    BotonDesBloqueo.setFocusable(false);
    BotonDesBloqueo.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    BotonDesBloqueo.setMaximumSize(new java.awt.Dimension(150, 35));
    BotonDesBloqueo.setMinimumSize(new java.awt.Dimension(150, 35));
    BotonDesBloqueo.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            BotonDesBloqueoActionPerformed(evt);
        }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 23;
    gridBagConstraints.gridy = 9;
    gridBagConstraints.gridwidth = 34;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.ipadx = -10;
    gridBagConstraints.ipady = -8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
    EditPreg.add(BotonDesBloqueo, gridBagConstraints);

    jLabel29.setForeground(new java.awt.Color(0, 87, 116));
    jLabel29.setText("___________________________________________________________________");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 4;
    gridBagConstraints.gridwidth = 113;
    gridBagConstraints.gridheight = 2;
    gridBagConstraints.ipadx = 8;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
    gridBagConstraints.insets = new java.awt.Insets(20, 24, 0, 0);
    EditPreg.add(jLabel29, gridBagConstraints);

    Menu.addTab("Pregunta", EditPreg);

    Fondo.add(Menu, "card2");

    getContentPane().add(Fondo, java.awt.BorderLayout.CENTER);

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void CambiarAmbienteGrafico() {
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void BarraCorrediza() {
        JScrollPane scrollPane = new JScrollPane(Fondo);
        scrollPane.setBounds(0, 0, 700, 840);
        scrollPane.setViewportView(Fondo);
        this.add(scrollPane);

    }

    public void FotoDefault() {
        Metodos met = new Metodos();
        if (met.EncontrarFoto("C:\\ProgramData\\BanQua\\Usuario.txt", usuario).equals("|¬¬|")) {
            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
            URL foto = classLoader.getResource("Imagenes/Perfil Azul.png");
            ClassLoader classLoader2 = Thread.currentThread().getContextClassLoader();
            URL foto2 = classLoader.getResource("Imagenes/Perfil Blanco.png");
            Foto1.setIcon(new ImageIcon(foto));
            Foto2.setIcon(new ImageIcon(foto2));
        } else {
            String fo = met.EncontrarFoto("C:\\ProgramData\\BanQua\\Usuario.txt", usuario);
            File file = new File(fo);
            Image foto = getToolkit().getImage(String.valueOf(file));
            foto = foto.getScaledInstance(Foto1.getWidth(), Foto1.getHeight(), Image.SCALE_DEFAULT);
            Foto1.setIcon(new ImageIcon(foto));
            Foto2.setIcon(new ImageIcon(foto));
        }
    }

    private void BottonGenrExamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonGenrExamActionPerformed
        String item;
        Separador.setVisible(false);
        NivInfo.setVisible(false);
        temas.setVisible(false);
        TemAd.setVisible(false);
        NivAd.setVisible(false);
        ndif.setVisible(false);
        InfoTem.setVisible(false);
        SeAd.setVisible(false);
        AsAd.setVisible(false);
        generarExamen.setVisible(false);
        asigna.removeAllItems();
        asigna.addItem("...");
        seme.setSelectedIndex(0);
        for (Asignatura a : profesor.getAsignaturas()) {
            item = a.getNombre();
            asigna.addItem(item);
        }
        evaluacion.setEditable(true);
        seme.setEnabled(true);
        asigna.setEnabled(true);
        fecha.setEnabled(true);
        preg.setEditable(true);
        nombre.setText(nombre_profesor);
        Metodos met = new Metodos();
        met.ReincioComboBox(seme);
        met.ReincioJTextField(evaluacion, preg);
        fecha.setCalendar(null);
        AvisoNumeros.setVisible(false);
        SubMenu.setSelectedIndex(0);
        BloqDesBoton(ButtonAddPreg, "...");
        Menu.setSelectedComponent(Generar);
    }//GEN-LAST:event_BottonGenrExamActionPerformed

    private void BottonVerInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonVerInfoActionPerformed

        SubMenu.setSelectedIndex(2);
        Menu.setSelectedComponent(Home);
    }//GEN-LAST:event_BottonVerInfoActionPerformed

    private void BottonEditInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonEditInfoActionPerformed
        SubMenu.setSelectedIndex(1);
        Menu.setSelectedComponent(Home);
    }//GEN-LAST:event_BottonEditInfoActionPerformed

    private void BottonPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonPerfilActionPerformed
        Menu.setSelectedComponent(Perfil);
        SubMenu.setSelectedIndex(0);
        jLabel41.setVisible(false);
        jLabel9.setVisible(false);
        jLabel7.setVisible(false);
        jLabel27.setVisible(false);
        DesBoton(ButtonCambio);
        ButtonCambio.setVisible(false);
        NuevaContra.setVisible(false);
        CorreoPerfil.setText(Correo);
        ValNuevaContra.setVisible(false);
        Nombre1.setEditable(false);
        Cedula1.setEditable(false);
        CorreoPerfil.setEditable(false);
        ButtomEditPreg1.setEnabled(true);
        ButtomEditPreg1.setColorHover(Color.decode("#FF9D3D"));
        ButtomEditPreg1.setColorNormal(Color.decode("#FF7F00"));
        ButtomEditPreg1.setColorPressed(Color.decode("#F47900"));
        BloqDesBoton(GuarEditPreg1, "...");
        jLabel38.setVisible(false);
        jLabel37.setVisible(false);
        jLabel60.setVisible(false);
    }//GEN-LAST:event_BottonPerfilActionPerformed

    private void BottonHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonHomeActionPerformed
        SubMenu.setSelectedIndex(0);
        Menu.setSelectedComponent(Home);
    }//GEN-LAST:event_BottonHomeActionPerformed

    private void ButtonAddPregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAddPregActionPerformed

        Date date = fecha.getDate();
        if (!evaluacion.getText().equals("") && date != null && !preg.getText().equals("")) {
            int TotalPreg = TotalPregPorAsig();
            if (TotalPreg >= Integer.parseInt(preg.getText())) {
                String tem;
                titulo = evaluacion.getText();
                nom = "Profesor: " + nombre_profesor;
                String s = (String) seme.getSelectedItem();
                if (s.equals("Primero")) {
                    sem = "10";
                } else {
                    if (s.equals("Segundo")) {
                        sem = "30";
                    }
                }
                String as = (String) asigna.getSelectedItem();;
                mat = "Asignatura De " + asigna.getSelectedItem();
                ev = "" + evaluacion.getText();
                DateFormat FormaFecha = new SimpleDateFormat("dd-MM-yyyy");
                fec = "" + FormaFecha.format(date);
                num = Integer.parseInt(preg.getText());
                Asignatura asig = null;
                for (Asignatura a : profesor.getAsignaturas()) {
                    if (a.getNombre().equals(as)) {
                        temas.removeAllItems();
                        temas.addItem("...");
                        for (Tema t : a.getTemas()) {
                            tem = t.getNombre();
                            temas.addItem(tem);
                        }
                    }
                }
                ndif.setSelectedIndex(0);
                jud = 1;
                Separador.setVisible(true);
                NivInfo.setVisible(true);
                temas.setVisible(true);
                ndif.setVisible(true);
                InfoTem.setVisible(true);
                generarExamen.setVisible(true);
                evaluacion.setEditable(false);
                seme.setEnabled(false);
                asigna.setEnabled(false);
                fecha.setEnabled(false);
                preg.setEditable(false);
                PregActual.setVisible(true);
                PregActual.setText("Pregunta #1");
            } else {
                JOptionPane.showMessageDialog(this, "El numero de preguntas establecido es mayor del que\r\n posee la asigntura escogida.", "Advertencia", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Todos los campos son obligatorios.", "Advertencia", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonAddPregActionPerformed

    private void ButtonMostrarCENTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMostrarCENTActionPerformed
        String asig = (String) Asig2.getSelectedItem();
        if (!asig.equals("...")) {
            this.MostrarTem(asig, profesor);
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado niguna asignatura", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonMostrarCENTActionPerformed

    private void ButtonMostrarIZQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMostrarIZQActionPerformed
        MostrarAsig(profesor);
    }//GEN-LAST:event_ButtonMostrarIZQActionPerformed


    private void ButtonAgregarPreguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAgregarPreguntaActionPerformed
        String Asignatura2 = (String) ComboAsignaturaS.getSelectedItem();
        String tema = (String) ComboBoxTemas.getSelectedItem();
        Metodos e = new Metodos();
        String InfoPregunta = "";
        int jor = ComboNivel.getSelectedIndex();
        InfoPregunta = Preguntas.getText();
        String total = Integer.toString(jor) + "%%%%%" + InfoPregunta + "%%%%%" + "Disponible%%%%%--------%%%%%";
        String temp;
        Asignatura a = getAsignatura(Asignatura2);
        Tema t = getTema(tema, a);
        String x = "C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + Asignatura2 + "/" + tema + "/Preguntas_" + jor + ".txt";

        if (InfoPregunta.equals("")) {
            JOptionPane.showMessageDialog(null, "No ha escrito ninguna pregunta.");
        } else {
            try {
                temp = e.concatenar(x);
                e.guardar(temp, x, total);
                Pregunta pregun = new Pregunta(InfoPregunta, jor, "Disponible", "--------");
                profesor.getAsignaturas().get(ComboAsignaturaS.getSelectedIndex() - 1).getTemas().get(ComboBoxTemas.getSelectedIndex() - 1).getPreguntas(jor).add(pregun);
                JOptionPane.showMessageDialog(null, "Pregunta añadida exitosamente.");
                BottonPreguntas.doClick();

            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_ButtonAgregarPreguntaActionPerformed

    private void ButtonAgregarTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonAgregarTemaActionPerformed
        String tema = NombreDelTema.getText();
        String r = (String) ComboAsignatura.getSelectedItem();
        if (!tema.equals("")) {
            if (!r.equals("...")) {
                boolean verifexis = profesor.VerificarTema(tema, r, DesNoNull(DescripcionTema.getText()));
                if (verifexis == false) {

                    Metodos met = new Metodos();
                    String x = "C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + r + "/Temas.txt";
                    String temp;
                    try {
                        temp = met.concatenar(x);
                        met.guardar(temp, x, tema + "%%%%%" + DesNoNull(DescripcionTema.getText()) + "%%%%%");
                        File carpeta = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + r + "/" + tema);
                        carpeta.mkdirs();
                        File fl = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + r + "/" + tema + "/Preguntas_1.txt");
                        fl.createNewFile();
                        File f2 = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + r + "/" + tema + "/Preguntas_2.txt");
                        f2.createNewFile();
                        File f3 = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + r + "/" + tema + "/Preguntas_3.txt");
                        f3.createNewFile();

                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    profesor.AddTema(tema, r, DesNoNull(DescripcionTema.getText()));
                    JOptionPane.showMessageDialog(null, "Tema añadido exitosamente.");
                    BottonTemas.doClick();
                }
            } else {
                JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna Asignatura.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "No ha escrito el nombre del Tema.");
        }
    }//GEN-LAST:event_ButtonAgregarTemaActionPerformed

    private void AgregarDescripcionTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarDescripcionTemaActionPerformed
        if (this.AgregarDescripcionTema.isSelected() == true) {
            this.DescripcionTema.setEditable(true);
        } else {
            this.DescripcionTema.setEditable(false);
        }
    }//GEN-LAST:event_AgregarDescripcionTemaActionPerformed

    private void addAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAsigActionPerformed
        String Asigna = NombreDelaAsignatura.getText();
        String codigo = codMat.getText();
        boolean verifexis = profesor.VerificarAsignatura(Asigna, codigo);
        if (verifexis == false) {
            if (!Asigna.equals("") && !codigo.equals("")) {
                try {
                    Metodos met = new Metodos();
                    String x = "C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/Asignatura.txt";
                    String temp;
                    temp = met.concatenar(x);
                    System.out.println("M"+temp+"M");
                    File carpeta = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + Asigna);
                    carpeta.mkdirs();
                    File fichero = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + Asigna + "/Temas.txt");
                    fichero.createNewFile();
                    Asignatura a = new Asignatura(Asigna, DesNoNull(Descripcion.getText()), codigo);
                    profesor.AddAsignatura(a);
                    met.guardar(temp, x, Asigna + "%%%%%" + codigo + "%%%%%" + DesNoNull(Descripcion.getText()) + "%%%%%");
                    JOptionPane.showMessageDialog(null, "Asignatura creada satisfactoriamente.");
                    BottonAsignatura.doClick();
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }

            } else {
                JOptionPane.showMessageDialog(null, "Asignatura y Codigo son campos obligatorios.");
            }
        }
    }//GEN-LAST:event_addAsigActionPerformed

    //Metodo Express 3
    //Descripcion null o "" volverla " " esto con el fin de que no interfiera con el split
    String DesNoNull(String s) {
        if (s.equals("") || s == null) {
            s = " ";
        }
        return s;
    }

    public void recursiveDelete(File file) {
        //to end the recursive loop
        if (!file.exists()) {
            return;
        }

        //if directory, go inside and call recursively
        if (file.isDirectory()) {
            for (File f : file.listFiles()) {
                //call recursively
                recursiveDelete(f);
            }
        }
        file.delete();
    }

    private void move(File toDir, File currDir) {
        for (File file : currDir.listFiles()) {
            if (file.isDirectory()) {
                File Direc = new File(toDir, file.getName());
                Direc.mkdirs();
                move(Direc, file);
            } else {
                File Nuevo = new File(toDir, file.getName());
                //file.renameTo(Nuevo);
                Metodos met = new Metodos();
                try {
                    String Informacion = met.LeerArchivo(file.getPath());
                    met.guardar(Informacion, Nuevo.getPath(), "");
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }

            }
        }
    }

    private void AgregarDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarDescripcionActionPerformed
        if (this.AgregarDescripcion.isSelected() == true) {
            this.Descripcion.setEditable(true);
        } else {
            this.Descripcion.setEditable(false);
        }
    }//GEN-LAST:event_AgregarDescripcionActionPerformed

    private void generarExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarExamenActionPerformed

        if (jud == num) {
            String preguntatemp = Aleatorio();
            if (preguntatemp != null) {
                PregActual.setText("Pregunta #" + (jud));
                person.add(preguntatemp);
                XWPFDocument documento = new XWPFDocument();

                //Declaramos el titulo y le asignamos algunas propiedades
                XWPFParagraph titulo_doc = documento.createParagraph();
                titulo_doc.setAlignment(ParagraphAlignment.CENTER);
                titulo_doc.setVerticalAlignment(TextAlignment.TOP);

                //Declaramos el parrafo y le asignamos algunas propiedades
                XWPFParagraph parrafo = documento.createParagraph();
                parrafo.setAlignment(ParagraphAlignment.BOTH);
                XWPFRun r1 = titulo_doc.createRun();
                r1.setBold(true);
                r1.setText("Universidad del Norte");
                r1.setFontFamily("Times New Roman");
                r1.setFontSize(14);
                r1.setTextPosition(11);
                r1.addBreak();

                XWPFRun r2 = titulo_doc.createRun();
                r2.setBold(true);
                r2.setText(mat);
                r2.setFontFamily("Times New Roman");
                r2.setFontSize(14);
                r2.setTextPosition(11);
                r2.addBreak();

                XWPFRun r3 = titulo_doc.createRun();
                r3.setBold(true);
                r3.setText(titulo);
                r3.setFontFamily("Times New Roman");
                r3.setFontSize(14);
                r3.setTextPosition(11);
                r3.addBreak();

                XWPFRun r5 = titulo_doc.createRun();
                r5.setBold(true);
                r5.setText(fec);
                r5.setFontFamily("Times New Roman");
                r5.setFontSize(14);
                r5.setTextPosition(11);
                r5.addBreak();

                XWPFRun r6 = parrafo.createRun();
                r6.setText(nom);
                r6.setFontSize(12);
                r6.addCarriageReturn();
                r6.addBreak();
                //Para el parrafo
                XWPFRun ri = parrafo.createRun();
                ri.setText("Nombre: ________________________________________Código: ________________");
                ri.setFontSize(12);
                ri.addCarriageReturn();
                ri.addBreak();
                int i = 0;
                while (i < person.size()) {
                    String[] SoloCont = person.get(i).split("/@/");
                    String preg = "" + SoloCont[0];
                    String[] SepaPregunta = preg.split("\n");
                    XWPFRun r7 = parrafo.createRun();
                    r7.setText((i + 1) + ".  " + SepaPregunta[0]);
                    r7.setFontSize(12);
                    r7.addCarriageReturn();
                    r7.addBreak();
                    int coni = 1;
                    while (coni < SepaPregunta.length) {
                        r7.setText(SepaPregunta[coni]);
                        r7.setFontSize(12);
                        r7.addCarriageReturn();
                        r7.addBreak();
                        coni++;
                    }
                    i++;

                }

                JFileChooser f = new JFileChooser();
                FileNameExtensionFilter filtroImagen = new FileNameExtensionFilter("Documento de Word", "docx");
                f.setFileFilter(filtroImagen);
                f.setDialogTitle("Guadar Examen");
                f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
                f.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
                int opcion = f.showSaveDialog(this);
                if (opcion != 1) {
                    try {
                        SobreEscribir(person);
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    File guarda = f.getSelectedFile();
                    if (opcion == JFileChooser.APPROVE_OPTION) {

                        FileOutputStream word = null;
                        try {
                            word = new FileOutputStream(guarda + ".docx");
                            documento.write(word);
                            word.close();
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        JOptionPane.showMessageDialog(null,
                                "El examen se ha generado exitosamente.",
                                "Información", JOptionPane.INFORMATION_MESSAGE);
                    }

                } else {
                    JOptionPane.showMessageDialog(null,
                            "El examen No se ha generado.",
                            "Información", JOptionPane.INFORMATION_MESSAGE);
                }

                /*evaluacion.setEditable(true);
                evaluacion.setText("");
                seme.setEnabled(true);
                seme.setSelectedIndex(0);
                asigna.setEnabled(true);
                asigna.setSelectedIndex(0);
                fecha.setEnabled(true);
                fecha.setDate(null);
                preg.setEditable(true);
                preg.setText("");*/
                PregActual.setVisible(false);
                BottonGenrExam.doClick();
            }

        } else {
            String preguntatemp = Aleatorio();
            if (preguntatemp != null) {
                person.add(preguntatemp);
                jud++;
                PregActual.setText("Pregunta #" + (jud));
                temas.setSelectedIndex(0);
                ndif.setSelectedIndex(0);

            } else {

            }
        }


    }//GEN-LAST:event_generarExamenActionPerformed

    private void ButtonMostrarDERActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonMostrarDERActionPerformed
        // TODO add your handling code here:
        String x = (String) this.Asig3.getSelectedItem();
        String y = (String) this.tema.getSelectedItem();
        String z = String.valueOf(this.nivel.getSelectedIndex());
        this.MostrarPreg(x, y, z, profesor);
    }//GEN-LAST:event_ButtonMostrarDERActionPerformed

    private void pregKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pregKeyReleased
        Metodos met = new Metodos();
        System.out.println("entre " + preg.getText());
        this.AvisoNumeros.setVisible(false);
        if (met.confNum(this.preg.getText())) {
            this.AvisoNumeros.setVisible(false);
            BloqDesBoton(ButtonAddPreg, "");
        } else {
            BloqDesBoton(ButtonAddPreg, "...");
            this.AvisoNumeros.setVisible(true);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_pregKeyReleased

    private void Asig2PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_Asig2PopupMenuWillBecomeInvisible
        if ("...".equals(Asig2.getSelectedItem())) {
            AdAsig1.setVisible(true);
            AdAsig1.setText("*Opcion no valida");
        } else {
            String TempAsigna = (String) Asig2.getSelectedItem();
            Metodos met = new Metodos();
            int h = 0;
            try {
                h = met.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + TempAsigna + "/Temas.txt", this.tema, h);
                if (h < 1) {
                    AdAsig1.setVisible(true);
                    AdAsig1.setText("*Asignatura sin Temas");
                    BloqDesBoton(ButtonMostrarCENT, "...");
                } else {
                    AdAsig1.setVisible(false);
                    BloqDesBoton(ButtonMostrarCENT, " ");
                }
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        BloqDesBoton(ButtonMostrarCENT, (String) Asig2.getSelectedItem());
    }//GEN-LAST:event_Asig2PopupMenuWillBecomeInvisible

    private void Asig3PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_Asig3PopupMenuWillBecomeInvisible
        String TempAsigna = (String) Asig3.getSelectedItem();
        tema.setEnabled(false);
        tema.setSelectedIndex(0);
        nivel.setEnabled(false);
        nivel.setSelectedIndex(0);
        AdAsig3.setVisible(false);
        AdAsig4.setVisible(false);
        if (!TempAsigna.equals("...")) {
            tema.setEnabled(true);
            Metodos met = new Metodos();
            this.tema.removeAllItems();
            this.tema.addItem("...");
            AdAsig2.setVisible(false);
            int h = 0;
            try {
                h = met.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + TempAsigna + "/Temas.txt", this.tema, h);
                if (h < 1) {
                    AdAsig2.setVisible(true);

                    AdAsig2.setText("*Asignatura sin Temas");
                    tema.setEnabled(false);
                    tema.setSelectedIndex(0);
                }
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            AdAsig2.setVisible(true);
            AdAsig2.setText("*Opcion no valida");
        }
        BloqDesBoton(ButtonMostrarDER, "...");
    }//GEN-LAST:event_Asig3PopupMenuWillBecomeInvisible

    private void temaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_temaPopupMenuWillBecomeInvisible
        String TempTema = (String) tema.getSelectedItem();
        nivel.setSelectedItem(0);
        AdAsig4.setVisible(false);
        if ("...".equals(TempTema)) {
            AdAsig3.setVisible(true);
            nivel.setEnabled(false);
        } else {
            AdAsig3.setVisible(false);
            nivel.setEnabled(true);
        }
        BloqDesBoton(ButtonMostrarDER, "...");
    }//GEN-LAST:event_temaPopupMenuWillBecomeInvisible

    private void ComboAsignaturaSPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboAsignaturaSPopupMenuWillBecomeInvisible
        String TempAsigna = (String) ComboAsignaturaS.getSelectedItem();
        if (!TempAsigna.equals("...")) {
            ComboBoxTemas.setEnabled(true);
            ComboNivel.setEnabled(false);
            Preguntas.setEnabled(false);
            AdAsig.setVisible(false);
            Metodos met = new Metodos();
            this.ComboBoxTemas.removeAllItems();
            this.ComboBoxTemas.addItem("...");
            int h = 0;
            try {
                h = met.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + TempAsigna + "/Temas.txt", this.ComboBoxTemas, h);
                if (h < 1) {
                    AdAsig.setVisible(true);
                    AdAsig.setText("*Asignatura sin Temas");

                }
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            AdAsig.setVisible(true);
            AdAsig.setText("*Opcion no valida");
            ComboBoxTemas.setEnabled(false);
            ComboNivel.setEnabled(false);
            Preguntas.setEnabled(false);
            ButtonAgregarPregunta.setEnabled(false);
        }
        BloqDesBoton(ButtonAgregarPregunta, "...");
    }//GEN-LAST:event_ComboAsignaturaSPopupMenuWillBecomeInvisible

    private void BottonTemasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonTemasActionPerformed
        String item = "";
        ComboAsignatura.removeAllItems();
        ComboAsignatura.addItem("...");
        for (Asignatura a : profesor.getAsignaturas()) {
            item = a.getNombre();
            ComboAsignatura.addItem(item);
        }
        Metodos met = new Metodos();
        met.ReincioJTextField(NombreDelTema);
        this.DescripcionTema.setEditable(false);
        DescripcionTema.setText("");
        AgregarDescripcionTema.setSelected(false);
        AdTema.setVisible(false);
        BloqDesBoton(ButtonAgregarTema, "...");
        Menu.setSelectedComponent(Tema);        // TODO add your handling code here:
    }//GEN-LAST:event_BottonTemasActionPerformed

    private void BottonPreguntasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonPreguntasActionPerformed
        int h = 0;
        ComboAsignaturaS.removeAllItems();
        ComboAsignaturaS.addItem("...");
        Metodos met = new Metodos();
        try {
            h = met.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/Asignatura.txt", ComboAsignaturaS, h);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        met.ReincioComboBox(ComboBoxTemas, ComboNivel);
        met.ReincioTextArea(Preguntas);
        Menu.setSelectedComponent(Pregunta);
        ComboBoxTemas.setEnabled(false);
        ComboNivel.setEnabled(false);
        BloqDesBoton(ButtonAgregarPregunta, "...");
        AdAsig.setVisible(false);
        AdTem.setVisible(false);
        AdDif.setVisible(false);
    }//GEN-LAST:event_BottonPreguntasActionPerformed

    private void BottonAsignaturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonAsignaturaActionPerformed
        Metodos met = new Metodos();
        met.ReincioJTextField(NombreDelaAsignatura, codMat);
        met.ReincioTextArea(Descripcion);
        AgregarDescripcion.setSelected(false);
        Menu.setSelectedComponent(Asignatura);
    }//GEN-LAST:event_BottonAsignaturaActionPerformed

    private void asignaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_asignaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_asignaActionPerformed

    private void NombreDelTemaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreDelTemaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreDelTemaActionPerformed

    private void ButtonCambioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCambioActionPerformed
        if (!this.NuevaContra.getText().equals("") && !this.ValNuevaContra.getText().equals("")) {
            FileWriter fw = null;
            try {
                Metodos met = new Metodos();
                ArrayList<String[]> registros = met.LeerArchivoDaniel("C:\\ProgramData\\BanQua\\Usuario.txt");
                String nombre;
                String Total = "";
                for (int i = 0; i < registros.size(); i++) {
                    nombre = registros.get(i)[2];
                    if (nombre.equals(Usuario1.getText())) {
                        if ((registros.get(i)[0]).equals(Nombre1.getText())) {
                            Total = Total + registros.get(i)[0] + "%%%%%" + registros.get(i)[1] + "%%%%%" + registros.get(i)[2] + "%%%%%" + NuevaContra.getText() + "%%%%%" + registros.get(i)[4] + "%%%%%" + registros.get(i)[5] + "\r\n";
                        }
                    } else {
                        Total = Total + registros.get(i)[0] + "%%%%%" + registros.get(i)[1] + "%%%%%" + registros.get(i)[2] + "%%%%%" + registros.get(i)[3] + "%%%%%" + registros.get(i)[4] + "%%%%%" + registros.get(i)[5] + "\r\n";
                    }
                }
                File file = new File("C:\\ProgramData\\BanQua\\Usuario.txt");
                fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(AES.encrypt(Total, "BanQuaAES"));
                bw.close();
                fw.close();
                JOptionPane.showMessageDialog(this, "Cambio Exitoso", "Cambio Contraseña", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Algun campo se encuentra vacio.", "Cambio Contraseña", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_ButtonCambioActionPerformed

    private void ValNuevaContraKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValNuevaContraKeyPressed

    }//GEN-LAST:event_ValNuevaContraKeyPressed

    private void ButtonGuardarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGuardarFotoActionPerformed

        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
        URL foto = classLoader.getResource("Imagenes/Perfil Azul.png");
        ClassLoader classLoader2 = Thread.currentThread().getContextClassLoader();
        URL foto2 = classLoader.getResource("Imagenes/Perfil Blanco.png");
        Foto1.setIcon(new ImageIcon(foto));
        Foto2.setIcon(new ImageIcon(foto2));
        try {
            CambiarImagen(Usuario1.getText(), Nombre1.getText(), "$");
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_ButtonGuardarFotoActionPerformed

    private void BottonEditFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonEditFotoActionPerformed
        JFileChooser archivo;
        archivo = new JFileChooser();
        archivo.setFileSelectionMode(0);
        FileNameExtensionFilter filtroImagen = new FileNameExtensionFilter("JPG,PNG", "jpg", "png");
        archivo.setFileFilter(filtroImagen);
        archivo.setDialogTitle("Buscar Imagen");
        if (!archivo.equals(null)) {
            archivo.addChoosableFileFilter(null);
            File ruta = new File("C:\\Users\\elspo\\Downloads");
            archivo.setCurrentDirectory(ruta);
            int ventana = archivo.showOpenDialog(null);
            if (ventana == JFileChooser.APPROVE_OPTION) {
                File file = archivo.getSelectedFile();
                Image foto = getToolkit().getImage(String.valueOf(file));
                foto = foto.getScaledInstance(Foto1.getWidth(), Foto1.getHeight(), Image.SCALE_DEFAULT);
                Foto1.setIcon(new ImageIcon(foto));
                Foto2.setIcon(new ImageIcon(foto));
                try {
                    CambiarImagen(Usuario1.getText(), Nombre1.getText(), file.getAbsolutePath());
                } catch (IOException ex) {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_BottonEditFotoActionPerformed

    private void BottonCamContraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonCamContraActionPerformed
        if (jLabel41.isVisible() == true) {
            jLabel41.setVisible(false);
            jLabel9.setVisible(false);
            jLabel7.setVisible(false);
            jLabel27.setVisible(false);
            ButtonCambio.setVisible(false);
            NuevaContra.setVisible(false);
            ValNuevaContra.setVisible(false);
            Nombre1.setEditable(true);
            Cedula1.setEditable(true);
            CorreoPerfil.setEditable(true);
            ButtomEditPreg1.setEnabled(true);
            ButtomEditPreg1.setColorHover(Color.decode("#FF9D3D"));
            ButtomEditPreg1.setColorNormal(Color.decode("#FF7F00"));
            ButtomEditPreg1.setColorPressed(Color.decode("#F47900"));
            BloqDesBoton(GuarEditPreg1, "...");
        } else {
            jLabel41.setVisible(true);
            jLabel9.setVisible(true);
            jLabel7.setVisible(true);
            jLabel27.setVisible(false);
            ButtonCambio.setVisible(true);
            NuevaContra.setVisible(true);
            ValNuevaContra.setVisible(true);
            NuevaContra.setText("");
            ValNuevaContra.setText("");
            Nombre1.setEditable(false);
            Cedula1.setEditable(false);
            CorreoPerfil.setEditable(false);
            BloqDesBoton(GuarEditPreg1, "...");
            BloqDesBoton(ButtomEditPreg1, "...");
        }
    }//GEN-LAST:event_BottonCamContraActionPerformed

    private void ButtonGenerarInformeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonGenerarInformeActionPerformed

        HSSFWorkbook informe = new HSSFWorkbook();
        for (Asignatura a : profesor.getAsignaturas()) {
            // Se crea una hoja dentro del libro
            HSSFSheet hoja = informe.createSheet(a.getNombre());
            // Se crea una fila dentro de la hoja
            HSSFRow fila = hoja.createRow(0);
            String[] titulos = {"Tema", "Pregunta", "Nivel", "Estado", "Fecha ultimo uso"};
            CellStyle style = informe.createCellStyle();
            style.setFillForegroundColor(IndexedColors.AQUA.getIndex()); // Indicamos que tendra un fondo azul aqua
            style.setFillPattern(FillPatternType.SOLID_FOREGROUND);
            for (int i = 0; i < titulos.length; i++) {
                Cell celda = fila.createCell(i); // Creamos una celda en esa fila, en la posicion indicada por el contador del ciclo
                // Indicamos el estilo que deseamos 
                celda.setCellStyle(style);
                celda.setCellValue(titulos[i]);
            }
            int j = 1;
            String[] linea = new String[6];
            for (Tema t : a.getTemas()) {
                linea[0] = t.getNombre();
                for (Pregunta p : t.getPreguntas(1)) {
                    linea[1] = p.getContenido();
                    linea[2] = Integer.toString(p.getNivel());
                    linea[3] = p.getEstado();
                    linea[4] = p.getFecha();
                    fila = hoja.createRow(j);
                    for (int k = 0; k < linea.length; k++) {
                        Cell celda = fila.createCell(k);
                        celda.setCellValue(linea[k]);
                    }
                    j++;
                }
                for (Pregunta p : t.getPreguntas(2)) {
                    linea[1] = p.getContenido();
                    linea[2] = Integer.toString(p.getNivel());
                    linea[3] = p.getEstado();
                    linea[4] = p.getFecha();
                    fila = hoja.createRow(j);
                    for (int k = 0; k < linea.length; k++) {
                        Cell celda = fila.createCell(k);
                        celda.setCellValue(linea[k]);
                    }
                    j++;
                }
                for (Pregunta p : t.getPreguntas(3)) {
                    linea[1] = p.getContenido();
                    linea[2] = Integer.toString(p.getNivel());
                    linea[3] = p.getEstado();
                    linea[4] = p.getFecha();
                    fila = hoja.createRow(j);
                    for (int k = 0; k < linea.length; k++) {
                        Cell celda = fila.createCell(k);
                        celda.setCellValue(linea[k]);
                    }
                    j++;
                }
            }
        }

        JFileChooser f = new JFileChooser();
        FileNameExtensionFilter filtroImagen = new FileNameExtensionFilter("Documento de Excel", "xls");
        f.setFileFilter(filtroImagen);
        f.setDialogTitle("Guardar Informe");
        if (!f.equals(null)) {
            f.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
            f.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
            int opcion = f.showSaveDialog(this);
            File guarda = f.getSelectedFile();
            File guardar = new File(f.getSelectedFile().getAbsolutePath() + ".xls");
            System.out.println(guardar.getAbsolutePath());
            boolean Sobre = false;  //Esto se hace con el fin de saber si se desea sobreescribir un informe ya creado
            while (Sobre == false) {
                if (guardar.exists() == false) {
                    if (opcion == JFileChooser.APPROVE_OPTION) {
                        FileOutputStream excel = null;
                        try {
                            excel = new FileOutputStream(guarda + ".xls");
                            informe.write(excel);
                            excel.close();
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        } catch (IOException ex) {
                            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        JOptionPane.showMessageDialog(null,
                                "El informe se ha generado exitosamente");
                        Sobre = true;
                    }
                } else {
                    int n = JOptionPane.showConfirmDialog(null, "Ya se encuentra un informe con el mismo nombre.\r\n Desea Sobreescribirlo?", "Información", JOptionPane.YES_NO_OPTION);
                    if (n == JOptionPane.NO_OPTION) {
                        Sobre = true;
                    } else {
                        guardar.delete();
                    }
                }
            }
        }
    }//GEN-LAST:event_ButtonGenerarInformeActionPerformed

    private void PanelMenuComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_PanelMenuComponentShown

    }//GEN-LAST:event_PanelMenuComponentShown

    private void PanelMenuComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_PanelMenuComponentResized

    }//GEN-LAST:event_PanelMenuComponentResized

    private void BottonEditAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonEditAsigActionPerformed
        NomEditAsig.setEditable(true);
        CodEditAsig.setEditable(true);
        DesEditAsig.setEditable(true);
        BloqDesBoton(GuaEditAsig, "");
    }//GEN-LAST:event_BottonEditAsigActionPerformed

    private void TablaAsigKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaAsigKeyReleased
        String[] h = new String[3];

        for (int i = 0; i < 3; i++) {
            if (TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), i) != null) {
                h[i] = TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }
        BloqDesBoton(GuaEditAsig, "...");
        BloqDesBotonEdit(ElimEditAsig, BottonEditAsig, "");
        NomEditAsig.setText(h[0]);
        CodEditAsig.setText(h[1]);
        DesEditAsig.setText(h[2]);        // TODO add your handling code here:
    }//GEN-LAST:event_TablaAsigKeyReleased

    private void TablaAsigMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaAsigMouseClicked

    }//GEN-LAST:event_TablaAsigMouseClicked

    private void GuaEditAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuaEditAsigActionPerformed
        if (!NomEditAsig.equals("") && !CodEditAsig.equals("")) {
            Metodos met = new Metodos();
            int i = 0;
            String Total = "";
            for (Asignatura asignatura : profesor.getAsignaturas()) {
                if (asignatura.getNombre().equals(TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), 0).toString())) {
                    File Viejo = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + asignatura.getNombre());
                    File Nuevo = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + NomEditAsig.getText());
                    profesor.getAsignaturas().get(i).setCodigo(CodEditAsig.getText());
                    profesor.getAsignaturas().get(i).setDescripcion(DesNoNull(DesEditAsig.getText()));
                    profesor.getAsignaturas().get(i).setNombre(NomEditAsig.getText());
                    Total = Total + NomEditAsig.getText() + "%%%%%" + CodEditAsig.getText() + "%%%%%" + DesNoNull(DesEditAsig.getText()) + "%%%%%" + "\r\n";
                    if (!Viejo.equals(Nuevo)) {
                        move(Nuevo, Viejo);
                        recursiveDelete(Viejo);
                    }
                } else {
                    Total = Total + asignatura.getNombre() + "%%%%%" + asignatura.getCodigo() + "%%%%%" + asignatura.getDescripcion() + "%%%%%" + "\r\n";
                }
                i++;
            }
            File file = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/Asignatura.txt");
            FileWriter fw;
            try {
                fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(AES.encrypt(Total, "BanQuaAES"));
                bw.close();
                fw.close();
                MostrarAsig(profesor);
                NomEditAsig.setText("");
                CodEditAsig.setText("");
                DesEditAsig.setText("");
                BloqDesBoton(GuaEditAsig, "...");
                BloqDesBotonEdit(ElimEditAsig, BottonEditAsig, "...");
                JOptionPane.showMessageDialog(null, "Cambios guardados exitosamente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                NomEditAsig.setEditable(false);
                CodEditAsig.setEditable(false);
                DesEditAsig.setEditable(false);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            profesor = new Profesor();
        } else {
            JOptionPane.showMessageDialog(null, "El nombre de la Asignatura y el codigo son obligatorios.", "Alerta", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_GuaEditAsigActionPerformed

    private void ElimEditAsigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElimEditAsigActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Desea eliminar la Asignatura Seleccionada?", "Advertencia", JOptionPane.OK_CANCEL_OPTION, JOptionPane.CANCEL_OPTION);
        if (x == 0) {
            NomEditAsig.setText("");
            CodEditAsig.setText("");
            DesEditAsig.setText("");
            Metodos met = new Metodos();
            String nombreasig = "";
            String Total = "";
            int cont = 0;
            Asignatura asign = null;
            for (Asignatura asignatura : profesor.getAsignaturas()) {
                if (asignatura.getNombre().equals(TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), 0).toString())) {
                    asign = asignatura;
                    nombreasig = asignatura.getNombre();
                } else {
                    Total = Total + asignatura.getNombre() + "%%%%%" + asignatura.getCodigo() + "%%%%%" + asignatura.getDescripcion() + "%%%%%" + "\r\n";
                }
            }

            profesor.getAsignaturas().remove(asign);
            asign = null;
            try {

                File file = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/Asignatura.txt");
                FileWriter fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(AES.encrypt(Total, "BanQuaAES"));
                bw.close();
                fw.close();
                MostrarAsig(profesor);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            File fle = new File("C:\\ProgramData\\BanQua\\Profesor" + File.separator + usuario + File.separator + nombreasig);
            System.out.println(fle);
            recursiveDelete(fle);
            BloqDesBoton(GuaEditAsig, "...");
            BloqDesBotonEdit(ElimEditAsig, BottonEditAsig, "...");
            JOptionPane.showMessageDialog(null, "   La Asignatura ha sido eliminada.");
        }

    }//GEN-LAST:event_ElimEditAsigActionPerformed


    private void ButtomEditTemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtomEditTemActionPerformed
        NomEditTem.setEditable(true);
        DesEditTem.setEditable(true);
        BloqDesBoton(GuardarTem, "");
    }//GEN-LAST:event_ButtomEditTemActionPerformed

    private void ElimEditTemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElimEditTemActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Desea eliminar el Tema seleccionado?", "Advertencia", JOptionPane.OK_CANCEL_OPTION, JOptionPane.CANCEL_OPTION);
        if (x == 0) {
            Metodos met = new Metodos();
            String Total = "";
            Asignatura asignatura = profesor.getAsignaturas().get(ComboAsigEdit.getSelectedIndex() - 1);
            Tema temactual = asignatura.getTemas().get(TablaTem.getSelectedRow());
            for (Tema tema : asignatura.getTemas()) {
                if (tema.getNombre().equals(TablaTem.getModel().getValueAt(TablaTem.getSelectedRow(), 0).toString())) {
                } else {
                    Total = Total + tema.getNombre() + "%%%%%" + tema.getDescripcion() + "%%%%%" + "\r\n";
                }

            }

            asignatura.getTemas().remove(temactual);
            try {

                File file = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + ComboAsigEdit.getSelectedItem() + "/Temas.txt");
                FileWriter fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(AES.encrypt(Total, "BanQuaAES"));
                bw.close();
                fw.close();
                MostrarTem((String) ComboAsigEdit.getSelectedItem(), profesor);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            File fle = new File("C:\\ProgramData\\BanQua\\Profesor" + File.separator + usuario + File.separator + ComboAsigEdit.getSelectedItem() + File.separator + temactual.getNombre());
            recursiveDelete(fle);
            NomEditTem.setText("");
            NomEditTem.setEditable(false);
            DesEditTem.setText("");
            DesEditTem.setEditable(false);
            ComboAsigEdit.setSelectedIndex(0);
            JOptionPane.showMessageDialog(null, "El Tema ha sido eliminado.");
            BloqDesBoton(GuardarTem, "...");
            BloqDesBotonEdit(ElimEditTem, ButtomEditTem, "...");
            modelo.setColumnCount(0);
            modelo.setRowCount(0);
            sw1 = true;
            sw2 = true;
            sw3 = true;
        }
    }//GEN-LAST:event_ElimEditTemActionPerformed

    private void GuardarTemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarTemActionPerformed
        if (!NomEditTem.equals("")) {
            Metodos met = new Metodos();
            String Total = "";
            Asignatura asignatura = profesor.getAsignaturas().get(ComboAsigEdit.getSelectedIndex() - 1);
            Tema temactual = asignatura.getTemas().get(TablaTem.getSelectedRow());
            for (Tema tema : asignatura.getTemas()) {
                if (tema.getNombre().equals(temactual.getNombre())) {
                    File Viejo = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + asignatura.getNombre() + "/" + temactual.getNombre());
                    temactual.setNombre(NomEditTem.getText());
                    temactual.setDescripcion(DesNoNull(DesEditTem.getText()));
                    Total = Total + NomEditTem.getText() + "%%%%%" + DesNoNull(DesEditTem.getText()) + "%%%%%" + "\r\n";
                    File Nuevo = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + asignatura.getNombre() + "/" + NomEditTem.getText());
                    if (!Viejo.equals(Nuevo)) {
                        Nuevo.mkdirs();
                        move(Nuevo, Viejo);
                        recursiveDelete(Viejo);
                        /*try {
                        recursiveDelete(Viejo);
                        Nuevo.mkdirs();
                        File p1 = new File("Profesor/" + usuario + "/" + asignatura.getNombre() + "/" + NomEditTem.getText() + "/Preguntas_1");
                        p1.createNewFile();
                        File p2 = new File("Profesor/" + usuario + "/" + asignatura.getNombre() + "/" + NomEditTem.getText() + "/Preguntas_2");
                        p2.createNewFile();
                        File p3 = new File("Profesor/" + usuario + "/" + asignatura.getNombre() + "/" + NomEditTem.getText() + "/Preguntas_3");
                        p3.createNewFile();
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }*/
                    }
                } else {
                    Total = Total + tema.getNombre() + "%%%%%" + tema.getDescripcion() + "%%%%%" + "\r\n";
                }
            }
            File file = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + ComboAsigEdit.getSelectedItem() + "/Temas.txt");
            FileWriter fw;
            try {
                fw = new FileWriter(file);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(AES.encrypt(Total, "BanQuaAES"));
                bw.close();
                fw.close();
                MostrarTem((String) ComboAsigEdit.getSelectedItem(), profesor);
                NomEditTem.setText("");
                NomEditTem.setEditable(false);
                DesEditTem.setText("");
                DesEditTem.setEditable(false);
                JOptionPane.showMessageDialog(null, "Cambios guardados exitosamente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            profesor = new Profesor();
            BloqDesBoton(GuardarTem, "...");
            BloqDesBotonEdit(ElimEditTem, ButtomEditTem, "...");
            modelo.setColumnCount(0);
            modelo.setRowCount(0);
            sw1 = true;
            sw2 = true;
            sw3 = true;
        }
    }//GEN-LAST:event_GuardarTemActionPerformed

    private void ButtomEditPregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtomEditPregActionPerformed
        ComboNivelA.setEnabled(true);
        InfoPreg.setEditable(true);
        BotonDesBloqueo.setEnabled(true);
        BloqDesBoton(GuarEditPreg, "");
        String[] h = new String[3];
        for (int i = 0; i < 3; i++) {
            if (TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), i) != null) {
                h[i] = TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }
        if (h[1].equals("Disponible")) {
            BotonDesBloqueo.setText("Bloquear");
            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
            URL foto = classLoader.getResource("Imagenes/Bloq.png");
            BotonDesBloqueo.setColorHover(Color.decode("#FF6B6B"));
            BotonDesBloqueo.setColorNormal(Color.decode("#FF3333"));
            BotonDesBloqueo.setColorPressed(Color.decode("#FF3333"));
            BotonDesBloqueo.setIcon(new ImageIcon(foto));
        } else {
            BotonDesBloqueo.setText("Desbloquear");
            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
            URL foto = classLoader.getResource("Imagenes/Des.png");
            BotonDesBloqueo.setColorHover(Color.decode("#00FF3F"));
            BotonDesBloqueo.setColorNormal(Color.decode("#00CC33"));
            BotonDesBloqueo.setColorPressed(Color.decode("#00CC33"));
            BotonDesBloqueo.setIcon(new ImageIcon(foto));
        }
    }//GEN-LAST:event_ButtomEditPregActionPerformed

    private void ElemEditPregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ElemEditPregActionPerformed
        int x = JOptionPane.showConfirmDialog(null, "Desea eliminar la Pregunta seleccionada?", "Advertencia", JOptionPane.OK_CANCEL_OPTION, JOptionPane.CANCEL_OPTION);
        if (x == 0) {
            Metodos met = new Metodos();
            String ContendioPregunta = "";
            String Total = "";
            int cont = 0, i = 0;
            Tema tem = null;
            ArrayList<Pregunta> PregTemporal = new ArrayList();
            for (Asignatura asignatura : profesor.getAsignaturas()) {
                for (Tema tema : asignatura.getTemas()) {
                    if (asignatura.getNombre().equals(ComboAsigPreg.getSelectedItem())) {
                        if (tema.getNombre().equals(ComboTemPreg.getSelectedItem())) {
                            for (Pregunta pregunta : tema.getPreguntas(ComboNivPreg.getSelectedIndex())) {
                                if (pregunta.getContenido().equals(TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), 0).toString()) && pregunta.getEstado().equals(TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), 1).toString())) {

                                } else {
                                    PregTemporal.add(pregunta);
                                    Total = Total + pregunta.getNivel() + "%%%%%" + pregunta.getContenido() + "%%%%%" + pregunta.getEstado() + "%%%%%" + pregunta.getFecha() + "%%%%%" + "\r\n";
                                }
                            }

                            profesor.getAsignaturas().get(i).getTemas().get(cont).EnviarPreguntas(ComboNivPreg.getSelectedIndex(), PregTemporal);
                            cont = i;
                        } else {
                        }
                    }

                }
                i++;
            }
            File file = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + ComboAsigPreg.getSelectedItem() + "/" + ComboTemPreg.getSelectedItem() + "/Preguntas_" + ComboNivPreg.getSelectedIndex() + ".txt");
            FileWriter fw;
            try {
                fw = new FileWriter(file);
                ComboNivelA.setSelectedIndex(0);
                BufferedWriter bw = new BufferedWriter(fw);
                bw.write(AES.encrypt(Total, "BanQuaAES"));
                bw.close();
                fw.close();
                EstadPreg.setEditable(false);
                EstadPreg.setText("");
                InfoPreg.setEditable(false);
                InfoPreg.setText("");
                ComboNivelA.setEnabled(false);
                ComboNivelA.setSelectedIndex(0);
                FechaPreg.setDate(null);
                BloqDesBoton(GuarEditPreg, "...");
                BloqDesBotonEdit(ElemEditPreg, ButtomEditPreg, "...");
                modelo.setColumnCount(0);
                modelo.setRowCount(0);
                sw1 = true;
                sw2 = true;
                sw3 = true;
                String asig = (String) ComboAsigPreg.getSelectedItem();
                String tema = (String) ComboTemPreg.getSelectedItem();
                String nivel = String.valueOf(ComboNivPreg.getSelectedIndex());
                MostrarPreg(asig, tema, nivel, profesor);
                BotonDesBloqueo.setText("");
                BotonDesBloqueo.setIcon(null);
                BloqDesBoton(BotonDesBloqueo, "...");
                BotonDesBloqueo.setEnabled(false);
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            JOptionPane.showMessageDialog(null, "La pregunta ha sido eliminada.");

        }
    }//GEN-LAST:event_ElemEditPregActionPerformed

    private void GuarEditPregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuarEditPregActionPerformed

        Metodos met = new Metodos();
        String ContendioPregunta = "";
        String Total = "";
        int cont = 0, i = 0;
        Tema tem = null;
        ArrayList<Pregunta> PregTemporal = new ArrayList();
        Asignatura asignatura = profesor.getAsignaturas().get(ComboAsigPreg.getSelectedIndex() - 1);
        Tema tematica = asignatura.getTemas().get(ComboTemPreg.getSelectedIndex() - 1);
        for (Pregunta pregunta : tematica.getPreguntas(ComboNivPreg.getSelectedIndex())) {
            if (pregunta.getContenido().equals(TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), 0).toString()) && pregunta.getEstado().equals(TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), 1).toString())) {
                //Entra la informacion de la pregunta coincide
                Date ka = FechaPreg.getDate();
                String fech;
                if (ka == null) {
                    fech = "--------";
                } else {
                    DateFormat FormaFecha = new SimpleDateFormat("yyyy/MM/dd");
                    fech = FormaFecha.format(FechaPreg.getDate());
                }
                //Se prueba si la pregunta se le modifica la dificultad
                if (String.valueOf(ComboNivPreg.getSelectedIndex()).equals(String.valueOf(ComboNivelA.getSelectedIndex()))) {
                    //Si no es asi solo se agregan los cambios que se hicieron
                    PregTemporal.add(new Pregunta(InfoPreg.getText(), ComboNivelA.getSelectedIndex(), EstadPreg.getText(), fech));
                    Total = Total + ComboNivelA.getSelectedIndex() + "%%%%%" + InfoPreg.getText() + "%%%%%" + EstadPreg.getText() + "%%%%%" + fech + "%%%%%" + "\r\n";
                } else {
                    //Si la pregunta cambio de dificultad es necesario agregarla al txt de preguntas de la nueva dificultad
                    String TotalAuxiliar = "";
                    for (Pregunta pregunt : tematica.getPreguntas(ComboNivelA.getSelectedIndex())) {
                        TotalAuxiliar = TotalAuxiliar + +pregunt.getNivel() + "%%%%%" + pregunt.getContenido() + "%%%%%" + pregunt.getEstado() + "%%%%%" + pregunt.getFecha() + "%%%%%" + "\r\n";
                    }
                    TotalAuxiliar = TotalAuxiliar + ComboNivelA.getSelectedIndex() + "%%%%%" + InfoPreg.getText() + "%%%%%" + EstadPreg.getText() + "%%%%%" + fech + "%%%%%" + "\r\n";
                    //Se agregan los cambios a la variable statica Profesor
                    tematica.getPreguntas(ComboNivelA.getSelectedIndex()).add(new Pregunta(InfoPreg.getText(), ComboNivelA.getSelectedIndex(), EstadPreg.getText(), fech));
                    //Se escribe la pregunta en su nueva dificultad
                    File fileA = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + ComboAsigPreg.getSelectedItem() + "/" + ComboTemPreg.getSelectedItem() + "/Preguntas_" + ComboNivelA.getSelectedIndex() + ".txt");
                    FileWriter fwA;
                    try {
                        fwA = new FileWriter(fileA);
                        BufferedWriter bwA = new BufferedWriter(fwA);
                        bwA.write(AES.encrypt(TotalAuxiliar, "BanQuaAES"));
                        bwA.close();
                        fwA.close();
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                PregTemporal.add(pregunta);
                Total = Total + pregunta.getNivel() + "%%%%%" + pregunta.getContenido() + "%%%%%" + pregunta.getEstado() + "%%%%%" + pregunta.getFecha() + "%%%%%" + "\r\n";
            }

        }
        tematica.EnviarPreguntas(ComboNivPreg.getSelectedIndex(), PregTemporal);

        File file = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + ComboAsigPreg.getSelectedItem() + "/" + ComboTemPreg.getSelectedItem() + "/Preguntas_" + ComboNivPreg.getSelectedIndex() + ".txt");
        FileWriter fw;
        try {
            fw = new FileWriter(file);
            ComboNivelA.setSelectedIndex(0);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(AES.encrypt(Total, "BanQuaAES"));
            bw.close();
            fw.close();
            EstadPreg.setEditable(false);
            EstadPreg.setText("");
            InfoPreg.setEditable(false);
            InfoPreg.setText("");
            ComboNivelA.setEnabled(false);
            ComboNivelA.setSelectedIndex(0);
            FechaPreg.setDate(null);
            BotonDesBloqueo.setText("");
            BotonDesBloqueo.setIcon(null);
            BotonDesBloqueo.setEnabled(false);
            BloqDesBoton(BotonDesBloqueo, "...");
            BloqDesBoton(GuarEditPreg, "...");
            BloqDesBotonEdit(ElemEditPreg, ButtomEditPreg, "...");
            sw1 = true;
            sw2 = true;
            sw3 = true;
            String asig = (String) ComboAsigPreg.getSelectedItem();
            String temap = (String) ComboTemPreg.getSelectedItem();
            String nivel = String.valueOf(ComboNivPreg.getSelectedIndex());
            MostrarPreg(asig, temap, nivel, profesor);
            JOptionPane.showMessageDialog(null, "Cambios guardados exitosamente", "Informacion", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GuarEditPregActionPerformed

    private void ComboAsigEditPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboAsigEditPopupMenuWillBecomeInvisible
        String asig = (String) ComboAsigEdit.getSelectedItem();
        NomEditTem.setEditable(false);
        NomEditTem.setText("");
        DesEditTem.setEditable(false);
        DesEditTem.setText("");
        BloqDesBoton(GuardarTem, "...");
        BloqDesBotonEdit(ElimEditTem, ButtomEditTem, "...");
        modelo.setColumnCount(0);
        modelo.setRowCount(0);
        sw1 = true;
        sw2 = true;
        sw3 = true;
        if (!asig.equals("...")) {
            Metodos met = new Metodos();
            int h = 0;
            try {
                h = met.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + asig + "/Temas.txt", this.tema, h);
                if (h < 1) {
                    AdAsig5.setVisible(true);
                    AdAsig5.setText("*Asignatura sin Temas");
                } else {
                    MostrarTem(asig, profesor);
                    AdAsig5.setVisible(false);
                }
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            AdAsig5.setVisible(true);
            AdAsig5.setText("*Opcion no valida");
        }

    }//GEN-LAST:event_ComboAsigEditPopupMenuWillBecomeInvisible

    private void TablaAsigMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaAsigMouseReleased
        String[] h = new String[3];

        for (int i = 0; i < 3; i++) {
            if (TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), i) != null) {
                h[i] = TablaAsig.getModel().getValueAt(TablaAsig.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }
        BloqDesBoton(GuaEditAsig, "...");
        BloqDesBotonEdit(ElimEditAsig, BottonEditAsig, "");
        NomEditAsig.setText(h[0]);
        CodEditAsig.setText(h[1]);
        DesEditAsig.setText(h[2]);             // TODO add your handling code here:
    }//GEN-LAST:event_TablaAsigMouseReleased

    private void TablaTemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaTemKeyReleased
        String[] h = new String[2];

        for (int i = 0; i < 2; i++) {
            if (TablaTem.getModel().getValueAt(TablaTem.getSelectedRow(), i) != null) {
                h[i] = TablaTem.getModel().getValueAt(TablaTem.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }
        NomEditTem.setText(h[0]);
        DesEditTem.setText(h[1]);
        BloqDesBoton(GuardarTem, "...");
        BloqDesBotonEdit(ElimEditTem, ButtomEditTem, "");
    }//GEN-LAST:event_TablaTemKeyReleased

    private void TablaTemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaTemMouseReleased
        String[] h = new String[2];

        for (int i = 0; i < 2; i++) {
            if (TablaTem.getModel().getValueAt(TablaTem.getSelectedRow(), i) != null) {
                h[i] = TablaTem.getModel().getValueAt(TablaTem.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }
        NomEditTem.setText(h[0]);
        DesEditTem.setText(h[1]);
        BloqDesBoton(GuardarTem, "...");
        BloqDesBotonEdit(ElimEditTem, ButtomEditTem, "");
    }//GEN-LAST:event_TablaTemMouseReleased

    private void TablaPregEditKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaPregEditKeyReleased
        String[] h = new String[3];
        BloqDesBotonEdit(ElemEditPreg, ButtomEditPreg, "");
        for (int i = 0; i < 3; i++) {
            if (TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), i) != null) {
                h[i] = TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }

        ComboNivelA.setSelectedIndex(ComboNivPreg.getSelectedIndex());
        EstadPreg.setText(h[1]);
        if (BotonDesBloqueo.isEnabled() == true) {
            if (h[1].equals("Disponible")) {
                BotonDesBloqueo.setText("Bloquear");
                ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
                URL foto = classLoader.getResource("Imagenes/Bloq.png");
                BotonDesBloqueo.setColorHover(Color.decode("#FF6B6B"));
                BotonDesBloqueo.setColorNormal(Color.decode("#FF3333"));
                BotonDesBloqueo.setColorPressed(Color.decode("#FF3333"));
                BotonDesBloqueo.setIcon(new ImageIcon(foto));
            } else {
                BotonDesBloqueo.setText("Desbloquear");
                ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
                URL foto = classLoader.getResource("Imagenes/Des.png");
                BotonDesBloqueo.setColorHover(Color.decode("#00FF3F"));
                BotonDesBloqueo.setColorNormal(Color.decode("#00CC33"));
                BotonDesBloqueo.setColorPressed(Color.decode("#00CC33"));
                BotonDesBloqueo.setIcon(new ImageIcon(foto));
            }
        }
        String[] dateValue = h[2].split("/");
        Date date = null;
        if (dateValue.length == 1) {
            date = null;
        } else {
            try {
                date = new SimpleDateFormat("dd-MM-yyyy").parse(dateValue[2] + "-" + dateValue[1] + "-" + dateValue[0]);
            } catch (ParseException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        FechaPreg.setDate(date);
        InfoPreg.setText(h[0]);
    }//GEN-LAST:event_TablaPregEditKeyReleased

    private void TablaPregEditMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPregEditMouseReleased
        String[] h = new String[3];
        BloqDesBotonEdit(ElemEditPreg, ButtomEditPreg, "");
        for (int i = 0; i < 3; i++) {
            if (TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), i) != null) {
                h[i] = TablaPregEdit.getModel().getValueAt(TablaPregEdit.getSelectedRow(), i).toString();
            } else {
                h[i] = "";
            }
        }

        ComboNivelA.setSelectedIndex(ComboNivPreg.getSelectedIndex());
        EstadPreg.setText(h[1]);
        if (BotonDesBloqueo.isEnabled() == true) {
            if (h[1].equals("Disponible")) {
                BotonDesBloqueo.setText("Bloquear");
                ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
                URL foto = classLoader.getResource("Imagenes/Bloq.png");
                BotonDesBloqueo.setColorHover(Color.decode("#FF6B6B"));
                BotonDesBloqueo.setColorNormal(Color.decode("#FF3333"));
                BotonDesBloqueo.setColorPressed(Color.decode("#FF3333"));
                BotonDesBloqueo.setIcon(new ImageIcon(foto));
            } else {
                BotonDesBloqueo.setText("Desbloquear");
                ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
                URL foto = classLoader.getResource("Imagenes/Des.png");
                BotonDesBloqueo.setColorHover(Color.decode("#00FF3F"));
                BotonDesBloqueo.setColorNormal(Color.decode("#00CC33"));
                BotonDesBloqueo.setColorPressed(Color.decode("#00CC33"));
                BotonDesBloqueo.setIcon(new ImageIcon(foto));
            }
        }
        String[] dateValue = h[2].split("/");
        Date date = null;
        if (dateValue.length == 1) {
            date = null;
        } else {
            try {
                date = new SimpleDateFormat("dd-MM-yyyy").parse(dateValue[2] + "-" + dateValue[1] + "-" + dateValue[0]);
            } catch (ParseException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        FechaPreg.setDate(date);
        InfoPreg.setText(h[0]);
    }//GEN-LAST:event_TablaPregEditMouseReleased

    private void DesButtoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DesButtoActionPerformed
        String[] values = {"...", "Disponible", "No Disponible"};

        Object selected = JOptionPane.showInputDialog(null, "Seleccione el nuevo estado para la pregunta:\r\nNota: Estos cambios solo se haran permanentes presionando Guardar.", "Nuevo Estado", JOptionPane.DEFAULT_OPTION, null, values, "0");
        if (selected != null) {//null if the user cancels. 
            String selectedString = selected.toString();
            if (selectedString.equals("No Disponible")) {
                JDateChooser jd = new JDateChooser();
                String message = "Seleccione la nueva fecha de ultimo uso:\n";
                Object[] params = {message, jd};
                JOptionPane.showConfirmDialog(null, params, "Cambio Fecha", JOptionPane.PLAIN_MESSAGE);
                EstadPreg.setText(selectedString);
                FechaPreg.setDate(((JDateChooser) params[1]).getDate());
                DesButto.setBackground(Color.RED);
            } else {
                if (selectedString.equals("...")) {
                    JOptionPane.showMessageDialog(null, "Opcion no valida");
                } else {
                    EstadPreg.setText(selectedString);
                    FechaPreg.setDate(null);
                    DesButto.setBackground(Color.green);
                }
            }
        }


    }//GEN-LAST:event_DesButtoActionPerformed

    private void ValNuevaContraKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ValNuevaContraKeyReleased
        if (this.NuevaContra.getText().equals(this.ValNuevaContra.getText())) {
            this.jLabel27.setVisible(false);
            BloqDesBoton(ButtonCambio, "");
        } else {
            this.jLabel27.setVisible(true);
            BloqDesBoton(ButtonCambio, "...");
        }
    }//GEN-LAST:event_ValNuevaContraKeyReleased

    private void ComboBoxTemasPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboBoxTemasPopupMenuWillBecomeInvisible
        String TempAsigna = (String) ComboBoxTemas.getSelectedItem();
        if (!TempAsigna.equals("...")) {
            ComboNivel.setEnabled(true);
            Preguntas.setEnabled(false);
            AdTem.setVisible(false);
        } else {
            AdTem.setVisible(true);
            ComboNivel.setEnabled(false);
            Preguntas.setEnabled(false);
        }
        BloqDesBoton(ButtonAgregarPregunta, "...");
    }//GEN-LAST:event_ComboBoxTemasPopupMenuWillBecomeInvisible

    private void ComboNivelPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboNivelPopupMenuWillBecomeInvisible
        String ComboN = (String) ComboNivel.getSelectedItem();
        if (!ComboN.equals("...")) {
            Preguntas.setEnabled(true);
            AdDif.setVisible(false);
        } else {
            AdDif.setVisible(true);
            Preguntas.setEnabled(false);
        }
        BloqDesBoton(ButtonAgregarPregunta, ComboN);
    }//GEN-LAST:event_ComboNivelPopupMenuWillBecomeInvisible

    private void nivelPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_nivelPopupMenuWillBecomeInvisible
        String TempTema = (String) nivel.getSelectedItem();
        BloqDesBoton(ButtonMostrarDER, TempTema);
        if ("...".equals(TempTema)) {
            AdAsig4.setVisible(true);

        } else {
            AdAsig4.setVisible(false);
        }
    }//GEN-LAST:event_nivelPopupMenuWillBecomeInvisible

    private void ComboAsignaturaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboAsignaturaPopupMenuWillBecomeInvisible
        String TempTema = (String) ComboAsignatura.getSelectedItem();
        if ("...".equals(TempTema)) {
            AdTema.setVisible(true);
        } else {
            AdTema.setVisible(false);
        }
        BloqDesBoton(ButtonAgregarTema, TempTema);
    }//GEN-LAST:event_ComboAsignaturaPopupMenuWillBecomeInvisible

    private void semePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_semePopupMenuWillBecomeInvisible
        String semestre = (String) seme.getSelectedItem();
        if ("...".equals(semestre)) {
            asigna.setEnabled(false);
            fecha.setEnabled(false);
            preg.setEnabled(false);
            SeAd.setVisible(true);
        } else {
            asigna.setEnabled(true);
            fecha.setEnabled(true);
            preg.setEnabled(true);
            SeAd.setVisible(false);
        }
        if (asigna.getSelectedItem().equals("...")) {
            BloqDesBoton(ButtonAddPreg, "...");
        } else {
            BloqDesBoton(ButtonAddPreg, "");
            BloqDesBoton(ButtonAddPreg, semestre);
        }
    }//GEN-LAST:event_semePopupMenuWillBecomeInvisible

    private void asignaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_asignaPopupMenuWillBecomeInvisible
        String semestre = (String) asigna.getSelectedItem();
        if (seme.getSelectedItem().equals("...")) {
            BloqDesBoton(ButtonAddPreg, "...");
        } else {
            BloqDesBoton(ButtonAddPreg, "");
            BloqDesBoton(ButtonAddPreg, semestre);
        }
        if ("...".equals(semestre)) {
            fecha.setEnabled(false);
            preg.setEnabled(false);
            AsAd.setVisible(true);
            AsAd.setText("*Opcion no valida");
        } else {
            Metodos met = new Metodos();
            int h = 0;
            try {
                h = met.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + semestre + "/Temas.txt", this.tema, h);
                if (h < 1) {
                    AsAd.setVisible(true);
                    AsAd.setText("*Asignatura sin Temas");
                    fecha.setEnabled(false);
                    preg.setEnabled(false);
                    BloqDesBoton(ButtonAddPreg, "...");
                }
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }

            fecha.setEnabled(true);
            preg.setEnabled(true);
            AsAd.setVisible(false);
        }

    }//GEN-LAST:event_asignaPopupMenuWillBecomeInvisible

    private void Asig3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Asig3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Asig3ActionPerformed

    private void temasPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_temasPopupMenuWillBecomeInvisible
        String semestre = (String) temas.getSelectedItem();
        ndif.setSelectedIndex(0);
        NivAd.setVisible(false);
        BloqDesBoton(generarExamen, semestre);
        if ("...".equals(semestre)) {
            ndif.setEnabled(false);
            TemAd.setVisible(true);
            TemAd.setText("*Opcion no valida");
            ndif.setSelectedIndex(0);
        } else {
            ndif.setEnabled(true);
            TemAd.setVisible(false);
            PregDisTem();
        }

    }//GEN-LAST:event_temasPopupMenuWillBecomeInvisible

    //METODO Express (Solo se usara aqui)
    //Si un Tema posee preguntas Disponible
    void PregDisTem() {
        int cont = 0, cont2 = 0;
        for (int j = 1; j < 4; j++) {
            for (Pregunta preg : profesor.getAsignaturas().get(asigna.getSelectedIndex() - 1).getTemas().get(temas.getSelectedIndex() - 1).getPreguntas(j)) {
                if (preg.getEstado().equals("Disponible")) {
                    cont++;
                }
                cont2++;
            }
        }
        if (cont == 0) {
            TemAd.setText("*Tema sin preguntas Disponibles");
        }
        if (cont2 == 0) {
            TemAd.setText("*Temas sin preguntas");
        }
        if (cont2 == 0 || cont == 0) {
            ndif.setEnabled(false);
            TemAd.setVisible(true);
            BloqDesBoton(generarExamen, "...");
        }
    }

    private void ndifPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ndifPopupMenuWillBecomeInvisible
        String semestre = (String) ndif.getSelectedItem();
        BloqDesBoton(generarExamen, semestre);
        if ("...".equals(semestre)) {
            NivAd.setVisible(true);
            NivAd.setText("*Opcion no valida");
        } else {
            PregDisNdif(ndif.getSelectedIndex());
        }
    }//GEN-LAST:event_ndifPopupMenuWillBecomeInvisible

    //METODO Express 2 (Solo se usara aqui)
    //Si un Nivel de dificultad posee preguntas Disponible
    void PregDisNdif(int Ndif) {
        int cont = 0, cont2 = profesor.getAsignaturas().get(asigna.getSelectedIndex() - 1).getTemas().get(temas.getSelectedIndex() - 1).getPreguntas(Ndif).size();
        for (Pregunta preg : profesor.getAsignaturas().get(asigna.getSelectedIndex() - 1).getTemas().get(temas.getSelectedIndex() - 1).getPreguntas(Ndif)) {
            if (preg.getEstado().equals("Disponible")) {
                cont++;
            }
        }
        if (cont == 0) {
            NivAd.setText("*Nivel sin preguntas Disponibles");
        }
        if (cont2 == 0) {
            NivAd.setText("*Nivel sin preguntas");
        }
        if (cont2 == 0 || cont == 0) {
            NivAd.setVisible(true);
            BloqDesBoton(generarExamen, "...");
        } else {
            NivAd.setVisible(false);
        }
    }

    private void ComboAsigPregPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboAsigPregPopupMenuWillBecomeInvisible
        String TempAsigna = (String) ComboAsigPreg.getSelectedItem();
        EstadPreg.setEditable(false);
        EstadPreg.setText("");
        InfoPreg.setEditable(false);
        InfoPreg.setText("");
        ComboNivelA.setEnabled(false);
        ComboNivelA.setSelectedIndex(0);
        FechaPreg.setDate(null);
        BotonDesBloqueo.setText("");
        BotonDesBloqueo.setIcon(null);
        BloqDesBoton(BotonDesBloqueo, "...");
        BloqDesBoton(GuarEditPreg, "...");
        BloqDesBotonEdit(ElemEditPreg, ButtomEditPreg, "...");
        modelo.setColumnCount(0);
        modelo.setRowCount(0);
        sw1 = true;
        sw2 = true;
        sw3 = true;
        ComboTemPreg.removeAllItems();
        ComboTemPreg.addItem("...");
        ComboNivPreg.setEnabled(false);
        ComboNivPreg.setSelectedIndex(0);
        if (!TempAsigna.equals("...")) {
            ComboTemPreg.setEnabled(true);
            Metodos met = new Metodos();

            int h = 0;
            try {
                h = met.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + TempAsigna + "/Temas.txt", ComboTemPreg, h);
                if (h < 1) {
                    AdAsig11.setVisible(true);
                    AdAsig11.setText("*Sin Temas");
                    ComboTemPreg.setEnabled(false);
                } else {
                    AdAsig11.setVisible(false);
                    ComboTemPreg.setEnabled(true);
                }
            } catch (IOException ex) {
                Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            ComboTemPreg.setEnabled(false);
            AdAsig11.setVisible(true);
            AdAsig11.setText("*Opcion no valida");
        }
    }//GEN-LAST:event_ComboAsigPregPopupMenuWillBecomeInvisible

    private void ComboTemPregPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboTemPregPopupMenuWillBecomeInvisible
        String TempTema = (String) ComboTemPreg.getSelectedItem();
        EstadPreg.setEditable(false);
        EstadPreg.setText("");
        InfoPreg.setEditable(false);
        InfoPreg.setText("");
        ComboNivelA.setEnabled(false);
        ComboNivelA.setSelectedIndex(0);
        FechaPreg.setDate(null);
        BotonDesBloqueo.setText("");
        BotonDesBloqueo.setIcon(null);
        BloqDesBoton(BotonDesBloqueo, "...");
        BloqDesBoton(GuarEditPreg, "...");
        BloqDesBotonEdit(ElemEditPreg, ButtomEditPreg, "...");
        modelo.setColumnCount(0);
        modelo.setRowCount(0);
        sw1 = true;
        sw2 = true;
        sw3 = true;
        if ("...".equals(TempTema)) {
            ComboNivPreg.setEnabled(false);
            AdAsig14.setVisible(true);
        } else {
            AdAsig14.setVisible(false);
            ComboNivPreg.setEnabled(true);
        }
    }//GEN-LAST:event_ComboTemPregPopupMenuWillBecomeInvisible

    private void ComboNivPregPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboNivPregPopupMenuWillBecomeInvisible
        String asig = (String) ComboAsigPreg.getSelectedItem();
        String tem = (String) ComboTemPreg.getSelectedItem();
        String nivel = String.valueOf(ComboNivPreg.getSelectedIndex());
        EstadPreg.setEditable(false);
        EstadPreg.setText("");
        InfoPreg.setEditable(false);
        InfoPreg.setText("");
        BotonDesBloqueo.setText("");
        BotonDesBloqueo.setIcon(null);
        BloqDesBoton(BotonDesBloqueo, "...");
        ComboNivelA.setEnabled(false);
        ComboNivelA.setSelectedIndex(0);
        FechaPreg.setDate(null);
        BloqDesBoton(GuarEditPreg, "...");
        BloqDesBotonEdit(ElemEditPreg, ButtomEditPreg, "...");
        sw1 = true;
        sw2 = true;
        sw3 = true;
        if (!asig.equals("...") && !tem.equals("...") && !nivel.equals("0")) {

            MostrarPreg(asig, tem, nivel, profesor);
            AdAsig12.setVisible(false);
        } else {
            AdAsig12.setVisible(true);
        }
    }//GEN-LAST:event_ComboNivPregPopupMenuWillBecomeInvisible

    private void BotonDesBloqueoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonDesBloqueoActionPerformed
        if (BotonDesBloqueo.getText().equals("Bloquear")) {
            int n = JOptionPane.showConfirmDialog(null, "Desea Bloquear esta pregunta?", "Información", JOptionPane.YES_NO_OPTION);
            if (n == JOptionPane.YES_OPTION) {
                JDateChooser jd = new JDateChooser();
                String message = "Seleccione la nueva fecha de ultimo uso:\n";
                Object[] params = {message, jd};
                JOptionPane.showConfirmDialog(null, params, "Fecha", JOptionPane.PLAIN_MESSAGE);
                if (((JDateChooser) params[1]).getDate() != null) {
                    String s = "";
                    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                    s = sdf.format(((JDateChooser) params[1]).getDate());
                    FechaPreg.setDate(((JDateChooser) params[1]).getDate());
                    EstadPreg.setText("No Disponible");
                    JOptionPane.showMessageDialog(null, "Si desea mantener los cambios, presione Editar>>Guardar.", "Informacion", JOptionPane.INFORMATION_MESSAGE);
                    ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
                    URL foto = classLoader.getResource("Imagenes/Des.png");
                    BotonDesBloqueo.setColorHover(Color.decode("#00FF3F"));
                    BotonDesBloqueo.setColorNormal(Color.decode("#00CC33"));
                    BotonDesBloqueo.setColorPressed(Color.decode("#00CC33"));
                    BotonDesBloqueo.setIcon(new ImageIcon(foto));
                }
            }
        } else {
            int n = JOptionPane.showConfirmDialog(null, "Desea Desbloquear esta pregunta?.", "Información", JOptionPane.YES_NO_OPTION);
            if (n == JOptionPane.YES_OPTION) {
                FechaPreg.setDate(null);
                EstadPreg.setText("Disponible");
                BotonDesBloqueo.setText("Bloquear");
                ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
                URL foto = classLoader.getResource("Imagenes/Bloq.png");
                BotonDesBloqueo.setColorHover(Color.decode("#FF6B6B"));
                BotonDesBloqueo.setColorNormal(Color.decode("#FF3333"));
                BotonDesBloqueo.setColorPressed(Color.decode("#FF3333"));
                BotonDesBloqueo.setIcon(new ImageIcon(foto));
            }
        }
        BotonDesBloqueo.setEnabled(true);
        if (EstadPreg.equals("Disponible")) {
            BotonDesBloqueo.setText("Bloquear");
            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
            URL foto = classLoader.getResource("Imagenes/Bloq.png");
            BotonDesBloqueo.setColorHover(Color.decode("#FF6B6B"));
            BotonDesBloqueo.setColorNormal(Color.decode("#FF3333"));
            BotonDesBloqueo.setColorPressed(Color.decode("#FF3333"));
            BotonDesBloqueo.setIcon(new ImageIcon(foto));
        } else {
            BotonDesBloqueo.setText("Desbloquear");
            ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
            URL foto = classLoader.getResource("Imagenes/Des.png");
            BotonDesBloqueo.setColorHover(Color.decode("#00FF3F"));
            BotonDesBloqueo.setColorNormal(Color.decode("#00CC33"));
            BotonDesBloqueo.setColorPressed(Color.decode("#00CC33"));
            BotonDesBloqueo.setIcon(new ImageIcon(foto));
        }
    }//GEN-LAST:event_BotonDesBloqueoActionPerformed

    private void ComboAsigEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboAsigEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboAsigEditActionPerformed

    private void ComboNivelAPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_ComboNivelAPopupMenuWillBecomeInvisible
        if (ComboNivelA.getSelectedItem().equals("...")) {
            JOptionPane.showInputDialog(this, "Opcion no valida", "error", JOptionPane.ERROR_MESSAGE);
            GuarEditPreg.setEnabled(false);
            ButtomEditPreg.setEnabled(false);
        } else {
            ButtomEditPreg.setEnabled(true);
            GuarEditPreg.setEnabled(true);
        }            // TODO add your handling code here:
    }//GEN-LAST:event_ComboNivelAPopupMenuWillBecomeInvisible

    private void CorreoPerfilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CorreoPerfilActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CorreoPerfilActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
        URL foto = classLoader.getResource("Imagenes/Libro.png");
        setIconImage(Toolkit.getDefaultToolkit().getImage(foto));       // TODO add your handling code here:
    }//GEN-LAST:event_formWindowActivated

    private void BottonVerInfo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonVerInfo1ActionPerformed
        Metodos met = new Metodos();

        met.ReincioComboBox(Asig2, Asig3, tema, nivel);
        SubMenu.setSelectedIndex(0);
        try {
            modelo = (DefaultTableModel) TablaPreg.getModel();
            modelo.setColumnCount(0);
            modelo.setRowCount(0);
            sw1 = true;
            sw2 = true;
            sw3 = true;
            int h = 0;
            Asig2.removeAllItems();
            Asig3.removeAllItems();
            Asig2.addItem("...");
            Asig3.addItem("...");
            tema.setEnabled(false);
            nivel.setEnabled(false);
            AdAsig1.setVisible(false);
            AdAsig2.setVisible(false);
            AdAsig3.setVisible(false);
            AdAsig4.setVisible(false);
            BloqDesBoton(ButtonMostrarDER, "...");
            BloqDesBoton(ButtonMostrarCENT, "...");
            h = met.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/Asignatura.txt", Asig2, h);
            met.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/Asignatura.txt", Asig3, h);
            Menu.setSelectedComponent(Ver);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_BottonVerInfo1ActionPerformed

    private void EditarPreguntas1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarPreguntas1ActionPerformed
        Metodos met = new Metodos();
        modelo = (DefaultTableModel) TablaPregEdit.getModel();
        EstadPreg.setText("");
        InfoPreg.setText("");
        ComboNivelA.setSelectedIndex(0);
        FechaPreg.setDate(null);
        BloqDesBoton(GuarEditPreg, "...");
        BloqDesBotonEdit(ElemEditPreg, ButtomEditPreg, "...");
        modelo.setColumnCount(0);
        modelo.setRowCount(0);
        sw1 = true;
        sw2 = true;
        sw3 = true;
        ComboAsigPreg.removeAllItems();
        ComboAsigPreg.addItem("...");
        ComboTemPreg.removeAllItems();
        ComboTemPreg.addItem("...");
        ComboNivPreg.setSelectedIndex(0);
        int h = 0;
        try {
            h = met.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/Asignatura.txt", ComboAsigPreg, h);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        AdAsig11.setVisible(false);
        AdAsig14.setVisible(false);
        AdAsig12.setVisible(false);
        AdAsig6.setVisible(false);
        ComboTemPreg.setEnabled(false);
        ComboNivPreg.setEnabled(false);
        ComboNivelA.setEnabled(false);
        EstadPreg.setEditable(false);
        FechaPreg.setEnabled(false);
        InfoPreg.setEditable(false);
        BotonDesBloqueo.setText("");
        BotonDesBloqueo.setIcon(null);
        BotonDesBloqueo.setEnabled(false);
        BloqDesBoton(BotonDesBloqueo, "...");
        Menu.setSelectedComponent(EditPreg);        // TODO add your handling code here:
    }//GEN-LAST:event_EditarPreguntas1ActionPerformed

    private void EditarTemas1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarTemas1ActionPerformed
        Metodos met = new Metodos();
        modelo = (DefaultTableModel) TablaTem.getModel();
        modelo.setColumnCount(0);
        modelo.setRowCount(0);
        sw1 = true;
        sw2 = true;
        sw3 = true;
        int h = 0;
        Menu.setSelectedComponent(EditTem);
        ComboAsigEdit.removeAllItems();
        ComboAsigEdit.addItem("...");
        BloqDesBoton(GuardarTem, "...");
        try {
            h = met.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/Asignatura.txt", ComboAsigEdit, h);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

        NomEditTem.setEditable(false);
        NomEditTem.setText("");
        DesEditTem.setEditable(false);
        DesEditTem.setText("");
        GuardarTem.setEnabled(false);

        AdAsig5.setVisible(false);
        BloqDesBoton(GuardarTem, "...");
        BloqDesBotonEdit(ElimEditTem, ButtomEditTem, "...");

        modelo.setColumnCount(0);
        modelo.setRowCount(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_EditarTemas1ActionPerformed

    private void EditarAsignatura1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarAsignatura1ActionPerformed
        Metodos met = new Metodos();
        if (Menu.getSelectedComponent() != EditAsig) {
            modelo = (DefaultTableModel) TablaAsig.getModel();
            modelo.setColumnCount(0);
            modelo.setRowCount(0);
            sw1 = true;
            sw2 = true;
            sw3 = true;
            Menu.setSelectedComponent(EditAsig);
        }
        NomEditAsig.setText("");
        CodEditAsig.setText("");
        DesEditAsig.setText("");
        NomEditAsig.setEditable(false);
        CodEditAsig.setEditable(false);
        DesEditAsig.setEditable(false);
        BloqDesBoton(GuaEditAsig, "...");
        BloqDesBotonEdit(ElimEditAsig, BottonEditAsig, "...");
        MostrarAsig(profesor);
    }//GEN-LAST:event_EditarAsignatura1ActionPerformed

    private void BottonVerInfo2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonVerInfo2ActionPerformed
        SubMenu.setSelectedIndex(2);
        Menu.setSelectedComponent(Home);        // TODO add your handling code here:
    }//GEN-LAST:event_BottonVerInfo2ActionPerformed

    private void BottonGenrExam1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonGenrExam1ActionPerformed
        String item;
        Separador.setVisible(false);
        NivInfo.setVisible(false);
        temas.setVisible(false);
        TemAd.setVisible(false);
        NivAd.setVisible(false);
        ndif.setVisible(false);
        InfoTem.setVisible(false);
        SeAd.setVisible(false);
        AsAd.setVisible(false);
        generarExamen.setVisible(false);
        asigna.removeAllItems();
        asigna.addItem("...");
        seme.setSelectedIndex(0);
        for (Asignatura a : profesor.getAsignaturas()) {
            item = a.getNombre();
            asigna.addItem(item);
        }
        evaluacion.setEditable(true);
        seme.setEnabled(true);
        asigna.setEnabled(true);
        fecha.setEnabled(true);
        preg.setEditable(true);
        nombre.setText(nombre_profesor);
        Metodos met = new Metodos();
        met.ReincioComboBox(seme);
        met.ReincioJTextField(evaluacion, preg);
        fecha.setCalendar(null);
        AvisoNumeros.setVisible(false);
        SubMenu.setSelectedIndex(0);
        BloqDesBoton(ButtonAddPreg, "...");
        Menu.setSelectedComponent(Generar);        // TODO add your handling code here:
    }//GEN-LAST:event_BottonGenrExam1ActionPerformed

    private void BottonVerInfo3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonVerInfo3ActionPerformed

        SubMenu.setSelectedIndex(2);
        Menu.setSelectedComponent(Home);
    }//GEN-LAST:event_BottonVerInfo3ActionPerformed

    private void BottonGenrExam2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonGenrExam2ActionPerformed
        String item;
        Separador.setVisible(false);
        NivInfo.setVisible(false);
        temas.setVisible(false);
        TemAd.setVisible(false);
        NivAd.setVisible(false);
        ndif.setVisible(false);
        InfoTem.setVisible(false);
        SeAd.setVisible(false);
        AsAd.setVisible(false);
        generarExamen.setVisible(false);
        asigna.removeAllItems();
        asigna.addItem("...");
        seme.setSelectedIndex(0);
        for (Asignatura a : profesor.getAsignaturas()) {
            item = a.getNombre();
            asigna.addItem(item);
        }
        evaluacion.setEditable(true);
        seme.setEnabled(true);
        asigna.setEnabled(true);
        fecha.setEnabled(true);
        preg.setEditable(true);
        nombre.setText(nombre_profesor);
        Metodos met = new Metodos();
        met.ReincioComboBox(seme);
        met.ReincioJTextField(evaluacion, preg);
        fecha.setCalendar(null);
        AvisoNumeros.setVisible(false);
        SubMenu.setSelectedIndex(0);
        BloqDesBoton(ButtonAddPreg, "...");
        Menu.setSelectedComponent(Generar);        // TODO add your handling code here:
    }//GEN-LAST:event_BottonGenrExam2ActionPerformed

    private void ButtomEditPreg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtomEditPreg1ActionPerformed
        Nombre1.setEditable(true);
        Cedula1.setEditable(true);
        CorreoPerfil.setEditable(true);
        BloqDesBoton(GuarEditPreg1, "");
    }//GEN-LAST:event_ButtomEditPreg1ActionPerformed

    private void GuarEditPreg1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuarEditPreg1ActionPerformed
        FileWriter fw = null;
        try {
            Metodos met = new Metodos();
            ArrayList<String[]> registros = met.LeerArchivoDaniel("C:\\ProgramData\\BanQua\\Usuario.txt");
            String nombre;
            String Total = "";
            for (int i = 0; i < registros.size(); i++) {
                nombre = registros.get(i)[2];
                if (nombre.equals(Usuario1.getText())) {
                    Total = Total + Nombre1.getText() + "%%%%%" + Cedula1.getText() + "%%%%%" + registros.get(i)[2] + "%%%%%" + registros.get(i)[3] + "%%%%%" + registros.get(i)[4] + "%%%%%" + CorreoPerfil.getText() + "\r\n";
                    nombre_profesor = Nombre1.getText();
                    Correo = CorreoPerfil.getText();
                } else {
                    Total = Total + registros.get(i)[0] + "%%%%%" + registros.get(i)[1] + "%%%%%" + registros.get(i)[2] + "%%%%%" + registros.get(i)[3] + "%%%%%" + registros.get(i)[4] + "%%%%%" + registros.get(i)[5] + "\r\n";
                }
            }
            File file = new File("C:\\ProgramData\\BanQua\\Usuario.txt");
            fw = new FileWriter(file);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write(AES.encrypt(Total, "BanQuaAES"));
            bw.close();
            fw.close();
            JOptionPane.showMessageDialog(this, "Los cambios se han realizado con exito.", "Modificacion Perfil", JOptionPane.INFORMATION_MESSAGE);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GuarEditPreg1ActionPerformed

    private void ValNuevaContraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValNuevaContraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ValNuevaContraActionPerformed

    private void NuevaContraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevaContraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NuevaContraActionPerformed

    private void CorreoPerfilKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CorreoPerfilKeyReleased
        String[] x = CorreoPerfil.getText().split("@");
        if (x.length == 1) {
            BloqDesBoton(GuarEditPreg1, "...");
            jLabel37.setVisible(true);
        } else {
            jLabel37.setVisible(false);
            if (jLabel38.isVisible() == false && jLabel60.isVisible() == false && jLabel37.isVisible() == false) {
                BloqDesBoton(GuarEditPreg1, "");
            }
        }
    }//GEN-LAST:event_CorreoPerfilKeyReleased

    private void Cedula1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Cedula1KeyReleased
        Metodos met = new Metodos();
        if (met.confNum(this.Cedula1.getText()) == false) {
            BloqDesBoton(GuarEditPreg1, "...");
            jLabel60.setVisible(true);
        } else {
            jLabel60.setVisible(false);
            if (jLabel38.isVisible() == false && jLabel60.isVisible() == false && jLabel37.isVisible() == false) {
                BloqDesBoton(GuarEditPreg1, "");
            }
        }
    }//GEN-LAST:event_Cedula1KeyReleased

    private void Nombre1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Nombre1KeyReleased
        if (Nombre1.getText().equals("")) {
            BloqDesBoton(GuarEditPreg1, "...");
            jLabel38.setVisible(true);
        } else {
            jLabel38.setVisible(false);
            if (jLabel38.isVisible() == false && jLabel60.isVisible() == false && jLabel37.isVisible() == false) {
                BloqDesBoton(GuarEditPreg1, "");
            }
        }

    }//GEN-LAST:event_Nombre1KeyReleased

    private void pregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pregActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pregActionPerformed

    private void BottonCambiarDeUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BottonCambiarDeUsuarioActionPerformed
        // TODO add your handling code here:
        this.CambiarDeCuenta();
    }//GEN-LAST:event_BottonCambiarDeUsuarioActionPerformed

    private void jLabel61MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel61MouseClicked

    }//GEN-LAST:event_jLabel61MouseClicked

    ///METODOS!!
    public void CambiarDeCuenta() {
        InicioSeccion.usuario = "";
        InicioSeccion.nombre_profesor = "";
        InicioSeccion.Correo = "";
        this.setVisible(false);
        InicioSeccion ini = new InicioSeccion();
        ini.setVisible(true);

    }

    public Integer TotalPregPorAsig() {// El total de preguntas que posee una asignatura
        int total = 0;
        for (Tema tema1 : profesor.getAsignaturas().get(asigna.getSelectedIndex() - 1).getTemas()) {
            for (int k = 1; k < 4; k++) {
                for (Pregunta pregunta : tema1.getPreguntas(k)) {
                    if (pregunta.getEstado().equals("Disponible")) {
                        total++;
                    }
                }
            }
        }
        System.out.println("Total");
        return total;
    }

    public void BloqDesBoton(RSButtonMetro Boton, String Condicion) {// Pone los botones de color gris o azul dependiendo de la opcion de los JComboBox
        if ("...".equals(Condicion)) {
            Boton.setEnabled(false);
            Boton.setColorNormal(Color.lightGray);
            Boton.setColorPressed(Color.lightGray);
            Boton.setColorHover(Color.lightGray);
        } else {
            Boton.setEnabled(true);
            Boton.setColorHover(Color.decode("#01A5E4"));
            Boton.setColorNormal(Color.decode("#0180B0"));
            Boton.setColorPressed(Color.decode("#025F82"));
        }
    }

    public void BloqDesBotonEdit(RSButtonMetro BotonE, RSButtonMetro BotonEd, String Condicion) {// Pone los botones de color gris o  dependiendo de la opcion de los JComboBox
        if ("...".equals(Condicion)) {
            BloqDesBoton(BotonE, "...");
            BloqDesBoton(BotonEd, "...");
        } else {
            BotonE.setEnabled(true);
            BotonE.setColorHover(Color.decode("#FF5151"));
            BotonE.setColorNormal(Color.decode("#FF0000"));
            BotonE.setColorPressed(Color.decode("#DB0000"));
            BotonEd.setEnabled(true);
            BotonEd.setColorHover(Color.decode("#FF9D3D"));
            BotonEd.setColorNormal(Color.decode("#FF7F00"));
            BotonEd.setColorPressed(Color.decode("#F47900"));
        }
    }

    public void DesBoton(RSButtonMetro Boton) {//Pone el boton azul
        Boton.setEnabled(true);
        Boton.setColorHover(Color.decode("#01A5E4"));
        Boton.setColorNormal(Color.decode("#0180B0"));
        Boton.setColorPressed(Color.decode("#025F82"));
    }

    public void CambiarImagen(String Usuario, String Nombre, String Imagen) throws IOException {
        Metodos met = new Metodos();
        ArrayList<String[]> registros = met.LeerArchivoDaniel("C:\\ProgramData\\BanQua\\Usuario.txt");
        String nombre;
        String Total = "";
        for (int i = 0; i < registros.size(); i++) {
            nombre = registros.get(i)[2];
            if (nombre.equals(Usuario)) {
                if ((registros.get(i)[0]).equals(Nombre)) {
                    Total = Total + registros.get(i)[0] + "%%%%%" + registros.get(i)[1] + "%%%%%" + registros.get(i)[2] + "%%%%%" + registros.get(i)[3] + "%%%%%" + Imagen + "%%%%%" + registros.get(i)[5] + "\r\n";
                }
            } else {
                Total = Total + registros.get(i)[0] + "%%%%%" + registros.get(i)[1] + "%%%%%" + registros.get(i)[2] + "%%%%%" + registros.get(i)[3] + "%%%%%" + registros.get(i)[4] + "%%%%%" + registros.get(i)[5] + "\r\n";
            }
        }
        File file = new File("C:\\ProgramData\\BanQua\\Usuario.txt");
        FileWriter fw = new FileWriter(file);
        BufferedWriter bw = new BufferedWriter(fw);
        bw.write(AES.encrypt(Total, "BanQuaAES"));
        bw.close();
        fw.close();
    }

    private Asignatura getAsignatura(String nombre) {
        Asignatura asignatura = null;
        for (Asignatura a : profesor.getAsignaturas()) {
            if (a.getNombre().equals(nombre)) {
                asignatura = a;
            }
        }
        return asignatura;
    }

    private Tema getTema(String nombre, Asignatura asignatura) {
        Tema tema = null;
        for (Tema t : asignatura.getTemas()) {
            if (t.getNombre().equals(nombre)) {
                tema = t;
            }
        }
        return tema;
    }

    private void MostrarAsig(Profesor p) {   //Este metodo muestra todas las asignaturas que tiene el profesor
        modelo.setRowCount(0);              //que esta en sesion actualmente
        if (sw1 == true) {
            modelo.setColumnCount(0);
            modelo.addColumn("Asignatura");
            modelo.addColumn("Codigo");
            modelo.addColumn("Descripcion");
            sw1 = false;
        }
        String nom = "";
        String des = "";
        String cod = "";
        for (Asignatura a : p.getAsignaturas()) {
            nom = a.getNombre();
            des = a.getDescripcion();
            cod = a.getCodigo();
            modelo.addRow(new Object[]{nom, cod, des});
        }
        sw2 = true;
        sw3 = true;
    }

    private void MostrarTem(String nombre, Profesor p) {   //Este metodo muestra los temas de una asignatura en especifico
        modelo.setRowCount(0);                             //perteneciente al profesor que esta en sesion
        Asignatura asig = null;
        for (Asignatura a : p.getAsignaturas()) {
            if (a.getNombre().equals(nombre)) {
                asig = a;
            }
        }
        if (sw2 == true) {
            modelo.setColumnCount(0);
            modelo.addColumn("Tema");
            modelo.addColumn("Descripcion");
            sw2 = false;
        }
        String nom = "";
        String des = "";
        for (Tema t : asig.getTemas()) {
            nom = t.getNombre();
            des = t.getDescripcion();
            if (!nom.equals("")) {
                modelo.addRow(new Object[]{nom, des});
            }
        }
        sw1 = true;
        sw3 = true;
    }

    private void MostrarPreg(String x, String y, String z, Profesor p) {   //Esto muestra las preguntas de cierto nivel
        modelo.setRowCount(0);                                             //pertenecientes a un tema en especifico, que
        Asignatura asig = null;                                            //pertenece a una asignatura en especifico del                      
        Tema tem = null;                                                   //profesor que esta en sesion
        int lvl = Integer.parseInt(z);
        ArrayList<Pregunta> temp = new ArrayList();
        for (Asignatura a : p.getAsignaturas()) {
            if (a.getNombre().equals(x)) {
                asig = a;
            }
        }
        for (Tema t : asig.getTemas()) {
            if (t.getNombre().equals(y)) {
                tem = t;
            }
        }
        if (sw3 == true) {
            modelo.setColumnCount(0);
            modelo.addColumn("Pregunta");
            modelo.addColumn("Estado");
            modelo.addColumn("Ultima vez");
            sw3 = false;
        }
        String pre = "";
        String est = "";
        String fec = "";
        temp = tem.getPreguntas(lvl);
        for (Pregunta pr : temp) {
            pre = pr.getContenido();
            est = pr.getEstado();
            fec = pr.getFecha();
            if (!pre.equals("") && !est.equals("") && !fec.equals("")) {
                modelo.addRow(new Object[]{pre, est, fec});
            }
        }
        sw1 = true;
        sw2 = true;

    }

    private String Aleatorio() {
        ArrayList<Pregunta> preguntas = new ArrayList();
        Profesor pro = new Profesor();
        for (Asignatura asig : pro.getAsignaturas()) {
            if (asig.getNombre().equals(asigna.getSelectedItem())) {
                for (Tema tema : asig.getTemas()) {
                    if (tema.getNombre().equals(temas.getSelectedItem())) {
                        return Aleatorio2(tema.getPreguntas(ndif.getSelectedIndex()));
                    }
                }
            }
        }
        return null;

    }

    private String Aleatorio2(ArrayList<Pregunta> p) {
        String a = (String) asigna.getSelectedItem();
        String b = String.valueOf(temas.getSelectedIndex());
        String c = String.valueOf(ndif.getSelectedIndex());
        int tope = p.size();
        if (tope != 0) {
            ArrayList<Pregunta> pregDispo = new ArrayList();
            for (Pregunta pregunta : p) {
                if (pregunta.getEstado().equals("Disponible")) {
                    boolean sw = false;
                    for (String Preguntaselecionada : person) {
                        if (pregunta.getContenido().equals(Preguntaselecionada.split("/@/")[0])) {
                            sw = true;
                        }
                    }
                    if (sw == false) {
                        pregDispo.add(pregunta);
                    }
                }
            }
            int sw = 2;
            if (!pregDispo.isEmpty()) {

                while (sw == 2) {
                    int aleatorio = 0;
                    if (pregDispo.size() > 1) {
                        aleatorio = ThreadLocalRandom.current().nextInt(1, pregDispo.size());
                    } else {
                        aleatorio = 1;
                    }
                    Pregunta po = pregDispo.get(aleatorio - 1);
                    if (po.getEstado().equals("Disponible")) {
                        JOptionPane.showMessageDialog(null, "La pregunta ha sido añadida con exito.");
                        return po.getContenido() + "/@/" + a + "/@/" + b + "/@/" + c + "/@/";
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "El Banco de preguntas seleccionado todas las preguntas /n/r ya han sido usadas anteriormente.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "El Banco de preguntas seleccionado se encuentra vacio,/n/r por favor llenar este banco previamente si desea utilizarlo.");
        }

        return null;

    }

    private void SobreEscribir(ArrayList<String> p) throws IOException {
        for (String inform : p) {
            String[] Contenido = inform.split("/@/");
            String L = "";
            String a = Contenido[1];
            int b = Integer.parseInt(Contenido[2]) - 1;
            int c = Integer.parseInt(Contenido[3]);
            String info = "";
            for (Pregunta preg : profesor.getAsignaturas().get(asigna.getSelectedIndex() - 1).getTemas().get(b).getPreguntas(c)) {
                if (Contenido[0].equals(preg.getContenido())) {
                    preg.setEstado("No Disponible");
                    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
                    Date date = new Date();
                    preg.setFecha(dateFormat.format(date));
                }
                info = preg.getNivel() + "%%%%%" + preg.getContenido() + "%%%%%" + preg.getEstado() + "%%%%%" + preg.getFecha() + "%%%%%";
                L = L + info + "\r\n";
            }
            File f = new File("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/" + a + "/" + profesor.getAsignaturas().get(asigna.getSelectedIndex() - 1).getTemas().get(b).getNombre() + "/Preguntas_" + c + ".txt");
            System.out.println(f);
            try (FileWriter fw = new FileWriter(f)) {
                PrintWriter pw = new PrintWriter(fw);
                pw.write(AES.encrypt(L, "BanQuaAES"));
                pw.close();
            }
        }
    }

    private void LlenarCombo(JComboBox<String> asignatura) {
        Metodos e = new Metodos();
        int h = 0;
        asignatura.removeAllItems();
        asignatura.addItem("...");
        try {
            h = e.Generador_de_Combobox("C:\\ProgramData\\BanQua\\Profesor/" + usuario + "/Asignatura.txt", asignatura, h);
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (h < 1) {
            JOptionPane.showMessageDialog(null, "No hay Asignaturas, deberia agregar alguna.");
        }
    }
    
    private String FechaDef(String Fecha) {
        String[] elementos = Fecha.split("/");
        String Semestre="";
        int mes = (Integer.parseInt(elementos[1])+Integer.parseInt(Semestre))%12;
        int año = (Integer.parseInt(elementos[1])+Integer.parseInt(Semestre))/12;
        if(año>0){
        elementos[2]=String.valueOf(Integer.parseInt(elementos[2])+año);
        }
        elementos[1]=String.valueOf(mes);
        return elementos[0]+"/"+elementos[1]+"/"+elementos[2];
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AdAsig;
    private javax.swing.JLabel AdAsig1;
    private javax.swing.JLabel AdAsig11;
    private javax.swing.JLabel AdAsig12;
    private javax.swing.JLabel AdAsig14;
    private javax.swing.JLabel AdAsig2;
    private javax.swing.JLabel AdAsig3;
    private javax.swing.JLabel AdAsig4;
    private javax.swing.JLabel AdAsig5;
    private javax.swing.JLabel AdAsig6;
    private javax.swing.JLabel AdDif;
    private javax.swing.JLabel AdTem;
    private javax.swing.JLabel AdTema;
    private javax.swing.JCheckBox AgregarDescripcion;
    private javax.swing.JCheckBox AgregarDescripcionTema;
    private javax.swing.JLabel AsAd;
    private javax.swing.JComboBox<String> Asig2;
    private javax.swing.JComboBox<String> Asig3;
    private javax.swing.JPanel Asignatura;
    private javax.swing.JLabel AvisoNumeros;
    private rsbuttom.RSButtonMetro BotonDesBloqueo;
    private rsbuttom.RSButtonMetro BottonAsignatura;
    private rsbuttom.RSButtonMetro BottonCamContra;
    private rsbuttom.RSButtonMetro BottonCambiarDeUsuario;
    private rsbuttom.RSButtonMetro BottonEditAsig;
    private rsbuttom.RSButtonMetro BottonEditFoto;
    private rsbuttom.RSButtonMetro BottonEditInfo;
    private rsbuttom.RSButtonMetro BottonGenrExam;
    private rsbuttom.RSButtonMetro BottonGenrExam1;
    private rsbuttom.RSButtonMetro BottonGenrExam2;
    private rsbuttom.RSButtonMetro BottonHome;
    private rsbuttom.RSButtonMetro BottonPerfil;
    private rsbuttom.RSButtonMetro BottonPreguntas;
    private rsbuttom.RSButtonMetro BottonTemas;
    private rsbuttom.RSButtonMetro BottonVerInfo;
    private rsbuttom.RSButtonMetro BottonVerInfo1;
    private rsbuttom.RSButtonMetro BottonVerInfo2;
    private rsbuttom.RSButtonMetro BottonVerInfo3;
    private rsbuttom.RSButtonMetro ButtomEditPreg;
    private rsbuttom.RSButtonMetro ButtomEditPreg1;
    private rsbuttom.RSButtonMetro ButtomEditTem;
    private rsbuttom.RSButtonMetro ButtonAddPreg;
    private rsbuttom.RSButtonMetro ButtonAgregarPregunta;
    private rsbuttom.RSButtonMetro ButtonAgregarTema;
    private rsbuttom.RSButtonMetro ButtonCambio;
    private rsbuttom.RSButtonMetro ButtonGenerarInforme;
    private rsbuttom.RSButtonMetro ButtonGuardarFoto;
    private rsbuttom.RSButtonMetro ButtonMostrarCENT;
    private rsbuttom.RSButtonMetro ButtonMostrarDER;
    private rsbuttom.RSButtonMetro ButtonMostrarIZQ;
    private javax.swing.JTextField Cedula1;
    private javax.swing.JTextField CodEditAsig;
    private javax.swing.JComboBox<String> ComboAsigEdit;
    private javax.swing.JComboBox<String> ComboAsigPreg;
    private javax.swing.JComboBox<String> ComboAsignatura;
    private javax.swing.JComboBox<String> ComboAsignaturaS;
    private javax.swing.JComboBox<String> ComboBoxTemas;
    private javax.swing.JComboBox<String> ComboNivPreg;
    private javax.swing.JComboBox<String> ComboNivel;
    private javax.swing.JComboBox<String> ComboNivelA;
    private javax.swing.JComboBox<String> ComboTemPreg;
    private javax.swing.JTextField CorreoPerfil;
    private javax.swing.JButton DesButto;
    private javax.swing.JTextArea DesEditAsig;
    private javax.swing.JTextArea DesEditTem;
    private javax.swing.JTextArea Descripcion;
    private javax.swing.JTextArea DescripcionTema;
    private javax.swing.JPanel EditAsig;
    private javax.swing.JPanel EditPreg;
    private javax.swing.JPanel EditTem;
    private rsbuttom.RSButtonMetro EditarAsignatura1;
    private rsbuttom.RSButtonMetro EditarPreguntas1;
    private rsbuttom.RSButtonMetro EditarTemas1;
    private rsbuttom.RSButtonMetro ElemEditPreg;
    private rsbuttom.RSButtonMetro ElimEditAsig;
    private rsbuttom.RSButtonMetro ElimEditTem;
    private javax.swing.JTextField EstadPreg;
    private com.toedter.calendar.JDateChooser FechaPreg;
    private javax.swing.JPanel Fondo;
    private javax.swing.JLabel Foto1;
    private javax.swing.JLabel Foto2;
    private javax.swing.JPanel Generar;
    private rsbuttom.RSButtonMetro GuaEditAsig;
    private rsbuttom.RSButtonMetro GuarEditPreg;
    private rsbuttom.RSButtonMetro GuarEditPreg1;
    private rsbuttom.RSButtonMetro GuardarTem;
    private javax.swing.JPanel Home;
    private javax.swing.JTextArea InfoPreg;
    private javax.swing.JLabel InfoTem;
    private javax.swing.JTabbedPane Menu;
    private javax.swing.JLabel NivAd;
    private javax.swing.JLabel NivInfo;
    private javax.swing.JTextField NomEditAsig;
    private javax.swing.JTextField NomEditTem;
    private javax.swing.JTextField Nombre1;
    private javax.swing.JTextField NombreDelTema;
    private javax.swing.JTextField NombreDelaAsignatura;
    private javax.swing.JPasswordField NuevaContra;
    private javax.swing.JPanel PanelMenu;
    private javax.swing.JPanel Perfil;
    private javax.swing.JLabel PregActual;
    private javax.swing.JPanel Pregunta;
    private javax.swing.JTextArea Preguntas;
    private javax.swing.JLabel SeAd;
    private javax.swing.JLabel Separador;
    private javax.swing.JTabbedPane SubMenu;
    private javax.swing.JTable TablaAsig;
    private javax.swing.JTable TablaPreg;
    private javax.swing.JTable TablaPregEdit;
    private javax.swing.JTable TablaTem;
    private javax.swing.JLabel TemAd;
    private javax.swing.JPanel Tema;
    private javax.swing.JTextField Usuario1;
    private javax.swing.JPasswordField ValNuevaContra;
    private javax.swing.JPanel Ver;
    private rsbuttom.RSButtonMetro addAsig;
    private javax.swing.JComboBox<String> asigna;
    private javax.swing.JTextField codMat;
    private javax.swing.JTextField evaluacion;
    private com.toedter.calendar.JDateChooser fecha;
    private rsbuttom.RSButtonMetro generarExamen;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JComboBox<String> ndif;
    private javax.swing.JComboBox<String> nivel;
    private javax.swing.JTextField nombre;
    private javax.swing.JTextField preg;
    private javax.swing.JComboBox<String> seme;
    private javax.swing.JComboBox<String> tema;
    private javax.swing.JComboBox<String> temas;
    // End of variables declaration//GEN-END:variables
}
